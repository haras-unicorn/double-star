# This file was @generated by cargo2nix 0.11.0.
# It is not intended to be manually edited.

args@{ release ? true
, rootFeatures ? [
    "orbitus/default"
    "gravity/default"
    "double-star/default"
    "nebulon/default"
  ]
, rustPackages
, buildRustPackages
, hostPlatform
, hostPlatformCpu ? null
, hostPlatformFeatures ? [ ]
, target ? null
, codegenOpts ? null
, profileOpts ? null
, cargoUnstableFlags ? null
, rustcLinkFlags ? null
, rustcBuildFlags ? null
, mkRustCrate
, rustLib
, lib
, workspaceSrc
, ignoreLockHash
,
}:
let
  nixifiedLockHash = "1bd236fa1055ef50f2547d1757e0e77042f3eb6da3236cb5f5c17d44f96c78d3";
  workspaceSrc = if args.workspaceSrc == null then ./. else args.workspaceSrc;
  currentLockHash = builtins.hashFile "sha256" (workspaceSrc + /Cargo.lock);
  lockHashIgnored =
    if ignoreLockHash
    then builtins.trace "Ignoring lock hash" ignoreLockHash
    else ignoreLockHash;
in
if !lockHashIgnored && (nixifiedLockHash != currentLockHash) then
  throw ("Cargo.nix ${nixifiedLockHash} is out of sync with Cargo.lock ${currentLockHash}")
else
  let
    inherit (rustLib) fetchCratesIo fetchCrateLocal fetchCrateGit fetchCrateAlternativeRegistry expandFeatures decideProfile genDrvsByProfile;
    profilesByName = { };
    rootFeatures' = expandFeatures rootFeatures;
    overridableMkRustCrate = f:
      let
        drvs = genDrvsByProfile profilesByName ({ profile, profileName }: mkRustCrate ({ inherit release profile hostPlatformCpu hostPlatformFeatures target profileOpts codegenOpts cargoUnstableFlags rustcLinkFlags rustcBuildFlags; } // (f profileName)));
      in
      { compileMode ? null, profileName ? decideProfile compileMode release }:
      let drv = drvs.${profileName}; in if compileMode == null then drv else drv.override { inherit compileMode; };
  in
  {
    cargo2nixVersion = "0.11.0";
    workspace = {
      orbitus = rustPackages.unknown.orbitus."0.1.0";
      gravity = rustPackages.unknown.gravity."0.1.0";
      double-star = rustPackages.unknown.double-star."0.1.0";
      nebulon = rustPackages.unknown.nebulon."0.1.0";
    };
    "registry+https://github.com/rust-lang/crates.io-index".Inflector."0.11.4" = overridableMkRustCrate (profileName: rec {
      name = "Inflector";
      version = "0.11.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "fe438c63458706e03479442743baae6c88256498e6431708f6dfc520a26515d3"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "heavyweight" ]
        [ "lazy_static" ]
        [ "regex" ]
      ];
      dependencies = {
        lazy_static = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.5.0" { inherit profileName; }).out;
        regex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.11.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ab_glyph."0.2.29" = overridableMkRustCrate (profileName: rec {
      name = "ab_glyph";
      version = "0.2.29";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ec3672c180e71eeaaac3a541fbbc5f5ad4def8b747c595ad30d674e43049f7b0"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
        [ "variable-fonts" ]
      ];
      dependencies = {
        ab_glyph_rasterizer = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ab_glyph_rasterizer."0.1.8" { inherit profileName; }).out;
        owned_ttf_parser = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".owned_ttf_parser."0.25.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ab_glyph_rasterizer."0.1.8" = overridableMkRustCrate (profileName: rec {
      name = "ab_glyph_rasterizer";
      version = "0.1.8";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c71b1793ee61086797f5c80b6efa2b8ffa6d5dd703f118545808a7f2e27f7046"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".addr."0.15.6" = overridableMkRustCrate (profileName: rec {
      name = "addr";
      version = "0.15.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a93b8a41dbe230ad5087cc721f8d41611de654542180586b315d9f4cf6b72bef"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
      dependencies = {
        psl_types = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".psl-types."2.0.11" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".addr2line."0.21.0" = overridableMkRustCrate (profileName: rec {
      name = "addr2line";
      version = "0.21.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8a30b2e23b9e17a9f90641c7ab1549cd9b44f296d3ccbf309d2863cfe398a0cb"; };
      dependencies = {
        gimli = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".gimli."0.28.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".adler."1.0.2" = overridableMkRustCrate (profileName: rec {
      name = "adler";
      version = "1.0.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f26201604c87b1e01bd3d98f8d5d9a8fcbb815e8cedb41ffccbeb4bf593a35fe"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".adler2."2.0.0" = overridableMkRustCrate (profileName: rec {
      name = "adler2";
      version = "2.0.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "512761e0bb2578dd7380c6baaa0f4ce03e84f95e960231d1dec8bf4d7d6e2627"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ahash."0.7.8" = overridableMkRustCrate (profileName: rec {
      name = "ahash";
      version = "0.7.8";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "891477e0c6a8957309ee5c45a6368af3ae14bb510732d2684ffa19af310920f9"; };
      dependencies = {
        ${ if hostPlatform.parsed.kernel.name == "linux" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "windows" || hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios" || hostPlatform.parsed.kernel.name == "freebsd" || hostPlatform.parsed.kernel.name == "openbsd" || hostPlatform.parsed.kernel.name == "netbsd" || hostPlatform.parsed.kernel.name == "dragonfly" || hostPlatform.parsed.kernel.name == "solaris" || hostPlatform.parsed.kernel.name == "illumos" || hostPlatform.parsed.kernel.name == "fuchsia" || hostPlatform.parsed.kernel.name == "redox" || hostPlatform.parsed.kernel.name == "cloudabi" || hostPlatform.parsed.kernel.name == "haiku" || hostPlatform.parsed.kernel.name == "vxworks" || hostPlatform.parsed.kernel.name == "emscripten" || hostPlatform.parsed.kernel.name == "wasi" then "getrandom" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.15" { inherit profileName; }).out;
        ${ if !((hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l") && hostPlatform.parsed.kernel.name == "none") then "once_cell" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
      };
      buildDependencies = {
        version_check = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.5" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ahash."0.8.11" = overridableMkRustCrate (profileName: rec {
      name = "ahash";
      version = "0.8.11";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e89da841a80418a9b391ebaea17f5c112ffaaa96f621d2c285b5174da76b9011"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "getrandom" ]
        [ "no-rng" ]
        [ "runtime-rng" ]
        [ "std" ]
      ];
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        getrandom = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.15" { inherit profileName; }).out;
        ${ if !((hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l") && hostPlatform.parsed.kernel.name == "none") then "once_cell" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
        zerocopy = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".zerocopy."0.7.35" { inherit profileName; }).out;
      };
      buildDependencies = {
        version_check = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.5" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".aho-corasick."1.1.3" = overridableMkRustCrate (profileName: rec {
      name = "aho-corasick";
      version = "1.1.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "perf-literal" ]
        [ "std" ]
      ];
      dependencies = {
        memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".allocator-api2."0.2.18" = overridableMkRustCrate (profileName: rec {
      name = "allocator-api2";
      version = "0.2.18";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "5c6cb57a04249c6480766f7f7cef5467412af1490f8d1e243141daddada3264f"; };
      features = builtins.concatLists [
        [ "alloc" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".ammonia."4.0.0" = overridableMkRustCrate (profileName: rec {
      name = "ammonia";
      version = "4.0.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1ab99eae5ee58501ab236beb6f20f6ca39be615267b014899c89b2f0bc18a459"; };
      dependencies = {
        html5ever = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".html5ever."0.27.0" { inherit profileName; }).out;
        maplit = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".maplit."1.0.2" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
        tendril = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tendril."0.4.3" { inherit profileName; }).out;
        url = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.5.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".android-activity."0.6.0" = overridableMkRustCrate (profileName: rec {
      name = "android-activity";
      version = "0.6.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ef6978589202a00cd7e118380c448a08b6ed394c3a8df3a430d0898e3a42d046"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        android_properties = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".android-properties."0.2.2" { inherit profileName; }).out;
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        cesu8 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cesu8."1.1.0" { inherit profileName; }).out;
        jni = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".jni."0.21.1" { inherit profileName; }).out;
        jni_sys = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".jni-sys."0.3.0" { inherit profileName; }).out;
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        ndk = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ndk."0.9.0" { inherit profileName; }).out;
        ndk_context = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ndk-context."0.1.1" { inherit profileName; }).out;
        ndk_sys = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ndk-sys."0.6.0+11769913" { inherit profileName; }).out;
        num_enum = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_enum."0.7.3" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
      };
      buildDependencies = {
        cc = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.1.31" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".android-properties."0.2.2" = overridableMkRustCrate (profileName: rec {
      name = "android-properties";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "fc7eb209b1518d6bb87b283c20095f5228ecda460da70b44f0802523dea6da04"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".android-tzdata."0.1.1" = overridableMkRustCrate (profileName: rec {
      name = "android-tzdata";
      version = "0.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e999941b234f3131b00bc13c22d06e8c5ff726d1b6318ac7eb276997bbb4fef0"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".android_system_properties."0.1.5" = overridableMkRustCrate (profileName: rec {
      name = "android_system_properties";
      version = "0.1.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "819e7219dbd41043ac279b19830f2efc897156490d7fd6ea916720117ee66311"; };
      dependencies = {
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".anstream."0.6.17" = overridableMkRustCrate (profileName: rec {
      name = "anstream";
      version = "0.6.17";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "23a1e53f0f5d86382dafe1cf314783b2044280f406e7e1506368220ad11b1338"; };
      features = builtins.concatLists [
        [ "auto" ]
        [ "default" ]
        [ "wincon" ]
      ];
      dependencies = {
        anstyle = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".anstyle."1.0.9" { inherit profileName; }).out;
        anstyle_parse = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".anstyle-parse."0.2.6" { inherit profileName; }).out;
        anstyle_query = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".anstyle-query."1.1.2" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "anstyle_wincon" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".anstyle-wincon."3.0.6" { inherit profileName; }).out;
        colorchoice = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".colorchoice."1.0.3" { inherit profileName; }).out;
        is_terminal_polyfill = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".is_terminal_polyfill."1.70.1" { inherit profileName; }).out;
        utf8parse = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".utf8parse."0.2.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".anstyle."1.0.9" = overridableMkRustCrate (profileName: rec {
      name = "anstyle";
      version = "1.0.9";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8365de52b16c035ff4fcafe0092ba9390540e3e352870ac09933bebcaa2c8c56"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".anstyle-parse."0.2.6" = overridableMkRustCrate (profileName: rec {
      name = "anstyle-parse";
      version = "0.2.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3b2d16507662817a6a20a9ea92df6652ee4f94f914589377d69f3b21bc5798a9"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "utf8" ]
      ];
      dependencies = {
        utf8parse = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".utf8parse."0.2.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".anstyle-query."1.1.2" = overridableMkRustCrate (profileName: rec {
      name = "anstyle-query";
      version = "1.1.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "79947af37f4177cfead1110013d678905c37501914fba0efea834c3fe9a8d60c"; };
      dependencies = {
        ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.59.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".anstyle-wincon."3.0.6" = overridableMkRustCrate (profileName: rec {
      name = "anstyle-wincon";
      version = "3.0.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2109dbce0e72be3ec00bed26e6a7479ca384ad226efdd66db8fa2e3a38c83125"; };
      dependencies = {
        anstyle = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".anstyle."1.0.9" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.59.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".any_ascii."0.3.2" = overridableMkRustCrate (profileName: rec {
      name = "any_ascii";
      version = "0.3.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ea50b14b7a4b9343f8c627a7a53c52076482bd4bdad0a24fd3ec533ed616cc2c"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.91" = overridableMkRustCrate (profileName: rec {
      name = "anyhow";
      version = "1.0.91";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c042108f3ed77fd83760a5fd79b53be043192bb3b9dba91d8c574c0ada7850c8"; };
      features = builtins.concatLists [
        [ "backtrace" ]
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        backtrace = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".backtrace."0.3.71" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".approx."0.4.0" = overridableMkRustCrate (profileName: rec {
      name = "approx";
      version = "0.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3f2a05fd1bd10b2527e20a2cd32d8873d115b8b39fe219ee25f42a8aca6ba278"; };
      dependencies = {
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".approx."0.5.1" = overridableMkRustCrate (profileName: rec {
      name = "approx";
      version = "0.5.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "cab112f0a86d568ea0e627cc1d6be74a1e9cd55214684db5561995f6dad897c6"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
      dependencies = {
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".arbitrary."1.3.2" = overridableMkRustCrate (profileName: rec {
      name = "arbitrary";
      version = "1.3.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7d5a26814d8dcb93b0e5a0ff3c6d80a8843bafb21b39e8e18a6f05471870e110"; };
      features = builtins.concatLists [
        [ "derive" ]
        [ "derive_arbitrary" ]
      ];
      dependencies = {
        derive_arbitrary = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derive_arbitrary."1.3.2" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".argon2."0.5.3" = overridableMkRustCrate (profileName: rec {
      name = "argon2";
      version = "0.5.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3c3610892ee6e0cbce8ae2700349fcf8f98adb0dbfbee85aec3c9179d29cc072"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "password-hash" ]
        [ "rand" ]
      ];
      dependencies = {
        base64ct = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64ct."1.6.0" { inherit profileName; }).out;
        blake2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".blake2."0.10.6" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" then "cpufeatures" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cpufeatures."0.2.14" { inherit profileName; }).out;
        password_hash = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".password-hash."0.5.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".arrayref."0.3.9" = overridableMkRustCrate (profileName: rec {
      name = "arrayref";
      version = "0.3.9";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "76a2e8124351fda1ef8aaaa3bbd7ebbcb486bbcd4225aca0aa0d84bb2db8fecb"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.7.4" = overridableMkRustCrate (profileName: rec {
      name = "arrayvec";
      version = "0.7.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "96d30a06541fbafbc7f82ed10c06164cfbd2c401138f6addd8404629c4b16711"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".as-raw-xcb-connection."1.0.1" = overridableMkRustCrate (profileName: rec {
      name = "as-raw-xcb-connection";
      version = "1.0.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "175571dd1d178ced59193a6fc02dde1b972eb0bc56c892cde9beeceac5bf0f6b"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".ascii-canvas."3.0.0" = overridableMkRustCrate (profileName: rec {
      name = "ascii-canvas";
      version = "3.0.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8824ecca2e851cec16968d54a01dd372ef8f95b244fb84b84e70128be347c3c6"; };
      dependencies = {
        term = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".term."0.7.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ash."0.37.3+1.3.251" = overridableMkRustCrate (profileName: rec {
      name = "ash";
      version = "0.37.3+1.3.251";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "39e9c3835d686b0a6084ab4234fcd1b07dbf6e4767dce60874b12356a25ecd4a"; };
      features = builtins.concatLists [
        [ "debug" ]
        [ "default" ]
        [ "libloading" ]
        [ "loaded" ]
      ];
      dependencies = {
        libloading = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libloading."0.7.4" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".async-broadcast."0.7.1" = overridableMkRustCrate (profileName: rec {
      name = "async-broadcast";
      version = "0.7.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "20cd0e2e25ea8e5f7e9df04578dc6cf5c83577fd09b1a46aaf5c85e1c33f2a7e"; };
      dependencies = {
        event_listener = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".event-listener."5.3.1" { inherit profileName; }).out;
        event_listener_strategy = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".event-listener-strategy."0.5.2" { inherit profileName; }).out;
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.31" { inherit profileName; }).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.15" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".async-channel."1.9.0" = overridableMkRustCrate (profileName: rec {
      name = "async-channel";
      version = "1.9.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "81953c529336010edd6d8e358f886d9581267795c61b19475b71314bffa46d35"; };
      dependencies = {
        concurrent_queue = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".concurrent-queue."2.5.0" { inherit profileName; }).out;
        event_listener = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".event-listener."2.5.3" { inherit profileName; }).out;
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.31" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".async-channel."2.3.1" = overridableMkRustCrate (profileName: rec {
      name = "async-channel";
      version = "2.3.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "89b47800b0be77592da0afd425cc03468052844aff33b84e33cc696f64e77b6a"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        concurrent_queue = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".concurrent-queue."2.5.0" { inherit profileName; }).out;
        event_listener_strategy = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".event-listener-strategy."0.5.2" { inherit profileName; }).out;
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.31" { inherit profileName; }).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.15" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".async-executor."1.13.1" = overridableMkRustCrate (profileName: rec {
      name = "async-executor";
      version = "1.13.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "30ca9a001c1e8ba5149f91a74362376cc6bc5b919d92d988668657bd570bdcec"; };
      dependencies = {
        async_task = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-task."4.7.1" { inherit profileName; }).out;
        concurrent_queue = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".concurrent-queue."2.5.0" { inherit profileName; }).out;
        fastrand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".fastrand."2.1.1" { inherit profileName; }).out;
        futures_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-lite."2.3.0" { inherit profileName; }).out;
        slab = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".slab."0.4.9" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".async-fs."2.1.2" = overridableMkRustCrate (profileName: rec {
      name = "async-fs";
      version = "2.1.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ebcd09b382f40fcd159c2d695175b2ae620ffa5f3bd6f664131efff4e8b9e04a"; };
      dependencies = {
        async_lock = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-lock."3.4.0" { inherit profileName; }).out;
        blocking = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".blocking."1.6.1" { inherit profileName; }).out;
        futures_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-lite."2.3.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".async-graphql."7.0.11" = overridableMkRustCrate (profileName: rec {
      name = "async-graphql";
      version = "7.0.11";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0ba6d24703c5adc5ba9116901b92ee4e4c0643c01a56c4fd303f3818638d7449"; };
      features = builtins.concatLists [
        [ "dynamic-schema" ]
      ];
      dependencies = {
        async_graphql_derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-graphql-derive."7.0.11" { profileName = "__noProfile"; }).out;
        async_graphql_parser = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-graphql-parser."7.0.11" { inherit profileName; }).out;
        async_graphql_value = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-graphql-value."7.0.11" { inherit profileName; }).out;
        async_stream = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-stream."0.3.6" { inherit profileName; }).out;
        async_trait = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.83" { profileName = "__noProfile"; }).out;
        base64 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.22.1" { inherit profileName; }).out;
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.8.0" { inherit profileName; }).out;
        fnv = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.7" { inherit profileName; }).out;
        futures_timer = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-timer."3.0.3" { inherit profileName; }).out;
        futures_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.31" { inherit profileName; }).out;
        http = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."1.1.0" { inherit profileName; }).out;
        indexmap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."2.6.0" { inherit profileName; }).out;
        mime = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".mime."0.3.17" { inherit profileName; }).out;
        multer = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".multer."3.1.0" { inherit profileName; }).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.15" { inherit profileName; }).out;
        regex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.11.1" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        serde_json = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.132" { inherit profileName; }).out;
        serde_urlencoded = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_urlencoded."0.7.1" { inherit profileName; }).out;
        static_assertions_next = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".static_assertions_next."1.1.2" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".async-graphql-derive."7.0.11" = overridableMkRustCrate (profileName: rec {
      name = "async-graphql-derive";
      version = "7.0.11";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a94c2d176893486bd37cd1b6defadd999f7357bf5804e92f510c08bcf16c538f"; };
      dependencies = {
        inflector = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".Inflector."0.11.4" { inherit profileName; }).out;
        async_graphql_parser = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-graphql-parser."7.0.11" { inherit profileName; }).out;
        darling = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".darling."0.20.10" { inherit profileName; }).out;
        proc_macro_crate = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro-crate."3.2.0" { inherit profileName; }).out;
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        strum = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".strum."0.26.3" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".async-graphql-parser."7.0.11" = overridableMkRustCrate (profileName: rec {
      name = "async-graphql-parser";
      version = "7.0.11";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "79272bdbf26af97866e149f05b2b546edb5c00e51b5f916289931ed233e208ad"; };
      dependencies = {
        async_graphql_value = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-graphql-value."7.0.11" { inherit profileName; }).out;
        pest = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pest."2.7.14" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        serde_json = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.132" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".async-graphql-value."7.0.11" = overridableMkRustCrate (profileName: rec {
      name = "async-graphql-value";
      version = "7.0.11";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ef5ec94176a12a8cbe985cd73f2e54dc9c702c88c766bdef12f1f3a67cedbee1"; };
      dependencies = {
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.8.0" { inherit profileName; }).out;
        indexmap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."2.6.0" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        serde_json = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.132" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".async-io."2.3.4" = overridableMkRustCrate (profileName: rec {
      name = "async-io";
      version = "2.3.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "444b0228950ee6501b3568d3c93bf1176a1fdbc3b758dcd9475046d30f4dc7e8"; };
      dependencies = {
        async_lock = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-lock."3.4.0" { inherit profileName; }).out;
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        concurrent_queue = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".concurrent-queue."2.5.0" { inherit profileName; }).out;
        futures_io = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-io."0.3.31" { inherit profileName; }).out;
        futures_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-lite."2.3.0" { inherit profileName; }).out;
        parking = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking."2.2.1" { inherit profileName; }).out;
        polling = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".polling."3.7.3" { inherit profileName; }).out;
        rustix = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustix."0.38.37" { inherit profileName; }).out;
        slab = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".slab."0.4.9" { inherit profileName; }).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.59.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".async-lock."3.4.0" = overridableMkRustCrate (profileName: rec {
      name = "async-lock";
      version = "3.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ff6e472cdea888a4bd64f342f09b3f50e1886d32afe8df3d663c01140b811b18"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        event_listener = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".event-listener."5.3.1" { inherit profileName; }).out;
        event_listener_strategy = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".event-listener-strategy."0.5.2" { inherit profileName; }).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.15" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".async-process."2.3.0" = overridableMkRustCrate (profileName: rec {
      name = "async-process";
      version = "2.3.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "63255f1dc2381611000436537bbedfe83183faa303a5a0edaf191edef06526bb"; };
      dependencies = {
        ${ if hostPlatform.isWindows || hostPlatform.parsed.kernel.name == "linux" then "async_channel" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-channel."2.3.1" { inherit profileName; }).out;
        async_io = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-io."2.3.4" { inherit profileName; }).out;
        async_lock = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-lock."3.4.0" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix then "async_signal" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-signal."0.2.10" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows || hostPlatform.parsed.kernel.name == "linux" then "async_task" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-task."4.7.1" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "blocking" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".blocking."1.6.1" { inherit profileName; }).out;
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        event_listener = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".event-listener."5.3.1" { inherit profileName; }).out;
        futures_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-lite."2.3.0" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "linux") || hostPlatform.isUnix then "rustix" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustix."0.38.37" { inherit profileName; }).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".async-recursion."1.1.1" = overridableMkRustCrate (profileName: rec {
      name = "async-recursion";
      version = "1.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3b43422f69d8ff38f95f1b2bb76517c91589a924d1559a0e935d7c8ce0274c11"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".async-signal."0.2.10" = overridableMkRustCrate (profileName: rec {
      name = "async-signal";
      version = "0.2.10";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "637e00349800c0bdf8bfc21ebbc0b6524abea702b0da4168ac00d070d0c0b9f3"; };
      dependencies = {
        ${ if hostPlatform.isUnix then "async_io" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-io."2.3.4" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "async_lock" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-lock."3.4.0" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "atomic_waker" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".atomic-waker."1.1.2" { inherit profileName; }).out;
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.31" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix then "futures_io" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-io."0.3.31" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix then "rustix" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustix."0.38.37" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix then "signal_hook_registry" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".signal-hook-registry."1.4.2" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "slab" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".slab."0.4.9" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.59.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".async-stream."0.3.6" = overridableMkRustCrate (profileName: rec {
      name = "async-stream";
      version = "0.3.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0b5a71a6f37880a80d1d7f19efd781e4b5de42c88f0722cc13bcb6cc2cfe8476"; };
      dependencies = {
        async_stream_impl = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-stream-impl."0.3.6" { profileName = "__noProfile"; }).out;
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.31" { inherit profileName; }).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.15" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".async-stream-impl."0.3.6" = overridableMkRustCrate (profileName: rec {
      name = "async-stream-impl";
      version = "0.3.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c7c24de15d275a1ecfd47a380fb4d5ec9bfe0933f309ed5e705b775596a3574d"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".async-task."4.7.1" = overridableMkRustCrate (profileName: rec {
      name = "async-task";
      version = "4.7.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8b75356056920673b02621b35afd0f7dda9306d03c79a30f5c56c44cf256e3de"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.83" = overridableMkRustCrate (profileName: rec {
      name = "async-trait";
      version = "0.1.83";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "721cae7de5c34fbb2acd27e21e6d2cf7b886dce0c27388d46c4e6c47ea4318dd"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".async_io_stream."0.3.3" = overridableMkRustCrate (profileName: rec {
      name = "async_io_stream";
      version = "0.3.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b6d7b9decdf35d8908a7e3ef02f64c5e9b1695e230154c0e8de3969142d9b94c"; };
      features = builtins.concatLists [
        [ "map_pharos" ]
        [ "pharos" ]
      ];
      dependencies = {
        futures = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.31" { inherit profileName; }).out;
        pharos = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pharos."0.5.3" { inherit profileName; }).out;
      };
      buildDependencies = {
        rustc_version = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc_version."0.4.1" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".atomic-waker."1.1.2" = overridableMkRustCrate (profileName: rec {
      name = "atomic-waker";
      version = "1.1.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1505bd5d3d116872e7271a6d4e16d81d0c8570876c8de68093a09ac269d8aac0"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".autocfg."1.4.0" = overridableMkRustCrate (profileName: rec {
      name = "autocfg";
      version = "1.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ace50bade8e6234aa140d9a2f552bbee1db4d353f69b8217bc503490fc1a9f26"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".backtrace."0.3.71" = overridableMkRustCrate (profileName: rec {
      name = "backtrace";
      version = "0.3.71";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "26b05800d2e817c8b3b4b54abd461726265fa9789ae34330622f2db9ee696f9d"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "gimli-symbolize" ]
        [ "std" ]
      ];
      dependencies = {
        ${ if !(hostPlatform.isWindows && hostPlatform.parsed.abi.name == "msvc" && !(hostPlatform.parsed.vendor.name == "uwp")) then "addr2line" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".addr2line."0.21.0" { inherit profileName; }).out;
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        ${ if !(hostPlatform.isWindows && hostPlatform.parsed.abi.name == "msvc" && !(hostPlatform.parsed.vendor.name == "uwp")) then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        ${ if !(hostPlatform.isWindows && hostPlatform.parsed.abi.name == "msvc" && !(hostPlatform.parsed.vendor.name == "uwp")) then "miniz_oxide" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.7.4" { inherit profileName; }).out;
        ${ if !(hostPlatform.isWindows && hostPlatform.parsed.abi.name == "msvc" && !(hostPlatform.parsed.vendor.name == "uwp")) then "object" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".object."0.32.2" { inherit profileName; }).out;
        rustc_demangle = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-demangle."0.1.24" { inherit profileName; }).out;
      };
      buildDependencies = {
        cc = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.1.31" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".base64."0.13.1" = overridableMkRustCrate (profileName: rec {
      name = "base64";
      version = "0.13.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9e1b586273c5702936fe7b7d6896644d8be71e6314cfe09d3167c95f712589e8"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".base64."0.21.7" = overridableMkRustCrate (profileName: rec {
      name = "base64";
      version = "0.21.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9d297deb1925b89f2ccc13d7635fa0714f12c87adce1c75356b39ca9b7178567"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".base64."0.22.1" = overridableMkRustCrate (profileName: rec {
      name = "base64";
      version = "0.22.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "72b3254f16251a8381aa12e40e3c4d2f0199f8c6508fbecb9d91f575e0fbb8c6"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".base64ct."1.6.0" = overridableMkRustCrate (profileName: rec {
      name = "base64ct";
      version = "1.6.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8c3c1a368f70d6cf7302d78f8f7093da241fb8e8807c05cc9e51a125895a6d5b"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".bcrypt."0.15.1" = overridableMkRustCrate (profileName: rec {
      name = "bcrypt";
      version = "0.15.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e65938ed058ef47d92cf8b346cc76ef48984572ade631927e9937b5ffc7662c7"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "getrandom" ]
        [ "std" ]
        [ "zeroize" ]
      ];
      dependencies = {
        base64 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.22.1" { inherit profileName; }).out;
        blowfish = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".blowfish."0.9.1" { inherit profileName; }).out;
        getrandom = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.15" { inherit profileName; }).out;
        subtle = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".subtle."2.6.1" { inherit profileName; }).out;
        zeroize = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".zeroize."1.8.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".bincode."1.3.3" = overridableMkRustCrate (profileName: rec {
      name = "bincode";
      version = "1.3.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b1f45e9417d87227c7a56d22e471c6206462cba514c7590c09aff4cf6d1ddcad"; };
      dependencies = {
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".bindgen_cuda."0.1.5" = overridableMkRustCrate (profileName: rec {
      name = "bindgen_cuda";
      version = "0.1.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1f8489af5b7d17a81bffe37e0f4d6e1e4de87c87329d05447f22c35d95a1227d"; };
      dependencies = {
        glob = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".glob."0.3.1" { inherit profileName; }).out;
        num_cpus = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.16.0" { inherit profileName; }).out;
        rayon = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon."1.10.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".bit-set."0.5.3" = overridableMkRustCrate (profileName: rec {
      name = "bit-set";
      version = "0.5.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0700ddab506f33b20a03b13996eccd309a48e5ff77d0d95926aa0210fb4e95f1"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        bit_vec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bit-vec."0.6.3" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".bit-vec."0.6.3" = overridableMkRustCrate (profileName: rec {
      name = "bit-vec";
      version = "0.6.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "349f9b6a179ed607305526ca489b34ad0a41aed5f7980fa90eb03160b69598fb"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" = overridableMkRustCrate (profileName: rec {
      name = "bitflags";
      version = "1.3.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" = overridableMkRustCrate (profileName: rec {
      name = "bitflags";
      version = "2.6.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".bitvec."1.0.1" = overridableMkRustCrate (profileName: rec {
      name = "bitvec";
      version = "1.0.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1bc2832c24239b0141d5674bb9174f9d68a8b5b3f2753311927c172ca46f7e9c"; };
      features = builtins.concatLists [
        [ "alloc" ]
      ];
      dependencies = {
        funty = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".funty."2.0.0" { inherit profileName; }).out;
        radium = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".radium."0.7.0" { inherit profileName; }).out;
        tap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tap."1.0.1" { inherit profileName; }).out;
        wyz = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wyz."0.5.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".blake2."0.10.6" = overridableMkRustCrate (profileName: rec {
      name = "blake2";
      version = "0.10.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "46502ad458c9a52b69d4d4d32775c788b7a1b85e8bc9d482d92250fc0e3f8efe"; };
      dependencies = {
        digest = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.10.7" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".blake3."1.5.4" = overridableMkRustCrate (profileName: rec {
      name = "blake3";
      version = "1.5.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d82033247fd8e890df8f740e407ad4d038debb9eb1f40533fffb32e7d17dc6f7"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        arrayref = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayref."0.3.9" { inherit profileName; }).out;
        arrayvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.7.4" { inherit profileName; }).out;
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        constant_time_eq = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".constant_time_eq."0.3.1" { inherit profileName; }).out;
      };
      buildDependencies = {
        cc = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.1.31" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".block."0.1.6" = overridableMkRustCrate (profileName: rec {
      name = "block";
      version = "0.1.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0d8c1fef690941d3e7788d328517591fecc684c084084702d6ff1641e993699a"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".block-buffer."0.10.4" = overridableMkRustCrate (profileName: rec {
      name = "block-buffer";
      version = "0.10.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71"; };
      dependencies = {
        generic_array = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".generic-array."0.14.7" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".block2."0.5.1" = overridableMkRustCrate (profileName: rec {
      name = "block2";
      version = "0.5.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2c132eebf10f5cad5289222520a4a058514204aed6d791f1cf4fe8088b82d15f"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        objc2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2."0.5.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".blocking."1.6.1" = overridableMkRustCrate (profileName: rec {
      name = "blocking";
      version = "1.6.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "703f41c54fc768e63e091340b424302bb1c29ef4aa0c7f10fe849dfb114d29ea"; };
      dependencies = {
        async_channel = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-channel."2.3.1" { inherit profileName; }).out;
        async_task = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-task."4.7.1" { inherit profileName; }).out;
        futures_io = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-io."0.3.31" { inherit profileName; }).out;
        futures_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-lite."2.3.0" { inherit profileName; }).out;
        piper = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".piper."0.2.4" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".blowfish."0.9.1" = overridableMkRustCrate (profileName: rec {
      name = "blowfish";
      version = "0.9.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e412e2cd0f2b2d93e02543ceae7917b3c70331573df19ee046bcbc35e45e87d7"; };
      features = builtins.concatLists [
        [ "bcrypt" ]
      ];
      dependencies = {
        byteorder = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.5.0" { inherit profileName; }).out;
        cipher = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cipher."0.4.4" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".borsh."1.5.1" = overridableMkRustCrate (profileName: rec {
      name = "borsh";
      version = "1.5.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a6362ed55def622cddc70a4746a68554d7b687713770de539e59a739b249f8ed"; };
      features = builtins.concatLists [
        [ "borsh-derive" ]
        [ "derive" ]
        [ "std" ]
        [ "unstable__schema" ]
      ];
      dependencies = {
        borsh_derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".borsh-derive."1.5.1" { profileName = "__noProfile"; }).out;
      };
      buildDependencies = {
        cfg_aliases = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg_aliases."0.2.1" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".borsh-derive."1.5.1" = overridableMkRustCrate (profileName: rec {
      name = "borsh-derive";
      version = "1.5.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c3ef8005764f53cd4dca619f5bf64cafd4664dada50ece25e4d81de54c80cc0b"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "schema" ]
      ];
      dependencies = {
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
        proc_macro_crate = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro-crate."3.2.0" { inherit profileName; }).out;
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
        syn_derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".syn_derive."0.1.8" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".bumpalo."3.16.0" = overridableMkRustCrate (profileName: rec {
      name = "bumpalo";
      version = "3.16.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "79296716171880943b8470b5f8d03aa55eb2e645a4874bdbb28adb49162e012c"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".by_address."1.2.1" = overridableMkRustCrate (profileName: rec {
      name = "by_address";
      version = "1.2.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "64fa3c856b712db6612c019f14756e64e4bcea13337a6b33b696333a9eaa2d06"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".bytecheck."0.6.12" = overridableMkRustCrate (profileName: rec {
      name = "bytecheck";
      version = "0.6.12";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "23cdc57ce23ac53c931e88a43d06d070a6fd142f2617be5855eb75efc9beb1c2"; };
      features = builtins.concatLists [
        [ "simdutf8" ]
        [ "std" ]
      ];
      dependencies = {
        bytecheck_derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".bytecheck_derive."0.6.12" { profileName = "__noProfile"; }).out;
        ptr_meta = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ptr_meta."0.1.4" { inherit profileName; }).out;
        simdutf8 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".simdutf8."0.1.5" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".bytecheck_derive."0.6.12" = overridableMkRustCrate (profileName: rec {
      name = "bytecheck_derive";
      version = "0.6.12";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3db406d29fbcd95542e92559bed4d8ad92636d1ca8b3b72ede10b4bcc010e659"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".bytemuck."1.19.0" = overridableMkRustCrate (profileName: rec {
      name = "bytemuck";
      version = "1.19.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8334215b81e418a0a7bdb8ef0849474f40bb10c8b71f1c4ed315cff49f32494d"; };
      features = builtins.concatLists [
        [ "aarch64_simd" ]
        [ "bytemuck_derive" ]
        [ "derive" ]
        [ "extern_crate_alloc" ]
        [ "min_const_generics" ]
      ];
      dependencies = {
        bytemuck_derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".bytemuck_derive."1.8.0" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".bytemuck_derive."1.8.0" = overridableMkRustCrate (profileName: rec {
      name = "bytemuck_derive";
      version = "1.8.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "bcfcc3cd946cb52f0bbfdbbcfa2f4e24f75ebb6c0e1002f7c25904fada18b9ec"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".byteorder."1.5.0" = overridableMkRustCrate (profileName: rec {
      name = "byteorder";
      version = "1.5.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".bytes."1.8.0" = overridableMkRustCrate (profileName: rec {
      name = "bytes";
      version = "1.8.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9ac0150caa2ae65ca5bd83f25c7de183dea78d4d366469f148435e2acfbad0da"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "serde" ]
        [ "std" ]
      ];
      dependencies = {
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".calloop."0.13.0" = overridableMkRustCrate (profileName: rec {
      name = "calloop";
      version = "0.13.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b99da2f8558ca23c71f4fd15dc57c906239752dd27ff3c00a1d56b685b7cbfec"; };
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        polling = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".polling."3.7.3" { inherit profileName; }).out;
        rustix = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustix."0.38.37" { inherit profileName; }).out;
        slab = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".slab."0.4.9" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".calloop-wayland-source."0.3.0" = overridableMkRustCrate (profileName: rec {
      name = "calloop-wayland-source";
      version = "0.3.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "95a66a987056935f7efce4ab5668920b5d0dac4a7c99991a67395f13702ddd20"; };
      dependencies = {
        calloop = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".calloop."0.13.0" { inherit profileName; }).out;
        rustix = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustix."0.38.37" { inherit profileName; }).out;
        wayland_backend = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wayland-backend."0.3.7" { inherit profileName; }).out;
        wayland_client = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wayland-client."0.31.7" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".candle-core."0.7.2" = overridableMkRustCrate (profileName: rec {
      name = "candle-core";
      version = "0.7.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7e1a39b963e261c58017edf2007e5b63425ad21538aaaf51fe23d1da41703701"; };
      features = builtins.concatLists [
        [ "cuda" ]
        [ "cudarc" ]
        [ "default" ]
      ];
      dependencies = {
        byteorder = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.5.0" { inherit profileName; }).out;
        candle_kernels = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".candle-kernels."0.7.2" { inherit profileName; }).out;
        cudarc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cudarc."0.12.1" { inherit profileName; }).out;
        gemm = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".gemm."0.17.1" { inherit profileName; }).out;
        half = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".half."2.4.1" { inherit profileName; }).out;
        memmap2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memmap2."0.9.5" { inherit profileName; }).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
        num_cpus = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.16.0" { inherit profileName; }).out;
        rand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; }).out;
        rand_distr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_distr."0.4.3" { inherit profileName; }).out;
        rayon = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon."1.10.0" { inherit profileName; }).out;
        safetensors = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".safetensors."0.4.5" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
        yoke = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".yoke."0.7.4" { inherit profileName; }).out;
        zip = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".zip."1.1.4" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".candle-kernels."0.7.2" = overridableMkRustCrate (profileName: rec {
      name = "candle-kernels";
      version = "0.7.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "539cbfbf2d1d68a6ed97115e579c77c98f8ed0cfe7edbc6d7d30d2ac0c9e3d50"; };
      buildDependencies = {
        bindgen_cuda = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".bindgen_cuda."0.1.5" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".candle-nn."0.7.2" = overridableMkRustCrate (profileName: rec {
      name = "candle-nn";
      version = "0.7.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "898f8d21b8bdf559a1c8635e2db8386b2134015cd3003c18c1a30a22a67daec6"; };
      features = builtins.concatLists [
        [ "cuda" ]
        [ "default" ]
      ];
      dependencies = {
        candle = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".candle-core."0.7.2" { inherit profileName; }).out;
        half = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".half."2.4.1" { inherit profileName; }).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
        rayon = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon."1.10.0" { inherit profileName; }).out;
        safetensors = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".safetensors."0.4.5" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".candle-onnx."0.7.2" = overridableMkRustCrate (profileName: rec {
      name = "candle-onnx";
      version = "0.7.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4521d9bb38c65b6ec97d3feebdd1969355788e5479f1def0e9985b79ac05e072"; };
      dependencies = {
        candle = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".candle-core."0.7.2" { inherit profileName; }).out;
        candle_nn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".candle-nn."0.7.2" { inherit profileName; }).out;
        prost = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".prost."0.12.6" { inherit profileName; }).out;
      };
      buildDependencies = {
        prost_build = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".prost-build."0.12.6" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".candle-transformers."0.7.2" = overridableMkRustCrate (profileName: rec {
      name = "candle-transformers";
      version = "0.7.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "06b8a130a8ac1d1e20696d89f7a52948902e037ad0eec085fceb77021007cfee"; };
      features = builtins.concatLists [
        [ "cuda" ]
        [ "default" ]
      ];
      dependencies = {
        byteorder = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.5.0" { inherit profileName; }).out;
        candle = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".candle-core."0.7.2" { inherit profileName; }).out;
        candle_nn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".candle-nn."0.7.2" { inherit profileName; }).out;
        fancy_regex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".fancy-regex."0.13.0" { inherit profileName; }).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
        rand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; }).out;
        rayon = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon."1.10.0" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        serde_json = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.132" { inherit profileName; }).out;
        serde_plain = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_plain."1.0.2" { inherit profileName; }).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".castaway."0.2.3" = overridableMkRustCrate (profileName: rec {
      name = "castaway";
      version = "0.2.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0abae9be0aaf9ea96a3b1b8b1b55c602ca751eba1b1500220cea4ecbafe7c0d5"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        rustversion = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustversion."1.0.18" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".cc."1.1.31" = overridableMkRustCrate (profileName: rec {
      name = "cc";
      version = "1.1.31";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c2e7962b54006dcfcc61cb72735f4d89bb97061dd6a7ed882ec6b8ee53714c6f"; };
      features = builtins.concatLists [
        [ "parallel" ]
      ];
      dependencies = {
        jobserver = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".jobserver."0.1.32" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        shlex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".shlex."1.3.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".cedar-policy."2.4.2" = overridableMkRustCrate (profileName: rec {
      name = "cedar-policy";
      version = "2.4.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3d91e3b10a0f7f2911774d5e49713c4d25753466f9e11d1cd2ec627f8a2dc857"; };
      features = builtins.concatLists [
        [ "decimal" ]
        [ "default" ]
        [ "ipaddr" ]
      ];
      dependencies = {
        cedar_policy_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cedar-policy-core."2.4.2" { inherit profileName; }).out;
        cedar_policy_validator = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cedar-policy-validator."2.4.2" { inherit profileName; }).out;
        itertools = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.10.5" { inherit profileName; }).out;
        lalrpop_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".lalrpop-util."0.20.2" { inherit profileName; }).out;
        ref_cast = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ref-cast."1.0.23" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        serde_json = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.132" { inherit profileName; }).out;
        smol_str = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".smol_str."0.2.2" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".cedar-policy-core."2.4.2" = overridableMkRustCrate (profileName: rec {
      name = "cedar-policy-core";
      version = "2.4.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "cd2315591c6b7e18f8038f0a0529f254235fd902b6c217aabc04f2459b0d9995"; };
      features = builtins.concatLists [
        [ "decimal" ]
        [ "default" ]
        [ "ipaddr" ]
      ];
      dependencies = {
        either = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.13.0" { inherit profileName; }).out;
        ipnet = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ipnet."2.10.1" { inherit profileName; }).out;
        itertools = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.10.5" { inherit profileName; }).out;
        lalrpop_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".lalrpop-util."0.20.2" { inherit profileName; }).out;
        lazy_static = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.5.0" { inherit profileName; }).out;
        miette = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".miette."5.10.0" { inherit profileName; }).out;
        regex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.11.1" { inherit profileName; }).out;
        rustc_lexer = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc_lexer."0.1.0" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        serde_json = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.132" { inherit profileName; }).out;
        serde_with = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_with."3.11.0" { inherit profileName; }).out;
        smol_str = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".smol_str."0.2.2" { inherit profileName; }).out;
        stacker = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".stacker."0.1.17" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
      };
      buildDependencies = {
        lalrpop = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".lalrpop."0.20.2" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".cedar-policy-validator."2.4.2" = overridableMkRustCrate (profileName: rec {
      name = "cedar-policy-validator";
      version = "2.4.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e756e1b2a5da742ed97e65199ad6d0893e9aa4bd6b34be1de9e70bd1e6adc7df"; };
      features = builtins.concatLists [
        [ "decimal" ]
        [ "default" ]
        [ "ipaddr" ]
      ];
      dependencies = {
        cedar_policy_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cedar-policy-core."2.4.2" { inherit profileName; }).out;
        itertools = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.10.5" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        serde_json = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.132" { inherit profileName; }).out;
        serde_with = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_with."3.11.0" { inherit profileName; }).out;
        smol_str = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".smol_str."0.2.2" { inherit profileName; }).out;
        stacker = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".stacker."0.1.17" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
        unicode_security = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-security."0.1.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".cesu8."1.1.0" = overridableMkRustCrate (profileName: rec {
      name = "cesu8";
      version = "1.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6d43a04d8753f35258c91f8ec639f792891f748a1edbd759cf1dcea3382ad83c"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" = overridableMkRustCrate (profileName: rec {
      name = "cfg-if";
      version = "1.0.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".cfg_aliases."0.1.1" = overridableMkRustCrate (profileName: rec {
      name = "cfg_aliases";
      version = "0.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "fd16c4719339c4530435d38e511904438d07cce7950afa3718a84ac36c10e89e"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".cfg_aliases."0.2.1" = overridableMkRustCrate (profileName: rec {
      name = "cfg_aliases";
      version = "0.2.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "613afe47fcd5fac7ccf1db93babcb082c5994d996f20b8b159f2ad1658eb5724"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.38" = overridableMkRustCrate (profileName: rec {
      name = "chrono";
      version = "0.4.38";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a21f936df1771bf62b77f047b726c4625ff2e8aa607c01ec06e5a05bd8463401"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "android-tzdata" ]
        [ "clock" ]
        [ "default" ]
        [ "iana-time-zone" ]
        [ "js-sys" ]
        [ "now" ]
        [ "oldtime" ]
        [ "serde" ]
        [ "std" ]
        [ "wasm-bindgen" ]
        [ "wasmbind" ]
        [ "winapi" ]
        [ "windows-targets" ]
      ];
      dependencies = {
        ${ if hostPlatform.parsed.kernel.name == "android" then "android_tzdata" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".android-tzdata."0.1.1" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix then "iana_time_zone" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".iana-time-zone."0.1.61" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" && !(hostPlatform.parsed.kernel.name == "emscripten" || hostPlatform.parsed.kernel.name == "wasi") then "js_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.72" { inherit profileName; }).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" && !(hostPlatform.parsed.kernel.name == "emscripten" || hostPlatform.parsed.kernel.name == "wasi") then "wasm_bindgen" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.95" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "windows_targets" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.52.6" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".chrono-human-duration."0.1.1" = overridableMkRustCrate (profileName: rec {
      name = "chrono-human-duration";
      version = "0.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "19283df3a144dfdeee6568e42ad7f0939d3c261bcdfe954b1a1098f6f7c1b908"; };
      dependencies = {
        chrono = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.38" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ciborium."0.2.2" = overridableMkRustCrate (profileName: rec {
      name = "ciborium";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "42e69ffd6f0917f5c029256a24d0161db17cea3997d185db0d35926308770f0e"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        ciborium_io = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ciborium-io."0.2.2" { inherit profileName; }).out;
        ciborium_ll = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ciborium-ll."0.2.2" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ciborium-io."0.2.2" = overridableMkRustCrate (profileName: rec {
      name = "ciborium-io";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "05afea1e0a06c9be33d539b876f1ce3692f4afea2cb41f740e7743225ed1c757"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".ciborium-ll."0.2.2" = overridableMkRustCrate (profileName: rec {
      name = "ciborium-ll";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "57663b653d948a338bfb3eeba9bb2fd5fcfaecb9e199e87e1eda4d9e8b240fd9"; };
      dependencies = {
        ciborium_io = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ciborium-io."0.2.2" { inherit profileName; }).out;
        half = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".half."2.4.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".cipher."0.4.4" = overridableMkRustCrate (profileName: rec {
      name = "cipher";
      version = "0.4.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "773f3b9af64447d2ce9850330c473515014aa235e6a783b02db81ff39e4a3dad"; };
      dependencies = {
        crypto_common = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crypto-common."0.1.6" { inherit profileName; }).out;
        inout = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".inout."0.1.3" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".clap."4.5.20" = overridableMkRustCrate (profileName: rec {
      name = "clap";
      version = "4.5.20";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b97f376d85a664d5837dbae44bf546e6477a679ff6610010f17276f686d867e8"; };
      features = builtins.concatLists [
        [ "color" ]
        [ "default" ]
        [ "derive" ]
        [ "error-context" ]
        [ "help" ]
        [ "std" ]
        [ "suggestions" ]
        [ "usage" ]
      ];
      dependencies = {
        clap_builder = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap_builder."4.5.20" { inherit profileName; }).out;
        clap_derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".clap_derive."4.5.18" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".clap_builder."4.5.20" = overridableMkRustCrate (profileName: rec {
      name = "clap_builder";
      version = "4.5.20";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "19bc80abd44e4bed93ca373a0704ccbd1b710dc5749406201bb018272808dc54"; };
      features = builtins.concatLists [
        [ "color" ]
        [ "error-context" ]
        [ "help" ]
        [ "std" ]
        [ "suggestions" ]
        [ "usage" ]
      ];
      dependencies = {
        anstream = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".anstream."0.6.17" { inherit profileName; }).out;
        anstyle = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".anstyle."1.0.9" { inherit profileName; }).out;
        clap_lex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap_lex."0.7.2" { inherit profileName; }).out;
        strsim = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".strsim."0.11.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".clap_derive."4.5.18" = overridableMkRustCrate (profileName: rec {
      name = "clap_derive";
      version = "4.5.18";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4ac6a0c7b1a9e9a5186361f67dfa1b88213572f427fb9ab038efb2bd8c582dab"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        heck = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".heck."0.5.0" { inherit profileName; }).out;
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".clap_lex."0.7.2" = overridableMkRustCrate (profileName: rec {
      name = "clap_lex";
      version = "0.7.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1462739cb27611015575c0c11df5df7601141071f07518d56fcc1be504cbec97"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".cli-table."0.4.7" = overridableMkRustCrate (profileName: rec {
      name = "cli-table";
      version = "0.4.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "adfbb116d9e2c4be7011360d0c0bee565712c11e969c9609b25b619366dc379d"; };
      features = builtins.concatLists [
        [ "cli-table-derive" ]
        [ "csv" ]
        [ "default" ]
        [ "derive" ]
        [ "title" ]
      ];
      dependencies = {
        cli_table_derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cli-table-derive."0.4.6" { profileName = "__noProfile"; }).out;
        csv = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".csv."1.3.0" { inherit profileName; }).out;
        termcolor = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".termcolor."1.4.1" { inherit profileName; }).out;
        unicode_width = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.14" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".cli-table-derive."0.4.6" = overridableMkRustCrate (profileName: rec {
      name = "cli-table-derive";
      version = "0.4.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3e83a93253aaae7c74eb7428ce4faa6e219ba94886908048888701819f82fb94"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".clipboard-win."5.4.0" = overridableMkRustCrate (profileName: rec {
      name = "clipboard-win";
      version = "5.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "15efe7a882b08f34e38556b14f2fb3daa98769d06c7f0c1b076dfd0d983bc892"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
      dependencies = {
        ${ if hostPlatform.isWindows then "error_code" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".error-code."3.3.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".clipboard_macos."0.1.1" = overridableMkRustCrate (profileName: rec {
      name = "clipboard_macos";
      version = "0.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9b7f4aaa047ba3c3630b080bb9860894732ff23e2aee290a418909aa6d5df38f"; };
      dependencies = {
        objc2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2."0.5.2" { inherit profileName; }).out;
        objc2_app_kit = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-app-kit."0.2.2" { inherit profileName; }).out;
        objc2_foundation = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-foundation."0.2.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".clipboard_wayland."0.2.2" = overridableMkRustCrate (profileName: rec {
      name = "clipboard_wayland";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "003f886bc4e2987729d10c1db3424e7f80809f3fc22dbc16c685738887cb37b8"; };
      dependencies = {
        smithay_clipboard = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".smithay-clipboard."0.7.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".clipboard_x11."0.4.2" = overridableMkRustCrate (profileName: rec {
      name = "clipboard_x11";
      version = "0.4.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4274ea815e013e0f9f04a2633423e14194e408a0576c943ce3d14ca56c50031c"; };
      dependencies = {
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
        x11rb = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".x11rb."0.13.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".codespan-reporting."0.11.1" = overridableMkRustCrate (profileName: rec {
      name = "codespan-reporting";
      version = "0.11.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3538270d33cc669650c4b093848450d380def10c331d38c768e34cac80576e6e"; };
      dependencies = {
        termcolor = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".termcolor."1.4.1" { inherit profileName; }).out;
        unicode_width = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.14" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".color-eyre."0.6.3" = overridableMkRustCrate (profileName: rec {
      name = "color-eyre";
      version = "0.6.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "55146f5e46f237f7423d74111267d4597b59b0dad0ffaf7303bce9945d843ad5"; };
      features = builtins.concatLists [
        [ "capture-spantrace" ]
        [ "color-spantrace" ]
        [ "default" ]
        [ "tracing-error" ]
        [ "track-caller" ]
      ];
      dependencies = {
        backtrace = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".backtrace."0.3.71" { inherit profileName; }).out;
        color_spantrace = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".color-spantrace."0.2.1" { inherit profileName; }).out;
        eyre = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".eyre."0.6.12" { inherit profileName; }).out;
        indenter = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".indenter."0.3.3" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
        owo_colors = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".owo-colors."3.5.0" { inherit profileName; }).out;
        tracing_error = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-error."0.2.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".color-spantrace."0.2.1" = overridableMkRustCrate (profileName: rec {
      name = "color-spantrace";
      version = "0.2.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "cd6be1b2a7e382e2b98b43b2adcca6bb0e465af0bdd38123873ae61eb17a72c2"; };
      dependencies = {
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
        owo_colors = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".owo-colors."3.5.0" { inherit profileName; }).out;
        tracing_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.32" { inherit profileName; }).out;
        tracing_error = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-error."0.2.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".colorchoice."1.0.3" = overridableMkRustCrate (profileName: rec {
      name = "colorchoice";
      version = "1.0.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "5b63caa9aa9397e2d9480a9b13673856c78d8ac123288526c37d7839f2a86990"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".com."0.6.0" = overridableMkRustCrate (profileName: rec {
      name = "com";
      version = "0.6.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7e17887fd17353b65b1b2ef1c526c83e26cd72e74f598a8dc1bee13a48f3d9f6"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "production" ]
        [ "std" ]
      ];
      dependencies = {
        com_macros = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".com_macros."0.6.0" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".com_macros."0.6.0" = overridableMkRustCrate (profileName: rec {
      name = "com_macros";
      version = "0.6.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d375883580a668c7481ea6631fc1a8863e33cc335bf56bfad8d7e6d4b04b13a5"; };
      dependencies = {
        com_macros_support = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".com_macros_support."0.6.0" { inherit profileName; }).out;
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".com_macros_support."0.6.0" = overridableMkRustCrate (profileName: rec {
      name = "com_macros_support";
      version = "0.6.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ad899a1087a9296d5644792d7cb72b8e34c1bec8e7d4fbc002230169a6e8710c"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".combine."4.6.7" = overridableMkRustCrate (profileName: rec {
      name = "combine";
      version = "4.6.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ba5a308b75df32fe02788e748662718f03fde005016435c444eea572398219fd"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "bytes" ]
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.8.0" { inherit profileName; }).out;
        memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".concurrent-queue."2.5.0" = overridableMkRustCrate (profileName: rec {
      name = "concurrent-queue";
      version = "2.5.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4ca0197aee26d1ae37445ee532fefce43251d24cc7c166799f4d46817f1d3973"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        crossbeam_utils = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.20" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".console."0.15.8" = overridableMkRustCrate (profileName: rec {
      name = "console";
      version = "0.15.8";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0e1f83fc076bd6dd27517eacdf25fef6c4dfe5f1d7448bafaaf3a26f13b5e4eb"; };
      features = builtins.concatLists [
        [ "ansi-parsing" ]
        [ "unicode-width" ]
      ];
      dependencies = {
        ${ if hostPlatform.isWindows then "encode_unicode" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".encode_unicode."0.3.6" { inherit profileName; }).out;
        lazy_static = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.5.0" { inherit profileName; }).out;
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        unicode_width = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.14" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.52.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".const-random."0.1.18" = overridableMkRustCrate (profileName: rec {
      name = "const-random";
      version = "0.1.18";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "87e00182fe74b066627d63b85fd550ac2998d4b0bd86bfed477a0ae4c7c71359"; };
      dependencies = {
        const_random_macro = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".const-random-macro."0.1.16" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".const-random-macro."0.1.16" = overridableMkRustCrate (profileName: rec {
      name = "const-random-macro";
      version = "0.1.16";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f9d839f2a20b0aee515dc581a6172f2321f96cab76c1a38a4c584a194955390e"; };
      dependencies = {
        getrandom = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.15" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
        tiny_keccak = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tiny-keccak."2.0.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".constant_time_eq."0.3.1" = overridableMkRustCrate (profileName: rec {
      name = "constant_time_eq";
      version = "0.3.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7c74b8349d32d297c9134b8c88677813a227df8f779daa29bfc29c183fe3dca6"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".convert_case."0.6.0" = overridableMkRustCrate (profileName: rec {
      name = "convert_case";
      version = "0.6.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ec182b0ca2f35d8fc196cf3404988fd8b8c739a4d270ff118a398feb0cbec1ca"; };
      dependencies = {
        unicode_segmentation = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-segmentation."1.12.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".core-foundation."0.9.4" = overridableMkRustCrate (profileName: rec {
      name = "core-foundation";
      version = "0.9.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "91e195e091a93c46f7102ec7818a2aa394e1e1771c3ab4825963fa03e45afb8f"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "link" ]
      ];
      dependencies = {
        core_foundation_sys = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.8.7" { inherit profileName; }).out;
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".core-foundation."0.10.0" = overridableMkRustCrate (profileName: rec {
      name = "core-foundation";
      version = "0.10.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b55271e5c8c478ad3f38ad24ef34923091e0548492a266d19b3c0b4d82574c63"; };
      features = builtins.concatLists [
        [ "link" ]
      ];
      dependencies = {
        core_foundation_sys = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.8.7" { inherit profileName; }).out;
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.8.7" = overridableMkRustCrate (profileName: rec {
      name = "core-foundation-sys";
      version = "0.8.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "773648b94d0e5d620f64f280777445740e61fe701025087ec8b57f45c791888b"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "link" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".core-graphics."0.23.2" = overridableMkRustCrate (profileName: rec {
      name = "core-graphics";
      version = "0.23.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c07782be35f9e1140080c6b96f0d44b739e2278479f64e02fdab4e32dfd8b081"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "link" ]
      ];
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" { inherit profileName; }).out;
        core_foundation = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation."0.9.4" { inherit profileName; }).out;
        core_graphics_types = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-graphics-types."0.1.3" { inherit profileName; }).out;
        foreign_types = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".foreign-types."0.5.0" { inherit profileName; }).out;
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".core-graphics."0.24.0" = overridableMkRustCrate (profileName: rec {
      name = "core-graphics";
      version = "0.24.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "fa95a34622365fa5bbf40b20b75dba8dfa8c94c734aea8ac9a5ca38af14316f1"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "link" ]
      ];
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        core_foundation = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation."0.10.0" { inherit profileName; }).out;
        core_graphics_types = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-graphics-types."0.2.0" { inherit profileName; }).out;
        foreign_types = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".foreign-types."0.5.0" { inherit profileName; }).out;
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".core-graphics-types."0.1.3" = overridableMkRustCrate (profileName: rec {
      name = "core-graphics-types";
      version = "0.1.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "45390e6114f68f718cc7a830514a96f903cccd70d02a8f6d9f643ac4ba45afaf"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "link" ]
      ];
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" { inherit profileName; }).out;
        core_foundation = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation."0.9.4" { inherit profileName; }).out;
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".core-graphics-types."0.2.0" = overridableMkRustCrate (profileName: rec {
      name = "core-graphics-types";
      version = "0.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3d44a101f213f6c4cdc1853d4b78aef6db6bdfa3468798cc1d9912f4735013eb"; };
      features = builtins.concatLists [
        [ "link" ]
      ];
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        core_foundation = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation."0.10.0" { inherit profileName; }).out;
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".cosmic-text."0.12.1" = overridableMkRustCrate (profileName: rec {
      name = "cosmic-text";
      version = "0.12.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "59fd57d82eb4bfe7ffa9b1cec0c05e2fd378155b47f255a67983cb4afe0e80c2"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "fontconfig" ]
        [ "rayon" ]
        [ "std" ]
        [ "swash" ]
        [ "sys-locale" ]
      ];
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        fontdb = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".fontdb."0.16.2" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        rangemap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rangemap."1.5.1" { inherit profileName; }).out;
        rayon = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon."1.10.0" { inherit profileName; }).out;
        rustc_hash = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" { inherit profileName; }).out;
        rustybuzz = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustybuzz."0.14.1" { inherit profileName; }).out;
        self_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".self_cell."1.0.4" { inherit profileName; }).out;
        swash = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".swash."0.1.19" { inherit profileName; }).out;
        sys_locale = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sys-locale."0.3.1" { inherit profileName; }).out;
        ttf_parser = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ttf-parser."0.21.1" { inherit profileName; }).out;
        unicode_bidi = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-bidi."0.3.17" { inherit profileName; }).out;
        unicode_linebreak = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-linebreak."0.1.5" { inherit profileName; }).out;
        unicode_script = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-script."0.5.7" { inherit profileName; }).out;
        unicode_segmentation = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-segmentation."1.12.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".cpufeatures."0.2.14" = overridableMkRustCrate (profileName: rec {
      name = "cpufeatures";
      version = "0.2.14";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "608697df725056feaccfa42cffdaeeec3fccc4ffc38358ecd19b243e716a78e0"; };
      dependencies = {
        ${ if hostPlatform.config == "aarch64-linux-android" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.kernel.name == "linux" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.vendor.name == "apple" || hostPlatform.parsed.cpu.name == "loongarch64" && hostPlatform.parsed.kernel.name == "linux" then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".crc32fast."1.4.2" = overridableMkRustCrate (profileName: rec {
      name = "crc32fast";
      version = "1.4.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a97769d94ddab943e4510d138150169a2758b5ef3eb191a9ee688de3e23ef7b3"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".crossbeam-deque."0.8.5" = overridableMkRustCrate (profileName: rec {
      name = "crossbeam-deque";
      version = "0.8.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "613f8cc01fe9cf1a3eb3d7f488fd2fa8388403e97039e2f73692932e291a770d"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        crossbeam_epoch = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-epoch."0.9.18" { inherit profileName; }).out;
        crossbeam_utils = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.20" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".crossbeam-epoch."0.9.18" = overridableMkRustCrate (profileName: rec {
      name = "crossbeam-epoch";
      version = "0.9.18";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "5b82ac4a3c2ca9c3460964f020e1402edd5753411d7737aa39c3714ad1b5420e"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "std" ]
      ];
      dependencies = {
        crossbeam_utils = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.20" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.20" = overridableMkRustCrate (profileName: rec {
      name = "crossbeam-utils";
      version = "0.8.20";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "22ec99545bb0ed0ea7bb9b8e1e9122ea386ff8a48c0922e43f36d45ab09e0e80"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".crunchy."0.2.2" = overridableMkRustCrate (profileName: rec {
      name = "crunchy";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7a81dae078cea95a014a339291cec439d2f232ebe854a9d672b796c6afafa9b7"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "limit_128" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".crypto-common."0.1.6" = overridableMkRustCrate (profileName: rec {
      name = "crypto-common";
      version = "0.1.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
      dependencies = {
        generic_array = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".generic-array."0.14.7" { inherit profileName; }).out;
        typenum = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".typenum."1.17.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".csv."1.3.0" = overridableMkRustCrate (profileName: rec {
      name = "csv";
      version = "1.3.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ac574ff4d437a7b5ad237ef331c17ccca63c46479e5b5453eb8e10bb99a759fe"; };
      dependencies = {
        csv_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".csv-core."0.1.11" { inherit profileName; }).out;
        itoa = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.11" { inherit profileName; }).out;
        ryu = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.18" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".csv-core."0.1.11" = overridableMkRustCrate (profileName: rec {
      name = "csv-core";
      version = "0.1.11";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "5efa2b3d7902f4b634a20cae3c9c4e6209dc4779feb6863329607560143efa70"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ctor-lite."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "ctor-lite";
      version = "0.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1f791803201ab277ace03903de1594460708d2d54df6053f2d9e82f592b19e3b"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".cudarc."0.12.1" = overridableMkRustCrate (profileName: rec {
      name = "cudarc";
      version = "0.12.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "38cd60a9a42ec83a2ed7effb0b1f073270264ea99da7acfc44f7e8d74dee0384"; };
      features = builtins.concatLists [
        [ "cublas" ]
        [ "cublaslt" ]
        [ "cuda-version-from-build-system" ]
        [ "curand" ]
        [ "driver" ]
        [ "dynamic-linking" ]
        [ "f16" ]
        [ "nvrtc" ]
        [ "std" ]
      ];
      dependencies = {
        half = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".half."2.4.1" { inherit profileName; }).out;
        libloading = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libloading."0.8.5" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".cursor-icon."1.1.0" = overridableMkRustCrate (profileName: rec {
      name = "cursor-icon";
      version = "1.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "96a6ac251f4a2aca6b3f91340350eab87ae57c3f127ffeb585e92bd336717991"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".d3d12."0.19.0" = overridableMkRustCrate (profileName: rec {
      name = "d3d12";
      version = "0.19.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3e3d747f100290a1ca24b752186f61f6637e1deffe3bf6320de6fcb29510a307"; };
      features = builtins.concatLists [
        [ "libloading" ]
      ];
      dependencies = {
        ${ if hostPlatform.isWindows then "bitflags" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "libloading" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libloading."0.8.5" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "winapi" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".dark-light."1.1.1" = overridableMkRustCrate (profileName: rec {
      name = "dark-light";
      version = "1.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2a76fa97167fa740dcdbfe18e8895601e1bc36525f09b044e00916e717c03a3c"; };
      dependencies = {
        ${ if hostPlatform.parsed.kernel.name == "linux" || hostPlatform.parsed.kernel.name == "freebsd" || hostPlatform.parsed.kernel.name == "dragonfly" || hostPlatform.parsed.kernel.name == "netbsd" || hostPlatform.parsed.kernel.name == "openbsd" then "dconf_rs" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dconf_rs."0.3.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "linux" || hostPlatform.parsed.kernel.name == "freebsd" || hostPlatform.parsed.kernel.name == "dragonfly" || hostPlatform.parsed.kernel.name == "netbsd" || hostPlatform.parsed.kernel.name == "openbsd" then "detect_desktop_environment" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".detect-desktop-environment."0.2.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "linux" || hostPlatform.parsed.kernel.name == "freebsd" || hostPlatform.parsed.kernel.name == "dragonfly" || hostPlatform.parsed.kernel.name == "netbsd" || hostPlatform.parsed.kernel.name == "openbsd" then "dirs" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dirs."4.0.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "darwin" then "objc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc."0.2.7" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "linux" || hostPlatform.parsed.kernel.name == "freebsd" || hostPlatform.parsed.kernel.name == "dragonfly" || hostPlatform.parsed.kernel.name == "netbsd" || hostPlatform.parsed.kernel.name == "openbsd" then "ini" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rust-ini."0.18.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "web_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.72" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "winreg" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winreg."0.10.1" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "linux" || hostPlatform.parsed.kernel.name == "freebsd" || hostPlatform.parsed.kernel.name == "dragonfly" || hostPlatform.parsed.kernel.name == "netbsd" || hostPlatform.parsed.kernel.name == "openbsd" then "zbus" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".zbus."4.4.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".darling."0.20.10" = overridableMkRustCrate (profileName: rec {
      name = "darling";
      version = "0.20.10";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6f63b86c8a8826a49b8c21f08a2d07338eec8d900540f8630dc76284be802989"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "suggestions" ]
      ];
      dependencies = {
        darling_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".darling_core."0.20.10" { inherit profileName; }).out;
        darling_macro = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".darling_macro."0.20.10" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".darling_core."0.20.10" = overridableMkRustCrate (profileName: rec {
      name = "darling_core";
      version = "0.20.10";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "95133861a8032aaea082871032f5815eb9e98cef03fa916ab4500513994df9e5"; };
      features = builtins.concatLists [
        [ "strsim" ]
        [ "suggestions" ]
      ];
      dependencies = {
        fnv = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.7" { inherit profileName; }).out;
        ident_case = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ident_case."1.0.1" { inherit profileName; }).out;
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        strsim = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".strsim."0.11.1" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".darling_macro."0.20.10" = overridableMkRustCrate (profileName: rec {
      name = "darling_macro";
      version = "0.20.10";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d336a2a514f6ccccaa3e09b02d41d35330c07ddf03a62165fcec10bb561c7806"; };
      dependencies = {
        darling_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".darling_core."0.20.10" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".dashmap."5.5.3" = overridableMkRustCrate (profileName: rec {
      name = "dashmap";
      version = "5.5.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "978747c1d849a7d2ee5e8adc0159961c48fb7e5db2f06af6723b80123bb53856"; };
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        hashbrown = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.14.5" { inherit profileName; }).out;
        lock_api = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".lock_api."0.4.12" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
        parking_lot_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.9.10" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".data-encoding."2.6.0" = overridableMkRustCrate (profileName: rec {
      name = "data-encoding";
      version = "2.6.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e8566979429cf69b49a5c740c60791108e86440e8be149bbea4fe54d2c32d6e2"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".dconf_rs."0.3.0" = overridableMkRustCrate (profileName: rec {
      name = "dconf_rs";
      version = "0.3.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7046468a81e6a002061c01e6a7c83139daf91b11c30e66795b13217c2d885c8b"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".deranged."0.3.11" = overridableMkRustCrate (profileName: rec {
      name = "deranged";
      version = "0.3.11";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b42b6fa04a440b495c8b04d0e71b707c585f83cb9cb28cf8cd0d976c315e31b4"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "powerfmt" ]
        [ "serde" ]
        [ "std" ]
      ];
      dependencies = {
        powerfmt = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".powerfmt."0.2.0" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".derivative."2.2.0" = overridableMkRustCrate (profileName: rec {
      name = "derivative";
      version = "2.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "fcc3dd5e9e9c0b295d6e1e4d811fb6f157d5ffd784b8d202fc62eac8035a770b"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".derive_arbitrary."1.3.2" = overridableMkRustCrate (profileName: rec {
      name = "derive_arbitrary";
      version = "1.3.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "67e77553c4162a157adbf834ebae5b415acbecbeafc7a74b0e886657506a7611"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".derive_builder."0.20.2" = overridableMkRustCrate (profileName: rec {
      name = "derive_builder";
      version = "0.20.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "507dfb09ea8b7fa618fcf76e953f4f5e192547945816d5358edffe39f6f94947"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        derive_builder_macro = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derive_builder_macro."0.20.2" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".derive_builder_core."0.20.2" = overridableMkRustCrate (profileName: rec {
      name = "derive_builder_core";
      version = "0.20.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2d5bcf7b024d6835cfb3d473887cd966994907effbe9227e8c8219824d06c4e8"; };
      features = builtins.concatLists [
        [ "lib_has_std" ]
      ];
      dependencies = {
        darling = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".darling."0.20.10" { inherit profileName; }).out;
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".derive_builder_macro."0.20.2" = overridableMkRustCrate (profileName: rec {
      name = "derive_builder_macro";
      version = "0.20.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ab63b0e2bf4d5928aff72e83a7dace85d7bba5fe12dcc3c5a572d78caffd3f3c"; };
      features = builtins.concatLists [
        [ "lib_has_std" ]
      ];
      dependencies = {
        derive_builder_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".derive_builder_core."0.20.2" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".detect-desktop-environment."0.2.0" = overridableMkRustCrate (profileName: rec {
      name = "detect-desktop-environment";
      version = "0.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "21d8ad60dd5b13a4ee6bd8fa2d5d88965c597c67bce32b5fc49c94f55cb50810"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".deunicode."1.6.0" = overridableMkRustCrate (profileName: rec {
      name = "deunicode";
      version = "1.6.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "339544cc9e2c4dc3fc7149fd630c5f22263a4fdf18a98afd0075784968b5cf00"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".diffy."0.4.0" = overridableMkRustCrate (profileName: rec {
      name = "diffy";
      version = "0.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "5d3041965b7a63e70447ec818a46b1e5297f7fcae3058356d226c02750c4e6cb"; };
      dependencies = {
        nu_ansi_term = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".nu-ansi-term."0.50.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".digest."0.10.7" = overridableMkRustCrate (profileName: rec {
      name = "digest";
      version = "0.10.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "block-buffer" ]
        [ "core-api" ]
        [ "default" ]
        [ "mac" ]
        [ "std" ]
        [ "subtle" ]
      ];
      dependencies = {
        block_buffer = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".block-buffer."0.10.4" { inherit profileName; }).out;
        crypto_common = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crypto-common."0.1.6" { inherit profileName; }).out;
        subtle = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".subtle."2.6.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".directories."5.0.1" = overridableMkRustCrate (profileName: rec {
      name = "directories";
      version = "5.0.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9a49173b84e034382284f27f1af4dcbbd231ffa358c0fe316541a7337f376a35"; };
      dependencies = {
        dirs_sys = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dirs-sys."0.4.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".dirs."4.0.0" = overridableMkRustCrate (profileName: rec {
      name = "dirs";
      version = "4.0.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ca3aa72a6f96ea37bbc5aa912f6788242832f75369bdfdadcb0e38423f100059"; };
      dependencies = {
        dirs_sys = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dirs-sys."0.3.7" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".dirs."5.0.1" = overridableMkRustCrate (profileName: rec {
      name = "dirs";
      version = "5.0.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "44c45a9d03d6676652bcb5e724c7e988de1acad23a711b5217ab9cbecbec2225"; };
      dependencies = {
        dirs_sys = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dirs-sys."0.4.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".dirs-next."2.0.0" = overridableMkRustCrate (profileName: rec {
      name = "dirs-next";
      version = "2.0.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b98cf8ebf19c3d1b223e151f99a4f9f0690dca41414773390fc824184ac833e1"; };
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        dirs_sys_next = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dirs-sys-next."0.1.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".dirs-sys."0.3.7" = overridableMkRustCrate (profileName: rec {
      name = "dirs-sys";
      version = "0.3.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1b1d1d91c932ef41c0f2663aa8b0ca0342d444d842c06914aa0a7e352d0bada6"; };
      dependencies = {
        ${ if hostPlatform.isUnix then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "redox" then "redox_users" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_users."0.4.6" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "winapi" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".dirs-sys."0.4.1" = overridableMkRustCrate (profileName: rec {
      name = "dirs-sys";
      version = "0.4.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "520f05a5cbd335fae5a99ff7a6ab8627577660ee5cfd6a94a6a929b52ff0321c"; };
      dependencies = {
        ${ if hostPlatform.isUnix then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        option_ext = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".option-ext."0.2.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "redox" then "redox_users" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_users."0.4.6" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.48.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".dirs-sys-next."0.1.2" = overridableMkRustCrate (profileName: rec {
      name = "dirs-sys-next";
      version = "0.1.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4ebda144c4fe02d1f7ea1a7d9641b6fc6b580adcfa024ae48797ecdeb6825b4d"; };
      dependencies = {
        ${ if hostPlatform.isUnix then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "redox" then "redox_users" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_users."0.4.6" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "winapi" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".dispatch."0.2.0" = overridableMkRustCrate (profileName: rec {
      name = "dispatch";
      version = "0.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "bd0c93bb4b0c6d9b77f4435b0ae98c24d17f1c45b2ff844c6151a07256ca923b"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".displaydoc."0.2.5" = overridableMkRustCrate (profileName: rec {
      name = "displaydoc";
      version = "0.2.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "97369cbbc041bc366949bc74d34658d6cda5621039731c6310521892a3a20ae0"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".dlib."0.5.2" = overridableMkRustCrate (profileName: rec {
      name = "dlib";
      version = "0.5.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "330c60081dcc4c72131f8eb70510f1ac07223e5d4163db481a04a0befcffa412"; };
      dependencies = {
        libloading = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libloading."0.8.5" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".dlv-list."0.3.0" = overridableMkRustCrate (profileName: rec {
      name = "dlv-list";
      version = "0.3.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0688c2a7f92e427f44895cd63841bff7b29f8d7a1648b9e7e07a4a365b2e1257"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".dlv-list."0.5.2" = overridableMkRustCrate (profileName: rec {
      name = "dlv-list";
      version = "0.5.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "442039f5147480ba31067cb00ada1adae6892028e40e45fc5de7b7df6dcc1b5f"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
      dependencies = {
        const_random = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".const-random."0.1.18" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".dmp."0.2.0" = overridableMkRustCrate (profileName: rec {
      name = "dmp";
      version = "0.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "bfaa1135a34d26e5cc5b4927a8935af887d4f30a5653a797c33b9a4222beb6d9"; };
      dependencies = {
        urlencoding = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".urlencoding."2.1.3" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".doc-comment."0.3.3" = overridableMkRustCrate (profileName: rec {
      name = "doc-comment";
      version = "0.3.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "fea41bba32d969b513997752735605054bc0dfa92b4c56bf1189f2e174be7a10"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".dotenvy."0.15.7" = overridableMkRustCrate (profileName: rec {
      name = "dotenvy";
      version = "0.15.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1aaf95b3e5c8f23aa320147307562d361db0ae0d51242340f558153b4eb2439b"; };
    });

    "unknown".double-star."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "double-star";
      version = "0.1.0";
      registry = "unknown";
      src = fetchCrateLocal workspaceSrc;
      dependencies = {
        anyhow = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.91" { inherit profileName; }).out;
        async_trait = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.83" { profileName = "__noProfile"; }).out;
        candle_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".candle-core."0.7.2" { inherit profileName; }).out;
        candle_nn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".candle-nn."0.7.2" { inherit profileName; }).out;
        candle_onnx = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".candle-onnx."0.7.2" { inherit profileName; }).out;
        candle_transformers = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".candle-transformers."0.7.2" { inherit profileName; }).out;
        clap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."4.5.20" { inherit profileName; }).out;
        derivative = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derivative."2.2.0" { profileName = "__noProfile"; }).out;
        directories = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".directories."5.0.1" { inherit profileName; }).out;
        flume = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".flume."0.11.1" { inherit profileName; }).out;
        futures = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.31" { inherit profileName; }).out;
        gravity = (rustPackages."unknown".gravity."0.1.0" { inherit profileName; }).out;
        hf_hub = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hf-hub."0.3.2" { inherit profileName; }).out;
        merge = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".merge."0.1.0" { inherit profileName; }).out;
        nebulon = (rustPackages."unknown".nebulon."0.1.0" { inherit profileName; }).out;
        orbitus = (rustPackages."unknown".orbitus."0.1.0" { inherit profileName; }).out;
        rand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; }).out;
        schemars = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".schemars."0.8.21" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        serde_json = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.132" { inherit profileName; }).out;
        shellexpand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".shellexpand."3.1.0" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
        tokenizers = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokenizers."0.20.1" { inherit profileName; }).out;
        tokio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.41.0" { inherit profileName; }).out;
        tokio_tungstenite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-tungstenite."0.24.0" { inherit profileName; }).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".downcast-rs."1.2.1" = overridableMkRustCrate (profileName: rec {
      name = "downcast-rs";
      version = "1.2.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "75b325c5dbd37f80359721ad39aca5a29fb04c89279657cffdda8736d0c0b9d2"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".dpi."0.1.1" = overridableMkRustCrate (profileName: rec {
      name = "dpi";
      version = "0.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f25c0e292a7ca6d6498557ff1df68f32c99850012b6ea401cf8daf771f22ff53"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".drm."0.12.0" = overridableMkRustCrate (profileName: rec {
      name = "drm";
      version = "0.12.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "98888c4bbd601524c11a7ed63f814b8825f420514f78e96f752c437ae9cbb5d1"; };
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        bytemuck = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytemuck."1.19.0" { inherit profileName; }).out;
        drm_ffi = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".drm-ffi."0.8.0" { inherit profileName; }).out;
        drm_fourcc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".drm-fourcc."2.2.0" { inherit profileName; }).out;
        rustix = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustix."0.38.37" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".drm-ffi."0.8.0" = overridableMkRustCrate (profileName: rec {
      name = "drm-ffi";
      version = "0.8.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "97c98727e48b7ccb4f4aea8cfe881e5b07f702d17b7875991881b41af7278d53"; };
      dependencies = {
        drm_sys = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".drm-sys."0.7.0" { inherit profileName; }).out;
        rustix = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustix."0.38.37" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".drm-fourcc."2.2.0" = overridableMkRustCrate (profileName: rec {
      name = "drm-fourcc";
      version = "2.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0aafbcdb8afc29c1a7ee5fbe53b5d62f4565b35a042a662ca9fecd0b54dae6f4"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".drm-sys."0.7.0" = overridableMkRustCrate (profileName: rec {
      name = "drm-sys";
      version = "0.7.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "fd39dde40b6e196c2e8763f23d119ddb1a8714534bf7d77fa97a65b0feda3986"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        ${ if !(hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "linux") then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "linux" then "linux_raw_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".linux-raw-sys."0.6.5" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".dyn-clone."1.0.17" = overridableMkRustCrate (profileName: rec {
      name = "dyn-clone";
      version = "1.0.17";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0d6ef0072f8a535281e4876be788938b528e9a1d43900b82c2569af7da799125"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".dyn-stack."0.10.0" = overridableMkRustCrate (profileName: rec {
      name = "dyn-stack";
      version = "0.10.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "56e53799688f5632f364f8fb387488dd05db9fe45db7011be066fc20e7027f8b"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
      dependencies = {
        bytemuck = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytemuck."1.19.0" { inherit profileName; }).out;
        reborrow = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".reborrow."0.5.5" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".earcutr."0.4.3" = overridableMkRustCrate (profileName: rec {
      name = "earcutr";
      version = "0.4.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "79127ed59a85d7687c409e9978547cffb7dc79675355ed22da6b66fd5f6ead01"; };
      dependencies = {
        itertools = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.11.0" { inherit profileName; }).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".either."1.13.0" = overridableMkRustCrate (profileName: rec {
      name = "either";
      version = "1.13.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "60b1af1c220855b6ceac025d3f6ecdd2b7c4894bfe9cd9bda4fbb4bc7c0d4cf0"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "use_std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".ena."0.14.3" = overridableMkRustCrate (profileName: rec {
      name = "ena";
      version = "0.14.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3d248bdd43ce613d87415282f69b9bb99d947d290b10962dd6c56233312c2ad5"; };
      dependencies = {
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".encode_unicode."0.3.6" = overridableMkRustCrate (profileName: rec {
      name = "encode_unicode";
      version = "0.3.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a357d28ed41a50f9c765dbfe56cbc04a64e53e5fc58ba79fbc34c10ef3df831f"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".encoding_rs."0.8.35" = overridableMkRustCrate (profileName: rec {
      name = "encoding_rs";
      version = "0.8.35";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "75030f3c4f45dafd7586dd6780965a8c7e8e285a5ecb86713e63a79c5b2766f3"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
      ];
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".endi."1.1.0" = overridableMkRustCrate (profileName: rec {
      name = "endi";
      version = "1.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a3d8a32ae18130a3c84dd492d4215c3d913c3b07c6b63c2eb3eb7ff1101ab7bf"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".endian-type."0.1.2" = overridableMkRustCrate (profileName: rec {
      name = "endian-type";
      version = "0.1.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c34f04666d835ff5d62e058c3995147c06f42fe86ff053337632bca83e42702d"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".enum-as-inner."0.6.1" = overridableMkRustCrate (profileName: rec {
      name = "enum-as-inner";
      version = "0.6.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a1e6a265c649f3f5979b601d26f1d05ada116434c87741c9493cb56218f76cbc"; };
      dependencies = {
        heck = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".heck."0.5.0" { inherit profileName; }).out;
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".enumflags2."0.7.10" = overridableMkRustCrate (profileName: rec {
      name = "enumflags2";
      version = "0.7.10";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d232db7f5956f3f14313dc2f87985c58bd2c695ce124c8cdd984e08e15ac133d"; };
      features = builtins.concatLists [
        [ "serde" ]
      ];
      dependencies = {
        enumflags2_derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".enumflags2_derive."0.7.10" { profileName = "__noProfile"; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".enumflags2_derive."0.7.10" = overridableMkRustCrate (profileName: rec {
      name = "enumflags2_derive";
      version = "0.7.10";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "de0d48a183585823424a4ce1aa132d174a6a81bd540895822eb4c8373a8e49e8"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".envy."0.4.2" = overridableMkRustCrate (profileName: rec {
      name = "envy";
      version = "0.4.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3f47e0157f2cb54f5ae1bd371b30a2ae4311e1c028f575cd4e81de7353215965"; };
      dependencies = {
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".equivalent."1.0.1" = overridableMkRustCrate (profileName: rec {
      name = "equivalent";
      version = "1.0.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".errno."0.3.9" = overridableMkRustCrate (profileName: rec {
      name = "errno";
      version = "0.3.9";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "534c5cf6194dfab3db3242765c03bbe257cf92f22b38f6bc0c58d59108a820ba"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
      dependencies = {
        ${ if hostPlatform.isUnix || hostPlatform.parsed.kernel.name == "hermit" || hostPlatform.parsed.kernel.name == "wasi" then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.52.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".error-code."3.3.1" = overridableMkRustCrate (profileName: rec {
      name = "error-code";
      version = "3.3.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a5d9305ccc6942a704f4335694ecd3de2ea531b114ac2d51f5f843750787a92f"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".esaxx-rs."0.1.10" = overridableMkRustCrate (profileName: rec {
      name = "esaxx-rs";
      version = "0.1.10";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d817e038c30374a4bcb22f94d0a8a0e216958d4c3dcde369b1439fec4bdda6e6"; };
      features = builtins.concatLists [
        [ "cc" ]
        [ "cpp" ]
      ];
      buildDependencies = {
        cc = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.1.31" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".etagere."0.2.13" = overridableMkRustCrate (profileName: rec {
      name = "etagere";
      version = "0.2.13";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0e2f1e3be19fb10f549be8c1bf013e8675b4066c445e36eb76d2ebb2f54ee495"; };
      dependencies = {
        euclid = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".euclid."0.22.11" { inherit profileName; }).out;
        svg_fmt = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".svg_fmt."0.4.3" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".euclid."0.22.11" = overridableMkRustCrate (profileName: rec {
      name = "euclid";
      version = "0.22.11";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ad9cdb4b747e485a12abb0e6566612956c7a1bafa3bdb8d682c5b6d403589e48"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".event-listener."2.5.3" = overridableMkRustCrate (profileName: rec {
      name = "event-listener";
      version = "2.5.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0206175f82b8d6bf6652ff7d71a1e27fd2e4efde587fd368662814d6ec1d9ce0"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".event-listener."5.3.1" = overridableMkRustCrate (profileName: rec {
      name = "event-listener";
      version = "5.3.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6032be9bd27023a771701cc49f9f053c751055f71efb2e0ae5c15809093675ba"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "parking" ]
        [ "std" ]
      ];
      dependencies = {
        concurrent_queue = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".concurrent-queue."2.5.0" { inherit profileName; }).out;
        parking = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking."2.2.1" { inherit profileName; }).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.15" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".event-listener-strategy."0.5.2" = overridableMkRustCrate (profileName: rec {
      name = "event-listener-strategy";
      version = "0.5.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0f214dc438f977e6d4e3500aaa277f5ad94ca83fbbd9b1a15713ce2344ccc5a1"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        event_listener = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".event-listener."5.3.1" { inherit profileName; }).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.15" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".eyre."0.6.12" = overridableMkRustCrate (profileName: rec {
      name = "eyre";
      version = "0.6.12";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7cd915d99f24784cdc19fd37ef22b97e3ff0ae756c7e492e9fbfe897d61e2aec"; };
      features = builtins.concatLists [
        [ "auto-install" ]
        [ "default" ]
        [ "track-caller" ]
      ];
      dependencies = {
        indenter = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".indenter."0.3.3" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".fancy-regex."0.13.0" = overridableMkRustCrate (profileName: rec {
      name = "fancy-regex";
      version = "0.13.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "531e46835a22af56d1e3b66f04844bed63158bc094a628bec1d321d9b4c44bf2"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "perf" ]
        [ "std" ]
        [ "unicode" ]
      ];
      dependencies = {
        bit_set = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bit-set."0.5.3" { inherit profileName; }).out;
        regex_automata = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-automata."0.4.8" { inherit profileName; }).out;
        regex_syntax = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.8.5" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".fast-srgb8."1.0.0" = overridableMkRustCrate (profileName: rec {
      name = "fast-srgb8";
      version = "1.0.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "dd2e7510819d6fbf51a5545c8f922716ecfb14df168a3242f7d33e0239efe6a1"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".fastrand."2.1.1" = overridableMkRustCrate (profileName: rec {
      name = "fastrand";
      version = "2.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e8c02a5121d4ea3eb16a80748c74f5549a5665e4c21333c6098f283870fbdea6"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".fdeflate."0.3.5" = overridableMkRustCrate (profileName: rec {
      name = "fdeflate";
      version = "0.3.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d8090f921a24b04994d9929e204f50b498a33ea6ba559ffaa05e04f7ee7fb5ab"; };
      dependencies = {
        simd_adler32 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".simd-adler32."0.3.7" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".filetime."0.2.25" = overridableMkRustCrate (profileName: rec {
      name = "filetime";
      version = "0.2.25";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "35c0522e981e68cbfa8c3f978441a5f34b30b96e146b33cd3359176b50fe8586"; };
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "redox" then "libredox" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libredox."0.1.3" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.59.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".fixedbitset."0.4.2" = overridableMkRustCrate (profileName: rec {
      name = "fixedbitset";
      version = "0.4.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0ce7134b9999ecaf8bcd65542e436736ef32ddca1b3e06094cb6ec5755203b80"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.34" = overridableMkRustCrate (profileName: rec {
      name = "flate2";
      version = "1.0.34";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a1b589b4dc103969ad3cf85c950899926ec64300a1a46d76c03a6072957036f0"; };
      features = builtins.concatLists [
        [ "any_impl" ]
        [ "default" ]
        [ "miniz_oxide" ]
        [ "rust_backend" ]
      ];
      dependencies = {
        crc32fast = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crc32fast."1.4.2" { inherit profileName; }).out;
        miniz_oxide = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.8.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".float_next_after."1.0.0" = overridableMkRustCrate (profileName: rec {
      name = "float_next_after";
      version = "1.0.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8bf7cc16383c4b8d58b9905a8509f02926ce3058053c056376248d958c9df1e8"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".flume."0.11.1" = overridableMkRustCrate (profileName: rec {
      name = "flume";
      version = "0.11.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "da0e4dd2a88388a1f4ccc7c9ce104604dab68d9f408dc34cd45823d5a9069095"; };
      features = builtins.concatLists [
        [ "async" ]
        [ "default" ]
        [ "eventual-fairness" ]
        [ "futures-core" ]
        [ "futures-sink" ]
        [ "nanorand" ]
        [ "select" ]
      ];
      dependencies = {
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.31" { inherit profileName; }).out;
        futures_sink = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.31" { inherit profileName; }).out;
        nanorand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".nanorand."0.7.0" { inherit profileName; }).out;
        spin1 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".spin."0.9.8" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.7" = overridableMkRustCrate (profileName: rec {
      name = "fnv";
      version = "1.0.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".font-types."0.7.2" = overridableMkRustCrate (profileName: rec {
      name = "font-types";
      version = "0.7.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "dda6e36206148f69fc6ecb1bb6c0dedd7ee469f3db1d0dc2045beea28430ca43"; };
      features = builtins.concatLists [
        [ "bytemuck" ]
        [ "std" ]
      ];
      dependencies = {
        bytemuck = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytemuck."1.19.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".fontconfig-parser."0.5.7" = overridableMkRustCrate (profileName: rec {
      name = "fontconfig-parser";
      version = "0.5.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c1fcfcd44ca6e90c921fee9fa665d530b21ef1327a4c1a6c5250ea44b776ada7"; };
      dependencies = {
        roxmltree = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".roxmltree."0.20.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".fontdb."0.16.2" = overridableMkRustCrate (profileName: rec {
      name = "fontdb";
      version = "0.16.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b0299020c3ef3f60f526a4f64ab4a3d4ce116b1acbf24cdd22da0068e5d81dc3"; };
      features = builtins.concatLists [
        [ "fontconfig" ]
        [ "fontconfig-parser" ]
        [ "fs" ]
        [ "memmap" ]
        [ "memmap2" ]
        [ "std" ]
      ];
      dependencies = {
        ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "android") then "fontconfig_parser" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".fontconfig-parser."0.5.7" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        memmap2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memmap2."0.9.5" { inherit profileName; }).out;
        slotmap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".slotmap."1.0.7" { inherit profileName; }).out;
        tinyvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tinyvec."1.8.0" { inherit profileName; }).out;
        ttf_parser = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ttf-parser."0.20.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".foreign-types."0.3.2" = overridableMkRustCrate (profileName: rec {
      name = "foreign-types";
      version = "0.3.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f6f339eb8adc052cd2ca78910fda869aefa38d22d5cb648e6485e4d3fc06f3b1"; };
      dependencies = {
        foreign_types_shared = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".foreign-types-shared."0.1.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".foreign-types."0.5.0" = overridableMkRustCrate (profileName: rec {
      name = "foreign-types";
      version = "0.5.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d737d9aa519fb7b749cbc3b962edcf310a8dd1f4b67c91c4f83975dbdd17d965"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        foreign_types_macros = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".foreign-types-macros."0.2.3" { profileName = "__noProfile"; }).out;
        foreign_types_shared = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".foreign-types-shared."0.3.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".foreign-types-macros."0.2.3" = overridableMkRustCrate (profileName: rec {
      name = "foreign-types-macros";
      version = "0.2.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1a5c6c585bc94aaf2c7b51dd4c2ba22680844aba4c687be581871a6f518c5742"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".foreign-types-shared."0.1.1" = overridableMkRustCrate (profileName: rec {
      name = "foreign-types-shared";
      version = "0.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "00b0228411908ca8685dba7fc2cdd70ec9990a6e753e89b6ac91a84c40fbaf4b"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".foreign-types-shared."0.3.1" = overridableMkRustCrate (profileName: rec {
      name = "foreign-types-shared";
      version = "0.3.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "aa9a19cbb55df58761df49b23516a86d432839add4af60fc256da840f66ed35b"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".form_urlencoded."1.2.1" = overridableMkRustCrate (profileName: rec {
      name = "form_urlencoded";
      version = "1.2.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e13624c2627564efccf4934284bdd98cbaa14e79b0b5a141218e507b3a823456"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        percent_encoding = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.3.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".fs_extra."1.3.0" = overridableMkRustCrate (profileName: rec {
      name = "fs_extra";
      version = "1.3.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "42703706b716c37f96a77aea830392ad231f44c9e9a67872fa5548707e11b11c"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".fst."0.4.7" = overridableMkRustCrate (profileName: rec {
      name = "fst";
      version = "0.4.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7ab85b9b05e3978cc9a9cf8fea7f01b494e1a09ed3037e16ba39edc7a29eb61a"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".funty."2.0.0" = overridableMkRustCrate (profileName: rec {
      name = "funty";
      version = "2.0.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e6d5a32815ae3f33302d95fdcb2ce17862f8c65363dcfd29360480ba1001fc9c"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".futf."0.1.5" = overridableMkRustCrate (profileName: rec {
      name = "futf";
      version = "0.1.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "df420e2e84819663797d1ec6544b13c5be84629e7bb00dc960d6917db2987843"; };
      dependencies = {
        mac = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".mac."0.1.1" { inherit profileName; }).out;
        debug_unreachable = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".new_debug_unreachable."1.0.6" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".futures."0.3.31" = overridableMkRustCrate (profileName: rec {
      name = "futures";
      version = "0.3.31";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "65bc07b1a8bc7c85c5f2e110c476c7389b4554ba72af57d8445ea63a576b0876"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "async-await" ]
        [ "default" ]
        [ "executor" ]
        [ "futures-executor" ]
        [ "std" ]
        [ "thread-pool" ]
      ];
      dependencies = {
        futures_channel = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.31" { inherit profileName; }).out;
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.31" { inherit profileName; }).out;
        futures_executor = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-executor."0.3.31" { inherit profileName; }).out;
        futures_io = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-io."0.3.31" { inherit profileName; }).out;
        futures_sink = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.31" { inherit profileName; }).out;
        futures_task = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-task."0.3.31" { inherit profileName; }).out;
        futures_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.31" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.31" = overridableMkRustCrate (profileName: rec {
      name = "futures-channel";
      version = "0.3.31";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2dff15bf788c671c1934e366d07e30c1814a8ef514e1af724a602e8a2fbe1b10"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "futures-sink" ]
        [ "sink" ]
        [ "std" ]
      ];
      dependencies = {
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.31" { inherit profileName; }).out;
        futures_sink = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.31" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.31" = overridableMkRustCrate (profileName: rec {
      name = "futures-core";
      version = "0.3.31";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "05f29059c0c2090612e8d742178b0580d2dc940c837851ad723096f87af6663e"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".futures-executor."0.3.31" = overridableMkRustCrate (profileName: rec {
      name = "futures-executor";
      version = "0.3.31";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1e28d1d997f585e54aebc3f97d39e72338912123a67330d723fdbb564d646c9f"; };
      features = builtins.concatLists [
        [ "num_cpus" ]
        [ "std" ]
        [ "thread-pool" ]
      ];
      dependencies = {
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.31" { inherit profileName; }).out;
        futures_task = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-task."0.3.31" { inherit profileName; }).out;
        futures_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.31" { inherit profileName; }).out;
        num_cpus = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.16.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".futures-io."0.3.31" = overridableMkRustCrate (profileName: rec {
      name = "futures-io";
      version = "0.3.31";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9e5c1b78ca4aae1ac06c48a526a655760685149f0d465d21f37abfe57ce075c6"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".futures-lite."2.3.0" = overridableMkRustCrate (profileName: rec {
      name = "futures-lite";
      version = "2.3.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "52527eb5074e35e9339c6b4e8d12600c7128b68fb25dcb9fa9dec18f7c25f3a5"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "fastrand" ]
        [ "futures-io" ]
        [ "parking" ]
        [ "race" ]
        [ "std" ]
      ];
      dependencies = {
        fastrand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".fastrand."2.1.1" { inherit profileName; }).out;
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.31" { inherit profileName; }).out;
        futures_io = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-io."0.3.31" { inherit profileName; }).out;
        parking = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking."2.2.1" { inherit profileName; }).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.15" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".futures-macro."0.3.31" = overridableMkRustCrate (profileName: rec {
      name = "futures-macro";
      version = "0.3.31";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "162ee34ebcb7c64a8abebc059ce0fee27c2262618d7b60ed8faf72fef13c3650"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.31" = overridableMkRustCrate (profileName: rec {
      name = "futures-sink";
      version = "0.3.31";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e575fab7d1e0dcb8d0c7bcf9a63ee213816ab51902e6d244a95819acacf1d4f7"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".futures-task."0.3.31" = overridableMkRustCrate (profileName: rec {
      name = "futures-task";
      version = "0.3.31";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f90f7dce0722e95104fcb095585910c0977252f286e354b5e3bd38902cd99988"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".futures-timer."3.0.3" = overridableMkRustCrate (profileName: rec {
      name = "futures-timer";
      version = "3.0.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f288b0a4f20f9a56b5d1da57e2227c661b7b16168e2f72365f57b63326e29b24"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.31" = overridableMkRustCrate (profileName: rec {
      name = "futures-util";
      version = "0.3.31";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9fa08315bb612088cc391249efdc3bc77536f16c91f6cf495e6fbe85b20a4a81"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "async-await" ]
        [ "async-await-macro" ]
        [ "channel" ]
        [ "default" ]
        [ "futures-channel" ]
        [ "futures-io" ]
        [ "futures-macro" ]
        [ "futures-sink" ]
        [ "io" ]
        [ "memchr" ]
        [ "sink" ]
        [ "slab" ]
        [ "std" ]
      ];
      dependencies = {
        futures_channel = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.31" { inherit profileName; }).out;
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.31" { inherit profileName; }).out;
        futures_io = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-io."0.3.31" { inherit profileName; }).out;
        futures_macro = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-macro."0.3.31" { profileName = "__noProfile"; }).out;
        futures_sink = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.31" { inherit profileName; }).out;
        futures_task = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-task."0.3.31" { inherit profileName; }).out;
        memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" { inherit profileName; }).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.15" { inherit profileName; }).out;
        pin_utils = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-utils."0.1.0" { inherit profileName; }).out;
        slab = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".slab."0.4.9" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".fuzzy-matcher."0.3.7" = overridableMkRustCrate (profileName: rec {
      name = "fuzzy-matcher";
      version = "0.3.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "54614a3312934d066701a80f20f15fa3b56d67ac7722b39eea5b4c9dd1d66c94"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        thread_local = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thread_local."1.1.8" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".gemm."0.17.1" = overridableMkRustCrate (profileName: rec {
      name = "gemm";
      version = "0.17.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6ab24cc62135b40090e31a76a9b2766a501979f3070fa27f689c27ec04377d32"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "f16" ]
        [ "gemm-f16" ]
        [ "rayon" ]
        [ "std" ]
        [ "wasm-simd128-enable" ]
      ];
      dependencies = {
        dyn_stack = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dyn-stack."0.10.0" { inherit profileName; }).out;
        gemm_c32 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".gemm-c32."0.17.1" { inherit profileName; }).out;
        gemm_c64 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".gemm-c64."0.17.1" { inherit profileName; }).out;
        gemm_common = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".gemm-common."0.17.1" { inherit profileName; }).out;
        gemm_f16 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".gemm-f16."0.17.1" { inherit profileName; }).out;
        gemm_f32 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".gemm-f32."0.17.1" { inherit profileName; }).out;
        gemm_f64 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".gemm-f64."0.17.1" { inherit profileName; }).out;
        num_complex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-complex."0.4.6" { inherit profileName; }).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
        paste = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".paste."1.0.15" { profileName = "__noProfile"; }).out;
        raw_cpuid = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".raw-cpuid."10.7.0" { inherit profileName; }).out;
        seq_macro = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".seq-macro."0.3.5" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".gemm-c32."0.17.1" = overridableMkRustCrate (profileName: rec {
      name = "gemm-c32";
      version = "0.17.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b9c030d0b983d1e34a546b86e08f600c11696fde16199f971cd46c12e67512c0"; };
      features = builtins.concatLists [
        [ "rayon" ]
        [ "std" ]
      ];
      dependencies = {
        dyn_stack = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dyn-stack."0.10.0" { inherit profileName; }).out;
        gemm_common = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".gemm-common."0.17.1" { inherit profileName; }).out;
        num_complex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-complex."0.4.6" { inherit profileName; }).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
        paste = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".paste."1.0.15" { profileName = "__noProfile"; }).out;
        raw_cpuid = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".raw-cpuid."10.7.0" { inherit profileName; }).out;
        seq_macro = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".seq-macro."0.3.5" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".gemm-c64."0.17.1" = overridableMkRustCrate (profileName: rec {
      name = "gemm-c64";
      version = "0.17.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "fbb5f2e79fefb9693d18e1066a557b4546cd334b226beadc68b11a8f9431852a"; };
      features = builtins.concatLists [
        [ "rayon" ]
        [ "std" ]
      ];
      dependencies = {
        dyn_stack = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dyn-stack."0.10.0" { inherit profileName; }).out;
        gemm_common = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".gemm-common."0.17.1" { inherit profileName; }).out;
        num_complex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-complex."0.4.6" { inherit profileName; }).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
        paste = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".paste."1.0.15" { profileName = "__noProfile"; }).out;
        raw_cpuid = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".raw-cpuid."10.7.0" { inherit profileName; }).out;
        seq_macro = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".seq-macro."0.3.5" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".gemm-common."0.17.1" = overridableMkRustCrate (profileName: rec {
      name = "gemm-common";
      version = "0.17.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a2e7ea062c987abcd8db95db917b4ffb4ecdfd0668471d8dc54734fdff2354e8"; };
      features = builtins.concatLists [
        [ "f16" ]
        [ "half" ]
        [ "rayon" ]
        [ "std" ]
        [ "sysctl" ]
        [ "wasm-simd128-enable" ]
      ];
      dependencies = {
        bytemuck = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytemuck."1.19.0" { inherit profileName; }).out;
        dyn_stack = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dyn-stack."0.10.0" { inherit profileName; }).out;
        half = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".half."2.4.1" { inherit profileName; }).out;
        num_complex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-complex."0.4.6" { inherit profileName; }).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
        paste = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".paste."1.0.15" { profileName = "__noProfile"; }).out;
        pulp = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pulp."0.18.22" { inherit profileName; }).out;
        raw_cpuid = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".raw-cpuid."10.7.0" { inherit profileName; }).out;
        rayon = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon."1.10.0" { inherit profileName; }).out;
        seq_macro = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".seq-macro."0.3.5" { profileName = "__noProfile"; }).out;
        ${ if hostPlatform.parsed.vendor.name == "apple" then "sysctl" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sysctl."0.5.5" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".gemm-f16."0.17.1" = overridableMkRustCrate (profileName: rec {
      name = "gemm-f16";
      version = "0.17.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7ca4c06b9b11952071d317604acb332e924e817bd891bec8dfb494168c7cedd4"; };
      features = builtins.concatLists [
        [ "rayon" ]
        [ "std" ]
      ];
      dependencies = {
        dyn_stack = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dyn-stack."0.10.0" { inherit profileName; }).out;
        gemm_common = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".gemm-common."0.17.1" { inherit profileName; }).out;
        gemm_f32 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".gemm-f32."0.17.1" { inherit profileName; }).out;
        half = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".half."2.4.1" { inherit profileName; }).out;
        num_complex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-complex."0.4.6" { inherit profileName; }).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
        paste = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".paste."1.0.15" { profileName = "__noProfile"; }).out;
        raw_cpuid = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".raw-cpuid."10.7.0" { inherit profileName; }).out;
        rayon = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon."1.10.0" { inherit profileName; }).out;
        seq_macro = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".seq-macro."0.3.5" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".gemm-f32."0.17.1" = overridableMkRustCrate (profileName: rec {
      name = "gemm-f32";
      version = "0.17.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e9a69f51aaefbd9cf12d18faf273d3e982d9d711f60775645ed5c8047b4ae113"; };
      features = builtins.concatLists [
        [ "rayon" ]
        [ "std" ]
      ];
      dependencies = {
        dyn_stack = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dyn-stack."0.10.0" { inherit profileName; }).out;
        gemm_common = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".gemm-common."0.17.1" { inherit profileName; }).out;
        num_complex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-complex."0.4.6" { inherit profileName; }).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
        paste = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".paste."1.0.15" { profileName = "__noProfile"; }).out;
        raw_cpuid = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".raw-cpuid."10.7.0" { inherit profileName; }).out;
        seq_macro = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".seq-macro."0.3.5" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".gemm-f64."0.17.1" = overridableMkRustCrate (profileName: rec {
      name = "gemm-f64";
      version = "0.17.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "aa397a48544fadf0b81ec8741e5c0fba0043008113f71f2034def1935645d2b0"; };
      features = builtins.concatLists [
        [ "rayon" ]
        [ "std" ]
      ];
      dependencies = {
        dyn_stack = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dyn-stack."0.10.0" { inherit profileName; }).out;
        gemm_common = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".gemm-common."0.17.1" { inherit profileName; }).out;
        num_complex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-complex."0.4.6" { inherit profileName; }).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
        paste = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".paste."1.0.15" { profileName = "__noProfile"; }).out;
        raw_cpuid = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".raw-cpuid."10.7.0" { inherit profileName; }).out;
        seq_macro = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".seq-macro."0.3.5" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".generic-array."0.14.7" = overridableMkRustCrate (profileName: rec {
      name = "generic-array";
      version = "0.14.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a"; };
      features = builtins.concatLists [
        [ "more_lengths" ]
      ];
      dependencies = {
        typenum = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".typenum."1.17.0" { inherit profileName; }).out;
      };
      buildDependencies = {
        version_check = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.5" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".geo."0.28.0" = overridableMkRustCrate (profileName: rec {
      name = "geo";
      version = "0.28.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f811f663912a69249fa620dcd2a005db7254529da2d8a0b23942e81f47084501"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "earcutr" ]
        [ "serde" ]
        [ "spade" ]
        [ "use-serde" ]
      ];
      dependencies = {
        earcutr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".earcutr."0.4.3" { inherit profileName; }).out;
        float_next_after = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".float_next_after."1.0.0" { inherit profileName; }).out;
        geo_types = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".geo-types."0.7.13" { inherit profileName; }).out;
        geographiclib_rs = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".geographiclib-rs."0.2.4" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
        robust = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".robust."1.1.0" { inherit profileName; }).out;
        rstar = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rstar."0.12.0" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        spade = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".spade."2.12.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".geo-types."0.7.13" = overridableMkRustCrate (profileName: rec {
      name = "geo-types";
      version = "0.7.13";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9ff16065e5720f376fbced200a5ae0f47ace85fd70b7e54269790281353b6d61"; };
      features = builtins.concatLists [
        [ "approx" ]
        [ "arbitrary" ]
        [ "default" ]
        [ "rstar_0_12" ]
        [ "serde" ]
        [ "std" ]
        [ "use-rstar_0_12" ]
      ];
      dependencies = {
        approx = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".approx."0.5.1" { inherit profileName; }).out;
        arbitrary = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".arbitrary."1.3.2" { inherit profileName; }).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
        rstar_0_12 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rstar."0.12.0" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".geographiclib-rs."0.2.4" = overridableMkRustCrate (profileName: rec {
      name = "geographiclib-rs";
      version = "0.2.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e6e5ed84f8089c70234b0a8e0aedb6dc733671612ddc0d37c6066052f9781960"; };
      dependencies = {
        libm = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libm."0.2.8" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".gethostname."0.4.3" = overridableMkRustCrate (profileName: rec {
      name = "gethostname";
      version = "0.4.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0176e0459c2e4a1fe232f984bca6890e681076abb9934f6cea7c326f3fc47818"; };
      dependencies = {
        ${ if !hostPlatform.isWindows then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "windows_targets" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.48.5" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.15" = overridableMkRustCrate (profileName: rec {
      name = "getrandom";
      version = "0.2.15";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7"; };
      features = builtins.concatLists [
        [ "js" ]
        [ "js-sys" ]
        [ "rdrand" ]
        [ "std" ]
        [ "wasm-bindgen" ]
      ];
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        ${ if (hostPlatform.parsed.cpu.name == "wasm32" || hostPlatform.parsed.cpu.name == "wasm64") && hostPlatform.parsed.kernel.name == "unknown" then "js_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.72" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "wasi" then "wasi" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasi."0.11.0+wasi-snapshot-preview1" { inherit profileName; }).out;
        ${ if (hostPlatform.parsed.cpu.name == "wasm32" || hostPlatform.parsed.cpu.name == "wasm64") && hostPlatform.parsed.kernel.name == "unknown" then "wasm_bindgen" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.95" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".gimli."0.28.1" = overridableMkRustCrate (profileName: rec {
      name = "gimli";
      version = "0.28.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4271d37baee1b8c7e4b708028c57d816cf9d2434acb33a549475f78c181f6253"; };
      features = builtins.concatLists [
        [ "read" ]
        [ "read-core" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".gl_generator."0.14.0" = overridableMkRustCrate (profileName: rec {
      name = "gl_generator";
      version = "0.14.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1a95dfc23a2b4a9a2f5ab41d194f8bfda3cabec42af4e39f08c339eb2a0c124d"; };
      dependencies = {
        khronos_api = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".khronos_api."3.1.0" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        xml = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".xml-rs."0.8.22" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".glam."0.25.0" = overridableMkRustCrate (profileName: rec {
      name = "glam";
      version = "0.25.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "151665d9be52f9bb40fc7966565d39666f2d1e69233571b71b87791c7e0528b3"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".glob."0.3.1" = overridableMkRustCrate (profileName: rec {
      name = "glob";
      version = "0.3.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d2fabcfbdc87f4758337ca535fb41a6d701b65693ce38287d856d1674551ec9b"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".glow."0.13.1" = overridableMkRustCrate (profileName: rec {
      name = "glow";
      version = "0.13.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "bd348e04c43b32574f2de31c8bb397d96c9fcfa1371bd4ca6d8bdc464ab121b1"; };
      dependencies = {
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "js_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.72" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "slotmap" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".slotmap."1.0.7" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "wasm_bindgen" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.95" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "web_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.72" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".glutin_wgl_sys."0.5.0" = overridableMkRustCrate (profileName: rec {
      name = "glutin_wgl_sys";
      version = "0.5.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6c8098adac955faa2d31079b65dc48841251f69efd3ac25477903fc424362ead"; };
      buildDependencies = {
        gl_generator = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".gl_generator."0.14.0" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".gpu-alloc."0.6.0" = overridableMkRustCrate (profileName: rec {
      name = "gpu-alloc";
      version = "0.6.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "fbcd2dba93594b227a1f57ee09b8b9da8892c34d55aa332e034a228d0fe6a171"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        gpu_alloc_types = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".gpu-alloc-types."0.3.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".gpu-alloc-types."0.3.0" = overridableMkRustCrate (profileName: rec {
      name = "gpu-alloc-types";
      version = "0.3.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "98ff03b468aa837d70984d55f5d3f846f6ec31fe34bbb97c4f85219caeee1ca4"; };
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".gpu-allocator."0.25.0" = overridableMkRustCrate (profileName: rec {
      name = "gpu-allocator";
      version = "0.25.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6f56f6318968d03c18e1bcf4857ff88c61157e9da8e47c5f29055d60e1228884"; };
      features = builtins.concatLists [
        [ "d3d12" ]
        [ "public-winapi" ]
        [ "windows" ]
      ];
      dependencies = {
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        presser = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".presser."0.3.1" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "winapi" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "windows" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows."0.52.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".gpu-descriptor."0.2.4" = overridableMkRustCrate (profileName: rec {
      name = "gpu-descriptor";
      version = "0.2.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "cc11df1ace8e7e564511f53af41f3e42ddc95b56fd07b3f4445d2a6048bc682c"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        gpu_descriptor_types = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".gpu-descriptor-types."0.1.2" { inherit profileName; }).out;
        hashbrown = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.14.5" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".gpu-descriptor-types."0.1.2" = overridableMkRustCrate (profileName: rec {
      name = "gpu-descriptor-types";
      version = "0.1.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6bf0b36e6f090b7e1d8a4b49c0cb81c1f8376f72198c65dd3ad9ff3556b8b78c"; };
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
      };
    });

    "unknown".gravity."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "gravity";
      version = "0.1.0";
      registry = "unknown";
      src = fetchCrateLocal workspaceSrc;
      dependencies = {
        anyhow = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.91" { inherit profileName; }).out;
        clap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."4.5.20" { inherit profileName; }).out;
        directories = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".directories."5.0.1" { inherit profileName; }).out;
        dotenvy = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dotenvy."0.15.7" { inherit profileName; }).out;
        envy = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".envy."0.4.2" { inherit profileName; }).out;
        flume = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".flume."0.11.1" { inherit profileName; }).out;
        futures = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.31" { inherit profileName; }).out;
        merge = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".merge."0.1.0" { inherit profileName; }).out;
        notify = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".notify."6.1.1" { inherit profileName; }).out;
        schemars = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".schemars."0.8.21" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        serde_json = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.132" { inherit profileName; }).out;
        serde_yaml = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_yaml."0.9.34+deprecated" { inherit profileName; }).out;
        shellexpand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".shellexpand."3.1.0" { inherit profileName; }).out;
        strum = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".strum."0.26.3" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
        tokio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.41.0" { inherit profileName; }).out;
        toml = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.8.19" { inherit profileName; }).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
        tracing_subscriber = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-subscriber."0.3.18" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".guillotiere."0.6.2" = overridableMkRustCrate (profileName: rec {
      name = "guillotiere";
      version = "0.6.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b62d5865c036cb1393e23c50693df631d3f5d7bcca4c04fe4cc0fd592e74a782"; };
      dependencies = {
        euclid = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".euclid."0.22.11" { inherit profileName; }).out;
        svg_fmt = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".svg_fmt."0.4.3" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".h2."0.3.26" = overridableMkRustCrate (profileName: rec {
      name = "h2";
      version = "0.3.26";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "81fe527a889e1532da5c525686d96d4c2e74cdd345badf8dfef9f6b39dd5f5e8"; };
      dependencies = {
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.8.0" { inherit profileName; }).out;
        fnv = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.7" { inherit profileName; }).out;
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.31" { inherit profileName; }).out;
        futures_sink = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.31" { inherit profileName; }).out;
        futures_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.31" { inherit profileName; }).out;
        http = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.12" { inherit profileName; }).out;
        indexmap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."2.6.0" { inherit profileName; }).out;
        slab = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".slab."0.4.9" { inherit profileName; }).out;
        tokio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.41.0" { inherit profileName; }).out;
        tokio_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-util."0.7.12" { inherit profileName; }).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".half."2.4.1" = overridableMkRustCrate (profileName: rec {
      name = "half";
      version = "2.4.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6dd08c532ae367adf81c312a4580bc67f1d0fe8bc9c460520283f4c0ff277888"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "bytemuck" ]
        [ "default" ]
        [ "num-traits" ]
        [ "rand_distr" ]
        [ "std" ]
        [ "use-intrinsics" ]
      ];
      dependencies = {
        bytemuck = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytemuck."1.19.0" { inherit profileName; }).out;
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "spirv" then "crunchy" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crunchy."0.2.2" { inherit profileName; }).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
        rand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; }).out;
        rand_distr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_distr."0.4.3" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".hash32."0.3.1" = overridableMkRustCrate (profileName: rec {
      name = "hash32";
      version = "0.3.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "47d60b12902ba28e2730cd37e95b8c9223af2808df9e902d4df49588d1470606"; };
      dependencies = {
        byteorder = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.5.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.12.3" = overridableMkRustCrate (profileName: rec {
      name = "hashbrown";
      version = "0.12.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8a9ee70c43aaf417c914396645a0fa852624801b24ebb7ae78fe8272889ac888"; };
      features = builtins.concatLists [
        [ "ahash" ]
        [ "default" ]
        [ "inline-more" ]
        [ "raw" ]
      ];
      dependencies = {
        ahash = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ahash."0.7.8" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.14.5" = overridableMkRustCrate (profileName: rec {
      name = "hashbrown";
      version = "0.14.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e5274423e17b7c9fc20b6e7e208532f9b19825d82dfd615708b70edd83df41f1"; };
      features = builtins.concatLists [
        [ "ahash" ]
        [ "allocator-api2" ]
        [ "default" ]
        [ "inline-more" ]
        [ "raw" ]
      ];
      dependencies = {
        ahash = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ahash."0.8.11" { inherit profileName; }).out;
        allocator_api2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".allocator-api2."0.2.18" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.15.0" = overridableMkRustCrate (profileName: rec {
      name = "hashbrown";
      version = "0.15.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1e087f84d4f86bf4b218b927129862374b72199ae7d8657835f1e89000eea4fb"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".hassle-rs."0.11.0" = overridableMkRustCrate (profileName: rec {
      name = "hassle-rs";
      version = "0.11.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "af2a7e73e1f34c48da31fb668a907f250794837e08faa144fd24f0b8b741e890"; };
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        com = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".com."0.6.0" { inherit profileName; }).out;
        ${ if !hostPlatform.isWindows then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        libloading = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libloading."0.8.5" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
        widestring = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".widestring."1.1.0" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "winapi" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".heapless."0.8.0" = overridableMkRustCrate (profileName: rec {
      name = "heapless";
      version = "0.8.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0bfb9eb618601c89945a70e254898da93b13be0388091d42117462b265bb3fad"; };
      dependencies = {
        hash32 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hash32."0.3.1" { inherit profileName; }).out;
        stable_deref_trait = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".stable_deref_trait."1.2.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".heck."0.4.1" = overridableMkRustCrate (profileName: rec {
      name = "heck";
      version = "0.4.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".heck."0.5.0" = overridableMkRustCrate (profileName: rec {
      name = "heck";
      version = "0.5.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2304e00983f87ffb38b55b444b5e3b60a884b5d30c0fca7d82fe33449bbe55ea"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.3.9" = overridableMkRustCrate (profileName: rec {
      name = "hermit-abi";
      version = "0.3.9";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d231dfb89cfffdbc30e7fc41579ed6066ad03abda9e567ccafae602b97ec5024"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.4.0" = overridableMkRustCrate (profileName: rec {
      name = "hermit-abi";
      version = "0.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "fbf6a919d6cf397374f7dfeeea91d974c7c0a7221d0d0f4f20d859d329e53fcc"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".hex."0.4.3" = overridableMkRustCrate (profileName: rec {
      name = "hex";
      version = "0.4.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7f24254aa9a54b5c858eaee2f5bccdb46aaf0e486a595ed5fd8f86ba55232a70"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".hexf-parse."0.2.1" = overridableMkRustCrate (profileName: rec {
      name = "hexf-parse";
      version = "0.2.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "dfa686283ad6dd069f105e5ab091b04c62850d3e4cf5d67debad1933f55023df"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".hf-hub."0.3.2" = overridableMkRustCrate (profileName: rec {
      name = "hf-hub";
      version = "0.3.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2b780635574b3d92f036890d8373433d6f9fc7abb320ee42a5c25897fc8ed732"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "online" ]
        [ "tokio" ]
      ];
      dependencies = {
        dirs = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dirs."5.0.1" { inherit profileName; }).out;
        futures = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.31" { inherit profileName; }).out;
        indicatif = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".indicatif."0.17.8" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        native_tls = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".native-tls."0.2.12" { inherit profileName; }).out;
        num_cpus = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.16.0" { inherit profileName; }).out;
        rand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; }).out;
        reqwest = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".reqwest."0.11.27" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        serde_json = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.132" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
        tokio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.41.0" { inherit profileName; }).out;
        ureq = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ureq."2.10.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".hmac."0.12.1" = overridableMkRustCrate (profileName: rec {
      name = "hmac";
      version = "0.12.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6c49c37c09c17a53d937dfbb742eb3a961d65a994e6bcdcf37e7399d0cc8ab5e"; };
      dependencies = {
        digest = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.10.7" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".html5ever."0.27.0" = overridableMkRustCrate (profileName: rec {
      name = "html5ever";
      version = "0.27.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c13771afe0e6e846f1e67d038d4cb29998a6779f93c809212e4e9c32efd244d4"; };
      dependencies = {
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        mac = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".mac."0.1.1" { inherit profileName; }).out;
        markup5ever = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".markup5ever."0.12.1" { inherit profileName; }).out;
      };
      buildDependencies = {
        proc_macro2 = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { profileName = "__noProfile"; }).out;
        quote = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { profileName = "__noProfile"; }).out;
        syn = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".http."0.2.12" = overridableMkRustCrate (profileName: rec {
      name = "http";
      version = "0.2.12";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "601cbb57e577e2f5ef5be8e7b83f0f63994f25aa94d673e54a92d5c516d101f1"; };
      dependencies = {
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.8.0" { inherit profileName; }).out;
        fnv = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.7" { inherit profileName; }).out;
        itoa = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.11" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".http."1.1.0" = overridableMkRustCrate (profileName: rec {
      name = "http";
      version = "1.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "21b9ddb458710bc376481b842f5da65cdf31522de232c1ca8146abce2a358258"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.8.0" { inherit profileName; }).out;
        fnv = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.7" { inherit profileName; }).out;
        itoa = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.11" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".http-body."0.4.6" = overridableMkRustCrate (profileName: rec {
      name = "http-body";
      version = "0.4.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7ceab25649e9960c0311ea418d17bee82c0dcec1bd053b5f9a66e265a693bed2"; };
      dependencies = {
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.8.0" { inherit profileName; }).out;
        http = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.12" { inherit profileName; }).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.15" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".http-body."1.0.1" = overridableMkRustCrate (profileName: rec {
      name = "http-body";
      version = "1.0.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1efedce1fb8e6913f23e0c92de8e62cd5b772a67e7b3946df930a62566c93184"; };
      dependencies = {
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.8.0" { inherit profileName; }).out;
        http = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."1.1.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".http-body-util."0.1.2" = overridableMkRustCrate (profileName: rec {
      name = "http-body-util";
      version = "0.1.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "793429d76616a256bcb62c2a2ec2bed781c8307e797e2598c50010f2bee2544f"; };
      dependencies = {
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.8.0" { inherit profileName; }).out;
        futures_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.31" { inherit profileName; }).out;
        http = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."1.1.0" { inherit profileName; }).out;
        http_body = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."1.0.1" { inherit profileName; }).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.15" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".httparse."1.9.5" = overridableMkRustCrate (profileName: rec {
      name = "httparse";
      version = "1.9.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7d71d3574edd2771538b901e6549113b4006ece66150fb69c0fb6d9a2adae946"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".httpdate."1.0.3" = overridableMkRustCrate (profileName: rec {
      name = "httpdate";
      version = "1.0.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "df3b46402a9d5adb4c86a0cf463f42e19994e3ee891101b1841f30a545cb49a9"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".humantime."2.1.0" = overridableMkRustCrate (profileName: rec {
      name = "humantime";
      version = "2.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9a3a5bfb195931eeb336b2a7b4d761daec841b97f947d34394601737a7bba5e4"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".hyper."0.14.31" = overridableMkRustCrate (profileName: rec {
      name = "hyper";
      version = "0.14.31";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8c08302e8fa335b151b788c775ff56e7a03ae64ff85c548ee820fecb70356e85"; };
      features = builtins.concatLists [
        [ "client" ]
        [ "h2" ]
        [ "http1" ]
        [ "http2" ]
        [ "runtime" ]
        [ "socket2" ]
        [ "tcp" ]
      ];
      dependencies = {
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.8.0" { inherit profileName; }).out;
        futures_channel = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.31" { inherit profileName; }).out;
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.31" { inherit profileName; }).out;
        futures_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.31" { inherit profileName; }).out;
        h2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".h2."0.3.26" { inherit profileName; }).out;
        http = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.12" { inherit profileName; }).out;
        http_body = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."0.4.6" { inherit profileName; }).out;
        httparse = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".httparse."1.9.5" { inherit profileName; }).out;
        httpdate = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".httpdate."1.0.3" { inherit profileName; }).out;
        itoa = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.11" { inherit profileName; }).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.15" { inherit profileName; }).out;
        socket2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".socket2."0.5.7" { inherit profileName; }).out;
        tokio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.41.0" { inherit profileName; }).out;
        tower_service = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-service."0.3.3" { inherit profileName; }).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
        want = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".want."0.3.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".hyper."1.5.0" = overridableMkRustCrate (profileName: rec {
      name = "hyper";
      version = "1.5.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "bbbff0a806a4728c99295b254c8838933b5b082d75e3cb70c8dab21fdfbcfa9a"; };
      features = builtins.concatLists [
        [ "client" ]
        [ "default" ]
        [ "http1" ]
      ];
      dependencies = {
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.8.0" { inherit profileName; }).out;
        futures_channel = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.31" { inherit profileName; }).out;
        futures_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.31" { inherit profileName; }).out;
        http = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."1.1.0" { inherit profileName; }).out;
        http_body = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."1.0.1" { inherit profileName; }).out;
        httparse = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".httparse."1.9.5" { inherit profileName; }).out;
        itoa = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.11" { inherit profileName; }).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.15" { inherit profileName; }).out;
        smallvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.13.2" { inherit profileName; }).out;
        tokio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.41.0" { inherit profileName; }).out;
        want = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".want."0.3.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".hyper-rustls."0.27.3" = overridableMkRustCrate (profileName: rec {
      name = "hyper-rustls";
      version = "0.27.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "08afdbb5c31130e3034af566421053ab03787c640246a446327f550d11bcb333"; };
      features = builtins.concatLists [
        [ "http1" ]
        [ "ring" ]
        [ "tls12" ]
        [ "webpki-roots" ]
        [ "webpki-tokio" ]
      ];
      dependencies = {
        futures_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.31" { inherit profileName; }).out;
        http = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."1.1.0" { inherit profileName; }).out;
        hyper = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper."1.5.0" { inherit profileName; }).out;
        hyper_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper-util."0.1.9" { inherit profileName; }).out;
        rustls = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls."0.23.15" { inherit profileName; }).out;
        pki_types = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls-pki-types."1.10.0" { inherit profileName; }).out;
        tokio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.41.0" { inherit profileName; }).out;
        tokio_rustls = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-rustls."0.26.0" { inherit profileName; }).out;
        tower_service = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-service."0.3.3" { inherit profileName; }).out;
        webpki_roots = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".webpki-roots."0.26.6" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".hyper-tls."0.5.0" = overridableMkRustCrate (profileName: rec {
      name = "hyper-tls";
      version = "0.5.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d6183ddfa99b85da61a140bea0efc93fdf56ceaa041b37d553518030827f9905"; };
      dependencies = {
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.8.0" { inherit profileName; }).out;
        hyper = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper."0.14.31" { inherit profileName; }).out;
        native_tls = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".native-tls."0.2.12" { inherit profileName; }).out;
        tokio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.41.0" { inherit profileName; }).out;
        tokio_native_tls = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-native-tls."0.3.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".hyper-util."0.1.9" = overridableMkRustCrate (profileName: rec {
      name = "hyper-util";
      version = "0.1.9";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "41296eb09f183ac68eec06e03cdbea2e759633d4067b2f6552fc2e009bcad08b"; };
      features = builtins.concatLists [
        [ "client" ]
        [ "client-legacy" ]
        [ "default" ]
        [ "http1" ]
        [ "tokio" ]
      ];
      dependencies = {
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.8.0" { inherit profileName; }).out;
        futures_channel = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.31" { inherit profileName; }).out;
        futures_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.31" { inherit profileName; }).out;
        http = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."1.1.0" { inherit profileName; }).out;
        http_body = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."1.0.1" { inherit profileName; }).out;
        hyper = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper."1.5.0" { inherit profileName; }).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.15" { inherit profileName; }).out;
        socket2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".socket2."0.5.7" { inherit profileName; }).out;
        tokio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.41.0" { inherit profileName; }).out;
        tower_service = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-service."0.3.3" { inherit profileName; }).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".iana-time-zone."0.1.61" = overridableMkRustCrate (profileName: rec {
      name = "iana-time-zone";
      version = "0.1.61";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "235e081f3925a06703c2d0117ea8b91f042756fd6e7a6e5d901e8ca1a996b220"; };
      features = builtins.concatLists [
        [ "fallback" ]
      ];
      dependencies = {
        ${ if hostPlatform.parsed.kernel.name == "android" then "android_system_properties" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".android_system_properties."0.1.5" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios" then "core_foundation_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.8.7" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "haiku" then "iana_time_zone_haiku" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".iana-time-zone-haiku."0.1.2" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" && hostPlatform.parsed.kernel.name == "unknown" then "js_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.72" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" && hostPlatform.parsed.kernel.name == "unknown" then "wasm_bindgen" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.95" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "windows" then "windows_core" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-core."0.52.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".iana-time-zone-haiku."0.1.2" = overridableMkRustCrate (profileName: rec {
      name = "iana-time-zone-haiku";
      version = "0.1.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f31827a206f56af32e590ba56d5d2d085f558508192593743f16b2306495269f"; };
      buildDependencies = {
        cc = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.1.31" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".iced."0.13.1" = overridableMkRustCrate (profileName: rec {
      name = "iced";
      version = "0.13.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "88acfabc84ec077eaf9ede3457ffa3a104626d79022a9bf7f296093b1d60c73f"; };
      features = builtins.concatLists [
        [ "auto-detect-theme" ]
        [ "default" ]
        [ "fira-sans" ]
        [ "tiny-skia" ]
        [ "tokio" ]
        [ "wgpu" ]
      ];
      dependencies = {
        iced_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".iced_core."0.13.2" { inherit profileName; }).out;
        iced_futures = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".iced_futures."0.13.2" { inherit profileName; }).out;
        iced_renderer = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".iced_renderer."0.13.0" { inherit profileName; }).out;
        iced_widget = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".iced_widget."0.13.4" { inherit profileName; }).out;
        iced_winit = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".iced_winit."0.13.0" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".iced_core."0.13.2" = overridableMkRustCrate (profileName: rec {
      name = "iced_core";
      version = "0.13.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0013a238275494641bf8f1732a23a808196540dc67b22ff97099c044ae4c8a1c"; };
      features = builtins.concatLists [
        [ "auto-detect-theme" ]
      ];
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.8.0" { inherit profileName; }).out;
        dark_light = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dark-light."1.1.1" { inherit profileName; }).out;
        glam = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".glam."0.25.0" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
        palette = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".palette."0.7.6" { inherit profileName; }).out;
        rustc_hash = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."2.0.0" { inherit profileName; }).out;
        smol_str = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".smol_str."0.2.2" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
        web_time = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".web-time."1.1.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".iced_futures."0.13.2" = overridableMkRustCrate (profileName: rec {
      name = "iced_futures";
      version = "0.13.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0c04a6745ba2e80f32cf01e034fd00d853aa4f4cd8b91888099cb7aaee0d5d7c"; };
      features = builtins.concatLists [
        [ "thread-pool" ]
        [ "tokio" ]
      ];
      dependencies = {
        futures = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.31" { inherit profileName; }).out;
        iced_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".iced_core."0.13.2" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        rustc_hash = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."2.0.0" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "tokio" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.41.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "wasm_bindgen_futures" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-futures."0.4.45" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "wasm_timer" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-timer."0.2.5" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".iced_glyphon."0.6.0" = overridableMkRustCrate (profileName: rec {
      name = "iced_glyphon";
      version = "0.6.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "41c3bb56f1820ca252bc1d0994ece33d233a55657c0c263ea7cb16895adbde82"; };
      dependencies = {
        cosmic_text = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cosmic-text."0.12.1" { inherit profileName; }).out;
        etagere = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".etagere."0.2.13" { inherit profileName; }).out;
        lru = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".lru."0.12.5" { inherit profileName; }).out;
        rustc_hash = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."2.0.0" { inherit profileName; }).out;
        wgpu = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wgpu."0.19.4" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".iced_graphics."0.13.0" = overridableMkRustCrate (profileName: rec {
      name = "iced_graphics";
      version = "0.13.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ba25a18cfa6d5cc160aca7e1b34f73ccdff21680fa8702168c09739767b6c66f"; };
      features = builtins.concatLists [
        [ "fira-sans" ]
      ];
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        bytemuck = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytemuck."1.19.0" { inherit profileName; }).out;
        cosmic_text = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cosmic-text."0.12.1" { inherit profileName; }).out;
        half = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".half."2.4.1" { inherit profileName; }).out;
        iced_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".iced_core."0.13.2" { inherit profileName; }).out;
        iced_futures = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".iced_futures."0.13.2" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
        raw_window_handle = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".raw-window-handle."0.6.2" { inherit profileName; }).out;
        rustc_hash = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."2.0.0" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
        unicode_segmentation = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-segmentation."1.12.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".iced_renderer."0.13.0" = overridableMkRustCrate (profileName: rec {
      name = "iced_renderer";
      version = "0.13.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "73558208059f9e622df2bf434e044ee2f838ce75201a023cf0ca3e1244f46c2a"; };
      features = builtins.concatLists [
        [ "fira-sans" ]
        [ "iced_tiny_skia" ]
        [ "iced_wgpu" ]
        [ "tiny-skia" ]
        [ "wgpu" ]
      ];
      dependencies = {
        iced_graphics = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".iced_graphics."0.13.0" { inherit profileName; }).out;
        iced_tiny_skia = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".iced_tiny_skia."0.13.0" { inherit profileName; }).out;
        iced_wgpu = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".iced_wgpu."0.13.5" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".iced_runtime."0.13.2" = overridableMkRustCrate (profileName: rec {
      name = "iced_runtime";
      version = "0.13.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "348b5b2c61c934d88ca3b0ed1ed913291e923d086a66fa288ce9669da9ef62b5"; };
      dependencies = {
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.8.0" { inherit profileName; }).out;
        iced_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".iced_core."0.13.2" { inherit profileName; }).out;
        iced_futures = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".iced_futures."0.13.2" { inherit profileName; }).out;
        raw_window_handle = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".raw-window-handle."0.6.2" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".iced_tiny_skia."0.13.0" = overridableMkRustCrate (profileName: rec {
      name = "iced_tiny_skia";
      version = "0.13.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c625d368284fcc43b0b36b176f76eff1abebe7959dd58bd8ce6897d641962a50"; };
      dependencies = {
        bytemuck = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytemuck."1.19.0" { inherit profileName; }).out;
        cosmic_text = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cosmic-text."0.12.1" { inherit profileName; }).out;
        iced_graphics = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".iced_graphics."0.13.0" { inherit profileName; }).out;
        kurbo = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".kurbo."0.10.4" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        rustc_hash = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."2.0.0" { inherit profileName; }).out;
        softbuffer = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".softbuffer."0.4.6" { inherit profileName; }).out;
        tiny_skia = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tiny-skia."0.11.4" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".iced_wgpu."0.13.5" = overridableMkRustCrate (profileName: rec {
      name = "iced_wgpu";
      version = "0.13.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "15708887133671d2bcc6c1d01d1f176f43a64d6cdc3b2bf893396c3ee498295f"; };
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        bytemuck = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytemuck."1.19.0" { inherit profileName; }).out;
        futures = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.31" { inherit profileName; }).out;
        glam = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".glam."0.25.0" { inherit profileName; }).out;
        guillotiere = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".guillotiere."0.6.2" { inherit profileName; }).out;
        glyphon = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".iced_glyphon."0.6.0" { inherit profileName; }).out;
        iced_graphics = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".iced_graphics."0.13.0" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
        rustc_hash = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."2.0.0" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
        wgpu = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wgpu."0.19.4" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".iced_widget."0.13.4" = overridableMkRustCrate (profileName: rec {
      name = "iced_widget";
      version = "0.13.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "81429e1b950b0e4bca65be4c4278fea6678ea782030a411778f26fa9f8983e1d"; };
      features = builtins.concatLists [
        [ "wgpu" ]
      ];
      dependencies = {
        iced_renderer = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".iced_renderer."0.13.0" { inherit profileName; }).out;
        iced_runtime = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".iced_runtime."0.13.2" { inherit profileName; }).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
        rustc_hash = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."2.0.0" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
        unicode_segmentation = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-segmentation."1.12.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".iced_winit."0.13.0" = overridableMkRustCrate (profileName: rec {
      name = "iced_winit";
      version = "0.13.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f44cd4e1c594b6334f409282937bf972ba14d31fedf03c23aa595d982a2fda28"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "program" ]
        [ "wayland" ]
        [ "wayland-csd-adwaita" ]
        [ "wayland-dlopen" ]
        [ "x11" ]
      ];
      dependencies = {
        iced_futures = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".iced_futures."0.13.2" { inherit profileName; }).out;
        iced_graphics = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".iced_graphics."0.13.0" { inherit profileName; }).out;
        iced_runtime = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".iced_runtime."0.13.2" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        rustc_hash = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."2.0.0" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "wasm_bindgen_futures" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-futures."0.4.45" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "web_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.72" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "windows" then "winapi" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; }).out;
        window_clipboard = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".window_clipboard."0.4.1" { inherit profileName; }).out;
        winit = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winit."0.30.5" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ident_case."1.0.1" = overridableMkRustCrate (profileName: rec {
      name = "ident_case";
      version = "1.0.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b9e0384b61958566e926dc50660321d12159025e767c18e043daf26b70104c39"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".idna."0.5.0" = overridableMkRustCrate (profileName: rec {
      name = "idna";
      version = "0.5.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "634d9b1461af396cad843f47fdba5597a4f9e6ddd4bfb6ff5d85028c25cb12f6"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        unicode_bidi = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-bidi."0.3.17" { inherit profileName; }).out;
        unicode_normalization = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-normalization."0.1.24" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".include_dir."0.7.4" = overridableMkRustCrate (profileName: rec {
      name = "include_dir";
      version = "0.7.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "923d117408f1e49d914f1a379a309cffe4f18c05cf4e3d12e613a15fc81bd0dd"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        include_dir_macros = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".include_dir_macros."0.7.4" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".include_dir_macros."0.7.4" = overridableMkRustCrate (profileName: rec {
      name = "include_dir_macros";
      version = "0.7.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7cab85a7ed0bd5f0e76d93846e0147172bed2e2d3f859bcc33a8d9699cad1a75"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".indenter."0.3.3" = overridableMkRustCrate (profileName: rec {
      name = "indenter";
      version = "0.3.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ce23b50ad8242c51a442f3ff322d56b02f08852c77e4c0b4d3fd684abc89c683"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".indexmap."1.9.3" = overridableMkRustCrate (profileName: rec {
      name = "indexmap";
      version = "1.9.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "bd070e393353796e801d209ad339e89596eb4c8d430d18ede6a1cced8fafbd99"; };
      features = builtins.concatLists [
        [ "serde" ]
        [ "serde-1" ]
        [ "std" ]
      ];
      dependencies = {
        hashbrown = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.12.3" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
      };
      buildDependencies = {
        autocfg = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.4.0" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".indexmap."2.6.0" = overridableMkRustCrate (profileName: rec {
      name = "indexmap";
      version = "2.6.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "707907fe3c25f5424cce2cb7e1cbcafee6bdbe735ca90ef77c29e84591e5b9da"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "serde" ]
        [ "std" ]
      ];
      dependencies = {
        equivalent = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".equivalent."1.0.1" { inherit profileName; }).out;
        hashbrown = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.15.0" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".indicatif."0.17.8" = overridableMkRustCrate (profileName: rec {
      name = "indicatif";
      version = "0.17.8";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "763a5a8f45087d6bcea4222e7b72c291a054edf80e4ef6efd2a4979878c7bea3"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "unicode-width" ]
      ];
      dependencies = {
        console = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".console."0.15.8" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "instant" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".instant."0.1.13" { inherit profileName; }).out;
        number_prefix = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".number_prefix."0.4.0" { inherit profileName; }).out;
        portable_atomic = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".portable-atomic."1.9.0" { inherit profileName; }).out;
        unicode_width = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.14" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".inotify."0.9.6" = overridableMkRustCrate (profileName: rec {
      name = "inotify";
      version = "0.9.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f8069d3ec154eb856955c1c0fbffefbf5f3c40a104ec912d4797314c1801abff"; };
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" { inherit profileName; }).out;
        inotify_sys = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".inotify-sys."0.1.5" { inherit profileName; }).out;
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".inotify-sys."0.1.5" = overridableMkRustCrate (profileName: rec {
      name = "inotify-sys";
      version = "0.1.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e05c02b5e89bff3b946cedeca278abc628fe811e604f027c45a8aa3cf793d0eb"; };
      dependencies = {
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".inout."0.1.3" = overridableMkRustCrate (profileName: rec {
      name = "inout";
      version = "0.1.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a0c10553d664a4d0bcff9f4215d0aac67a639cc68ef660840afe309b807bc9f5"; };
      dependencies = {
        generic_array = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".generic-array."0.14.7" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".instant."0.1.13" = overridableMkRustCrate (profileName: rec {
      name = "instant";
      version = "0.1.13";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e0242819d153cba4b4b05a5a8f2a7e9bbf97b6055b2a002b395c96b5ff3c0222"; };
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ipnet."2.10.1" = overridableMkRustCrate (profileName: rec {
      name = "ipnet";
      version = "2.10.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ddc24109865250148c2e0f3d25d4f0f479571723792d3802153c60922a4fb708"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".is_terminal_polyfill."1.70.1" = overridableMkRustCrate (profileName: rec {
      name = "is_terminal_polyfill";
      version = "1.70.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7943c866cc5cd64cbc25b2e01621d07fa8eb2a1a23160ee81ce38704e97b8ecf"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".itertools."0.10.5" = overridableMkRustCrate (profileName: rec {
      name = "itertools";
      version = "0.10.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "use_alloc" ]
        [ "use_std" ]
      ];
      dependencies = {
        either = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.13.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".itertools."0.11.0" = overridableMkRustCrate (profileName: rec {
      name = "itertools";
      version = "0.11.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b1c173a5686ce8bfa551b3563d0c2170bf24ca44da99c7ca4bfdab5418c3fe57"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "use_alloc" ]
        [ "use_std" ]
      ];
      dependencies = {
        either = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.13.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".itertools."0.12.1" = overridableMkRustCrate (profileName: rec {
      name = "itertools";
      version = "0.12.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ba291022dbbd398a455acf126c1e341954079855bc60dfdda641363bd6922569"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "use_alloc" ]
        [ "use_std" ]
      ];
      dependencies = {
        either = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.13.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".itertools."0.13.0" = overridableMkRustCrate (profileName: rec {
      name = "itertools";
      version = "0.13.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "413ee7dfc52ee1a4949ceeb7dbc8a33f2d6c088194d9f922fb8318faf1f01186"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "use_alloc" ]
        [ "use_std" ]
      ];
      dependencies = {
        either = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.13.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.11" = overridableMkRustCrate (profileName: rec {
      name = "itoa";
      version = "1.0.11";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "49f1f14873335454500d59611f1cf4a4b0f786f9ac11f4312a78e4cf2566695b"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".jni."0.21.1" = overridableMkRustCrate (profileName: rec {
      name = "jni";
      version = "0.21.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1a87aa2bb7d2af34197c04845522473242e1aa17c12f4935d5856491a7fb8c97"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        cesu8 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cesu8."1.1.0" { inherit profileName; }).out;
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        combine = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".combine."4.6.7" { inherit profileName; }).out;
        jni_sys = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".jni-sys."0.3.0" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.45.0" { inherit profileName; }).out;
      };
      buildDependencies = {
        walkdir = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.5.0" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".jni-sys."0.3.0" = overridableMkRustCrate (profileName: rec {
      name = "jni-sys";
      version = "0.3.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8eaf4bc02d17cbdd7ff4c7438cafcdf7fb9a4613313ad11b4f8fefe7d3fa0130"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".jobserver."0.1.32" = overridableMkRustCrate (profileName: rec {
      name = "jobserver";
      version = "0.1.32";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "48d1dbcbbeb6a7fec7e059840aa538bd62aaccf972c7346c4d9d2059312853d0"; };
      dependencies = {
        ${ if hostPlatform.isUnix then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.72" = overridableMkRustCrate (profileName: rec {
      name = "js-sys";
      version = "0.3.72";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6a88f1bda2bd75b0452a14784937d796722fdebfe50df998aeb3f0b7603019a9"; };
      dependencies = {
        wasm_bindgen = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.95" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".jsonwebtoken."9.3.0" = overridableMkRustCrate (profileName: rec {
      name = "jsonwebtoken";
      version = "9.3.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b9ae10193d25051e74945f1ea2d0b42e03cc3b890f7e4cc5faa44997d808193f"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "pem" ]
        [ "simple_asn1" ]
        [ "use_pem" ]
      ];
      dependencies = {
        base64 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.21.7" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "js_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.72" { inherit profileName; }).out;
        pem = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pem."3.0.4" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") || hostPlatform.parsed.cpu.name == "wasm32" then "ring" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ring."0.17.8" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        serde_json = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.132" { inherit profileName; }).out;
        simple_asn1 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".simple_asn1."0.6.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".khronos-egl."6.0.0" = overridableMkRustCrate (profileName: rec {
      name = "khronos-egl";
      version = "6.0.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6aae1df220ece3c0ada96b8153459b67eebe9ae9212258bb0134ae60416fdf76"; };
      features = builtins.concatLists [
        [ "1_0" ]
        [ "1_1" ]
        [ "1_2" ]
        [ "1_3" ]
        [ "1_4" ]
        [ "1_5" ]
        [ "default" ]
        [ "dynamic" ]
        [ "libloading" ]
        [ "no-pkg-config" ]
        [ "pkg-config" ]
        [ "static" ]
      ];
      dependencies = {
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        libloading = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libloading."0.8.5" { inherit profileName; }).out;
      };
      buildDependencies = {
        pkg_config = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.31" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".khronos_api."3.1.0" = overridableMkRustCrate (profileName: rec {
      name = "khronos_api";
      version = "3.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e2db585e1d738fc771bf08a151420d3ed193d9d895a36df7f6f8a9456b911ddc"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".kqueue."1.0.8" = overridableMkRustCrate (profileName: rec {
      name = "kqueue";
      version = "1.0.8";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7447f1ca1b7b563588a205fe93dea8df60fd981423a768bc1c0ded35ed147d0c"; };
      dependencies = {
        kqueue_sys = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".kqueue-sys."1.0.4" { inherit profileName; }).out;
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".kqueue-sys."1.0.4" = overridableMkRustCrate (profileName: rec {
      name = "kqueue-sys";
      version = "1.0.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ed9625ffda8729b85e45cf04090035ac368927b8cebc34898e7c120f52e4838b"; };
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" { inherit profileName; }).out;
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".kurbo."0.10.4" = overridableMkRustCrate (profileName: rec {
      name = "kurbo";
      version = "0.10.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1618d4ebd923e97d67e7cd363d80aef35fe961005cbbbb3d2dad8bdd1bc63440"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        arrayvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.7.4" { inherit profileName; }).out;
        smallvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.13.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".lalrpop."0.20.2" = overridableMkRustCrate (profileName: rec {
      name = "lalrpop";
      version = "0.20.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "55cb077ad656299f160924eb2912aa147d7339ea7d69e1b5517326fdcec3c1ca"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "lexer" ]
        [ "pico-args" ]
        [ "unicode" ]
      ];
      dependencies = {
        ascii_canvas = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ascii-canvas."3.0.0" { inherit profileName; }).out;
        bit_set = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bit-set."0.5.3" { inherit profileName; }).out;
        ena = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ena."0.14.3" { inherit profileName; }).out;
        itertools = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.11.0" { inherit profileName; }).out;
        lalrpop_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".lalrpop-util."0.20.2" { inherit profileName; }).out;
        petgraph = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".petgraph."0.6.5" { inherit profileName; }).out;
        pico_args = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pico-args."0.5.0" { inherit profileName; }).out;
        regex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.11.1" { inherit profileName; }).out;
        regex_syntax = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.8.5" { inherit profileName; }).out;
        string_cache = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".string_cache."0.8.7" { inherit profileName; }).out;
        term = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".term."0.7.0" { inherit profileName; }).out;
        tiny_keccak = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tiny-keccak."2.0.2" { inherit profileName; }).out;
        unicode_xid = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.2.6" { inherit profileName; }).out;
        walkdir = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.5.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".lalrpop-util."0.20.2" = overridableMkRustCrate (profileName: rec {
      name = "lalrpop-util";
      version = "0.20.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "507460a910eb7b32ee961886ff48539633b788a36b65692b95f225b844c82553"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "lexer" ]
        [ "regex-automata" ]
        [ "std" ]
        [ "unicode" ]
      ];
      dependencies = {
        regex_automata = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-automata."0.4.8" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.5.0" = overridableMkRustCrate (profileName: rec {
      name = "lazy_static";
      version = "1.5.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "bbd2bcb4c963f2ddae06a2efc7e9f3591312473c50c6685e1f298068316e66fe"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".lexicmp."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "lexicmp";
      version = "0.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7378d131ddf24063b32cbd7e91668d183140c4b3906270635a4d633d1068ea5d"; };
      dependencies = {
        any_ascii = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".any_ascii."0.3.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" = overridableMkRustCrate (profileName: rec {
      name = "libc";
      version = "0.2.161";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8e9489c2807c139ffd9c1794f4af0ebe86a828db53ecdc7fea2111d0fed085d1"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "extra_traits" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".libloading."0.7.4" = overridableMkRustCrate (profileName: rec {
      name = "libloading";
      version = "0.7.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b67380fd3b2fbe7527a606e18729d21c6f3951633d0500574c4dc22d2d638b9f"; };
      dependencies = {
        ${ if hostPlatform.isUnix then "cfg_if" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "winapi" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".libloading."0.8.5" = overridableMkRustCrate (profileName: rec {
      name = "libloading";
      version = "0.8.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4979f22fdb869068da03c9f7528f8297c6fd2606bc3a4affe42e6a823fdb8da4"; };
      dependencies = {
        ${ if hostPlatform.isUnix then "cfg_if" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "windows_targets" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.52.6" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".libm."0.2.8" = overridableMkRustCrate (profileName: rec {
      name = "libm";
      version = "0.2.8";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4ec2a862134d2a7d32d7983ddcdd1c4923530833c9f2ea1a44fc5fa473989058"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".libredox."0.1.3" = overridableMkRustCrate (profileName: rec {
      name = "libredox";
      version = "0.1.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c0ff37bd590ca25063e35af745c343cb7a0271906fb7b37e4813e8f79f00268d"; };
      features = builtins.concatLists [
        [ "call" ]
        [ "default" ]
        [ "redox_syscall" ]
        [ "std" ]
      ];
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        syscall = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.5.7" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".linfa-linalg."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "linfa-linalg";
      version = "0.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "56e7562b41c8876d3367897067013bb2884cc78e6893f092ecd26b305176ac82"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "iterative" ]
        [ "rand" ]
      ];
      dependencies = {
        ndarray = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ndarray."0.15.6" { inherit profileName; }).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
        rand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".linux-raw-sys."0.4.14" = overridableMkRustCrate (profileName: rec {
      name = "linux-raw-sys";
      version = "0.4.14";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "78b3ae25bc7c8c38cec158d1f2757ee79e9b3740fbc7ccf0e59e4b08d793fa89"; };
      features = builtins.concatLists [
        [ "elf" ]
        [ "errno" ]
        [ "general" ]
        [ "if_ether" ]
        [ "ioctl" ]
        [ "net" ]
        [ "netlink" ]
        [ "no_std" ]
        [ "prctl" ]
        [ "system" ]
        [ "xdp" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".linux-raw-sys."0.6.5" = overridableMkRustCrate (profileName: rec {
      name = "linux-raw-sys";
      version = "0.6.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2a385b1be4e5c3e362ad2ffa73c392e53f031eaa5b7d648e64cd87f27f6063d7"; };
      features = builtins.concatLists [
        [ "general" ]
        [ "no_std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".lock_api."0.4.12" = overridableMkRustCrate (profileName: rec {
      name = "lock_api";
      version = "0.4.12";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "07af8b9cdd281b7915f413fa73f29ebd5d55d0d3f0155584dade1ff18cea1b17"; };
      features = builtins.concatLists [
        [ "atomic_usize" ]
        [ "default" ]
      ];
      dependencies = {
        scopeguard = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".scopeguard."1.2.0" { inherit profileName; }).out;
      };
      buildDependencies = {
        autocfg = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.4.0" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" = overridableMkRustCrate (profileName: rec {
      name = "log";
      version = "0.4.22";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".lru."0.12.5" = overridableMkRustCrate (profileName: rec {
      name = "lru";
      version = "0.12.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "234cf4f4a04dc1f57e24b96cc0cd600cf2af460d4161ac5ecdd0af8e1f3b2a38"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".mac."0.1.1" = overridableMkRustCrate (profileName: rec {
      name = "mac";
      version = "0.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c41e0c4fef86961ac6d6f8a82609f55f31b05e4fce149ac5710e439df7619ba4"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".macro_rules_attribute."0.2.0" = overridableMkRustCrate (profileName: rec {
      name = "macro_rules_attribute";
      version = "0.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8a82271f7bc033d84bbca59a3ce3e4159938cb08a9c3aebbe54d215131518a13"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        macro_rules_attribute_proc_macro = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".macro_rules_attribute-proc_macro."0.2.0" { profileName = "__noProfile"; }).out;
        paste = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".paste."1.0.15" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".macro_rules_attribute-proc_macro."0.2.0" = overridableMkRustCrate (profileName: rec {
      name = "macro_rules_attribute-proc_macro";
      version = "0.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b8dd856d451cc0da70e2ef2ce95a18e39a93b7558bedf10201ad28503f918568"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".malloc_buf."0.0.6" = overridableMkRustCrate (profileName: rec {
      name = "malloc_buf";
      version = "0.0.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "62bb907fe88d54d8d9ce32a3cceab4218ed2f6b7d35617cafe9adf84e43919cb"; };
      dependencies = {
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".maplit."1.0.2" = overridableMkRustCrate (profileName: rec {
      name = "maplit";
      version = "1.0.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3e2e65a1a2e43cfcb47a895c4c8b10d1f4a61097f9f254f183aee60cad9c651d"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".markup5ever."0.12.1" = overridableMkRustCrate (profileName: rec {
      name = "markup5ever";
      version = "0.12.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "16ce3abbeba692c8b8441d036ef91aea6df8da2c6b6e21c7e14d3c18e526be45"; };
      dependencies = {
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        phf = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf."0.11.2" { inherit profileName; }).out;
        string_cache = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".string_cache."0.8.7" { inherit profileName; }).out;
        tendril = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tendril."0.4.3" { inherit profileName; }).out;
      };
      buildDependencies = {
        phf_codegen = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_codegen."0.11.2" { profileName = "__noProfile"; }).out;
        string_cache_codegen = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".string_cache_codegen."0.5.2" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".matchers."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "matchers";
      version = "0.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8263075bb86c5a1b1427b5ae862e8889656f126e9f77c484496e8b47cf5c5558"; };
      dependencies = {
        regex_automata = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-automata."0.1.10" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".matrixmultiply."0.3.9" = overridableMkRustCrate (profileName: rec {
      name = "matrixmultiply";
      version = "0.3.9";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9380b911e3e96d10c1f415da0876389aaf1b56759054eeb0de7df940c456ba1a"; };
      features = builtins.concatLists [
        [ "cgemm" ]
        [ "std" ]
      ];
      dependencies = {
        rawpointer = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rawpointer."0.2.1" { inherit profileName; }).out;
      };
      buildDependencies = {
        autocfg = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.4.0" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".md-5."0.10.6" = overridableMkRustCrate (profileName: rec {
      name = "md-5";
      version = "0.10.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d89e7ee0cfbedfc4da3340218492196241d89eefb6dab27de5df917a6d2e78cf"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        digest = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.10.7" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" = overridableMkRustCrate (profileName: rec {
      name = "memchr";
      version = "2.7.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".memmap2."0.9.5" = overridableMkRustCrate (profileName: rec {
      name = "memmap2";
      version = "0.9.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "fd3f7eed9d3848f8b98834af67102b720745c4ec028fcd0aa0239277e7de374f"; };
      features = builtins.concatLists [
        [ "stable_deref_trait" ]
      ];
      dependencies = {
        ${ if hostPlatform.isUnix then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        stable_deref_trait = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".stable_deref_trait."1.2.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".memoffset."0.9.1" = overridableMkRustCrate (profileName: rec {
      name = "memoffset";
      version = "0.9.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "488016bfae457b036d996092f6cb448677611ce4449e970ceaf42695203f218a"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      buildDependencies = {
        autocfg = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.4.0" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".merge."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "merge";
      version = "0.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "10bbef93abb1da61525bbc45eeaff6473a41907d19f8f9aa5168d214e10693e9"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "derive" ]
        [ "merge_derive" ]
        [ "num" ]
        [ "num-traits" ]
        [ "std" ]
      ];
      dependencies = {
        merge_derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".merge_derive."0.1.0" { profileName = "__noProfile"; }).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".merge_derive."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "merge_derive";
      version = "0.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "209d075476da2e63b4b29e72a2ef627b840589588e71400a25e3565c4f849d07"; };
      dependencies = {
        proc_macro_error = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro-error."1.0.4" { inherit profileName; }).out;
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".metal."0.27.0" = overridableMkRustCrate (profileName: rec {
      name = "metal";
      version = "0.27.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c43f73953f8cbe511f021b58f18c3ce1c3d1ae13fe953293e13345bf83217f25"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "link" ]
      ];
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        block = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".block."0.1.6" { inherit profileName; }).out;
        core_graphics_types = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-graphics-types."0.1.3" { inherit profileName; }).out;
        foreign_types = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".foreign-types."0.5.0" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        objc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc."0.2.7" { inherit profileName; }).out;
        paste = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".paste."1.0.15" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".miette."5.10.0" = overridableMkRustCrate (profileName: rec {
      name = "miette";
      version = "5.10.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "59bb584eaeeab6bd0226ccf3509a69d7936d148cf3d036ad350abe35e8c6856e"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        miette_derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".miette-derive."5.10.0" { profileName = "__noProfile"; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
        unicode_width = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.14" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".miette-derive."5.10.0" = overridableMkRustCrate (profileName: rec {
      name = "miette-derive";
      version = "5.10.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "49e7bc1560b95a3c4a25d03de42fe76ca718ab92d1a22a55b9b4cf67b3ae635c"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".mime."0.3.17" = overridableMkRustCrate (profileName: rec {
      name = "mime";
      version = "0.3.17";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6877bb514081ee2a7ff5ef9de3281f14a4dd4bceac4c09388074a6b5df8a139a"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".mime_guess."2.0.5" = overridableMkRustCrate (profileName: rec {
      name = "mime_guess";
      version = "2.0.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f7c44f8e672c00fe5308fa235f821cb4198414e1c77935c1ab6948d3fd78550e"; };
      dependencies = {
        mime = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".mime."0.3.17" { inherit profileName; }).out;
        unicase = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicase."2.8.0" { inherit profileName; }).out;
      };
      buildDependencies = {
        unicase = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".unicase."2.8.0" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".minimal-lexical."0.2.1" = overridableMkRustCrate (profileName: rec {
      name = "minimal-lexical";
      version = "0.2.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "68354c5c6bd36d73ff3feceb05efa59b6acb7626617f4962be322a825e61f79a"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.7.4" = overridableMkRustCrate (profileName: rec {
      name = "miniz_oxide";
      version = "0.7.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b8a240ddb74feaf34a79a7add65a741f3167852fba007066dcac1ca548d89c08"; };
      dependencies = {
        adler = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".adler."1.0.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.8.0" = overridableMkRustCrate (profileName: rec {
      name = "miniz_oxide";
      version = "0.8.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e2d80299ef12ff69b16a84bb182e3b9df68b5a91574d3d4fa6e41b65deec4df1"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "simd" ]
        [ "simd-adler32" ]
        [ "with-alloc" ]
      ];
      dependencies = {
        adler2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".adler2."2.0.0" { inherit profileName; }).out;
        simd_adler32 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".simd-adler32."0.3.7" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".mio."0.8.11" = overridableMkRustCrate (profileName: rec {
      name = "mio";
      version = "0.8.11";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a4a650543ca06a924e8b371db273b2756685faae30f8487da1b56505a8f78b0c"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "log" ]
        [ "os-ext" ]
        [ "os-poll" ]
      ];
      dependencies = {
        ${ if hostPlatform.isUnix || hostPlatform.parsed.kernel.name == "wasi" then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "wasi" then "wasi" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasi."0.11.0+wasi-snapshot-preview1" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.48.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".mio."1.0.2" = overridableMkRustCrate (profileName: rec {
      name = "mio";
      version = "1.0.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "80e04d1dcff3aae0704555fe5fee3bcfaf3d1fdf8a7e521d5b9d2b42acb52cec"; };
      features = builtins.concatLists [
        [ "net" ]
        [ "os-ext" ]
        [ "os-poll" ]
      ];
      dependencies = {
        ${ if hostPlatform.parsed.kernel.name == "hermit" then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.3.9" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix || hostPlatform.parsed.kernel.name == "wasi" then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "wasi" then "wasi" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasi."0.11.0+wasi-snapshot-preview1" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.52.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".monostate."0.1.13" = overridableMkRustCrate (profileName: rec {
      name = "monostate";
      version = "0.1.13";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0d208407d7552cd041d8cdb69a1bc3303e029c598738177a3d87082004dc0e1e"; };
      dependencies = {
        monostate_impl = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".monostate-impl."0.1.13" { profileName = "__noProfile"; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".monostate-impl."0.1.13" = overridableMkRustCrate (profileName: rec {
      name = "monostate-impl";
      version = "0.1.13";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a7ce64b975ed4f123575d11afd9491f2e37bbd5813fbfbc0f09ae1fbddea74e0"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".multer."3.1.0" = overridableMkRustCrate (profileName: rec {
      name = "multer";
      version = "3.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "83e87776546dc87511aa5ee218730c92b666d7264ab6ed41f9d215af9cd5224b"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.8.0" { inherit profileName; }).out;
        encoding_rs = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".encoding_rs."0.8.35" { inherit profileName; }).out;
        futures_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.31" { inherit profileName; }).out;
        http = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."1.1.0" { inherit profileName; }).out;
        httparse = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".httparse."1.9.5" { inherit profileName; }).out;
        memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" { inherit profileName; }).out;
        mime = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".mime."0.3.17" { inherit profileName; }).out;
        spin = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".spin."0.9.8" { inherit profileName; }).out;
      };
      buildDependencies = {
        version_check = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.5" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".multimap."0.10.0" = overridableMkRustCrate (profileName: rec {
      name = "multimap";
      version = "0.10.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "defc4c55412d89136f966bbb339008b474350e5e6e78d2714439c386b3137a03"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".naga."0.19.2" = overridableMkRustCrate (profileName: rec {
      name = "naga";
      version = "0.19.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "50e3524642f53d9af419ab5e8dd29d3ba155708267667c2f3f06c88c9e130843"; };
      features = builtins.concatLists [
        [ "clone" ]
        [ "compact" ]
        [ "default" ]
        [ "glsl-out" ]
        [ "hexf-parse" ]
        [ "hlsl-out" ]
        [ "msl-out" ]
        [ "spirv" ]
        [ "spv-out" ]
        [ "unicode-xid" ]
        [ "wgsl-in" ]
        [ "wgsl-out" ]
      ];
      dependencies = {
        bit_set = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bit-set."0.5.3" { inherit profileName; }).out;
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        codespan_reporting = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".codespan-reporting."0.11.1" { inherit profileName; }).out;
        hexf_parse = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hexf-parse."0.2.1" { inherit profileName; }).out;
        indexmap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."2.6.0" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
        rustc_hash = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" { inherit profileName; }).out;
        spirv = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".spirv."0.3.0+sdk-1.3.268.0" { inherit profileName; }).out;
        termcolor = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".termcolor."1.4.1" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
        unicode_xid = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.2.6" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".names."0.14.0" = overridableMkRustCrate (profileName: rec {
      name = "names";
      version = "0.14.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7bddcd3bf5144b6392de80e04c347cd7fab2508f6df16a85fc496ecd5cec39bc"; };
      dependencies = {
        rand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".nanoid."0.4.0" = overridableMkRustCrate (profileName: rec {
      name = "nanoid";
      version = "0.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3ffa00dec017b5b1a8b7cf5e2c008bfda1aa7e0697ac1508b491fdf2622fb4d8"; };
      dependencies = {
        rand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".nanorand."0.7.0" = overridableMkRustCrate (profileName: rec {
      name = "nanorand";
      version = "0.7.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6a51313c5820b0b02bd422f4b44776fbf47961755c74ce64afc73bfad10226c3"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "chacha" ]
        [ "default" ]
        [ "getrandom" ]
        [ "pcg64" ]
        [ "std" ]
        [ "tls" ]
        [ "wyrand" ]
      ];
      dependencies = {
        getrandom = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.15" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".native-tls."0.2.12" = overridableMkRustCrate (profileName: rec {
      name = "native-tls";
      version = "0.2.12";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a8614eb2c83d59d1c8cc974dd3f920198647674a0a035e1af1fa58707e317466"; };
      dependencies = {
        ${ if hostPlatform.parsed.vendor.name == "apple" then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.kernel.name == "windows" || hostPlatform.parsed.vendor.name == "apple") then "log" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.kernel.name == "windows" || hostPlatform.parsed.vendor.name == "apple") then "openssl" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl."0.10.68" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.kernel.name == "windows" || hostPlatform.parsed.vendor.name == "apple") then "openssl_probe" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-probe."0.1.5" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.kernel.name == "windows" || hostPlatform.parsed.vendor.name == "apple") then "openssl_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-sys."0.9.104" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "windows" then "schannel" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".schannel."0.1.26" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.vendor.name == "apple" then "security_framework" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".security-framework."2.11.1" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.vendor.name == "apple" then "security_framework_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".security-framework-sys."2.12.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "darwin" then "tempfile" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.13.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ndarray."0.15.6" = overridableMkRustCrate (profileName: rec {
      name = "ndarray";
      version = "0.15.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "adb12d4e967ec485a5f71c6311fe28158e9d6f4bc4a447b474184d0f91a8fa32"; };
      features = builtins.concatLists [
        [ "approx" ]
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        approx = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".approx."0.4.0" { inherit profileName; }).out;
        matrixmultiply = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".matrixmultiply."0.3.9" { inherit profileName; }).out;
        num_complex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-complex."0.4.6" { inherit profileName; }).out;
        num_integer = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.46" { inherit profileName; }).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
        rawpointer = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rawpointer."0.2.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ndarray-stats."0.5.1" = overridableMkRustCrate (profileName: rec {
      name = "ndarray-stats";
      version = "0.5.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "af5a8477ac96877b5bd1fd67e0c28736c12943aba24eda92b127e036b0c8f400"; };
      dependencies = {
        indexmap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."1.9.3" { inherit profileName; }).out;
        itertools = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.10.5" { inherit profileName; }).out;
        ndarray = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ndarray."0.15.6" { inherit profileName; }).out;
        noisy_float = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".noisy_float."0.2.0" { inherit profileName; }).out;
        num_integer = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.46" { inherit profileName; }).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
        rand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ndk."0.9.0" = overridableMkRustCrate (profileName: rec {
      name = "ndk";
      version = "0.9.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c3f42e7bbe13d351b6bead8286a43aac9534b82bd3cc43e47037f012ebfd62d4"; };
      features = builtins.concatLists [
        [ "rwh_06" ]
      ];
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        jni_sys = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".jni-sys."0.3.0" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        ffi = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ndk-sys."0.6.0+11769913" { inherit profileName; }).out;
        num_enum = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_enum."0.7.3" { inherit profileName; }).out;
        rwh_06 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".raw-window-handle."0.6.2" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ndk-context."0.1.1" = overridableMkRustCrate (profileName: rec {
      name = "ndk-context";
      version = "0.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "27b02d87554356db9e9a873add8782d4ea6e3e58ea071a9adb9a2e8ddb884a8b"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ndk-sys."0.5.0+25.2.9519653" = overridableMkRustCrate (profileName: rec {
      name = "ndk-sys";
      version = "0.5.0+25.2.9519653";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8c196769dd60fd4f363e11d948139556a344e79d451aeb2fa2fd040738ef7691"; };
      dependencies = {
        jni_sys = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".jni-sys."0.3.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ndk-sys."0.6.0+11769913" = overridableMkRustCrate (profileName: rec {
      name = "ndk-sys";
      version = "0.6.0+11769913";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ee6cda3051665f1fb8d9e08fc35c96d5a244fb1be711a03b71118828afc9a873"; };
      dependencies = {
        jni_sys = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".jni-sys."0.3.0" { inherit profileName; }).out;
      };
    });

    "unknown".nebulon."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "nebulon";
      version = "0.1.0";
      registry = "unknown";
      src = fetchCrateLocal workspaceSrc;
      dependencies = {
        anyhow = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.91" { inherit profileName; }).out;
        async_trait = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.83" { profileName = "__noProfile"; }).out;
        chrono = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.38" { inherit profileName; }).out;
        clap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."4.5.20" { inherit profileName; }).out;
        derivative = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derivative."2.2.0" { profileName = "__noProfile"; }).out;
        directories = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".directories."5.0.1" { inherit profileName; }).out;
        flume = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".flume."0.11.1" { inherit profileName; }).out;
        gravity = (rustPackages."unknown".gravity."0.1.0" { inherit profileName; }).out;
        include_dir = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".include_dir."0.7.4" { inherit profileName; }).out;
        merge = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".merge."0.1.0" { inherit profileName; }).out;
        schemars = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".schemars."0.8.21" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        surrealdb = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".surrealdb."2.0.4" { inherit profileName; }).out;
        surrealdb_migrations = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".surrealdb-migrations."2.0.0" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
        tokio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.41.0" { inherit profileName; }).out;
        toml = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.8.19" { inherit profileName; }).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
        ulid = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ulid."1.1.3" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".new_debug_unreachable."1.0.6" = overridableMkRustCrate (profileName: rec {
      name = "new_debug_unreachable";
      version = "1.0.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "650eef8c711430f1a879fdd01d4745a7deea475becfb90269c06775983bbf086"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".nibble_vec."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "nibble_vec";
      version = "0.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "77a5d83df9f36fe23f0c3648c6bbb8b0298bb5f1939c8f2704431371f4b84d43"; };
      dependencies = {
        smallvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.13.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".nix."0.29.0" = overridableMkRustCrate (profileName: rec {
      name = "nix";
      version = "0.29.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "71e2746dc3a24dd78b3cfcb7be93368c6de9963d30f43a6a73998a9cf4b17b46"; };
      features = builtins.concatLists [
        [ "feature" ]
        [ "memoffset" ]
        [ "socket" ]
        [ "uio" ]
        [ "user" ]
      ];
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        memoffset = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memoffset."0.9.1" { inherit profileName; }).out;
      };
      buildDependencies = {
        cfg_aliases = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg_aliases."0.2.1" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".noisy_float."0.2.0" = overridableMkRustCrate (profileName: rec {
      name = "noisy_float";
      version = "0.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "978fe6e6ebc0bf53de533cd456ca2d9de13de13856eda1518a285d7705a213af"; };
      dependencies = {
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".nom."7.1.3" = overridableMkRustCrate (profileName: rec {
      name = "nom";
      version = "7.1.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d273983c5a657a70a3e8f2a01329822f3b8c8172b73826411a55751e404a0a4a"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" { inherit profileName; }).out;
        minimal_lexical = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".minimal-lexical."0.2.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".notify."6.1.1" = overridableMkRustCrate (profileName: rec {
      name = "notify";
      version = "6.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6205bd8bb1e454ad2e27422015fb5e4f2bcc7e08fa8f27058670d208324a4d2d"; };
      features = builtins.concatLists [
        [ "kqueue" ]
        [ "macos_kqueue" ]
        [ "mio" ]
        [ "serde" ]
      ];
      dependencies = {
        ${ if hostPlatform.parsed.kernel.name == "darwin" then "bitflags" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        filetime = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".filetime."0.2.25" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "linux" || hostPlatform.parsed.kernel.name == "android" then "inotify" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".inotify."0.9.6" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "freebsd" || hostPlatform.parsed.kernel.name == "openbsd" || hostPlatform.parsed.kernel.name == "netbsd" || hostPlatform.parsed.kernel.name == "dragonflybsd" || hostPlatform.parsed.kernel.name == "darwin" then "kqueue" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".kqueue."1.0.8" { inherit profileName; }).out;
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "freebsd" || hostPlatform.parsed.kernel.name == "openbsd" || hostPlatform.parsed.kernel.name == "netbsd" || hostPlatform.parsed.kernel.name == "dragonflybsd" || hostPlatform.parsed.kernel.name == "linux" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "darwin" then "mio" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio."0.8.11" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        walkdir = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.5.0" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.48.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".nu-ansi-term."0.46.0" = overridableMkRustCrate (profileName: rec {
      name = "nu-ansi-term";
      version = "0.46.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "77a8165726e8236064dbb45459242600304b42a5ea24ee2948e18e023bf7ba84"; };
      dependencies = {
        overload = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".overload."0.1.1" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "windows" then "winapi" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".nu-ansi-term."0.50.1" = overridableMkRustCrate (profileName: rec {
      name = "nu-ansi-term";
      version = "0.50.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d4a28e057d01f97e61255210fcff094d74ed0466038633e95017f5beb68e4399"; };
      dependencies = {
        ${ if hostPlatform.isWindows then "windows" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.52.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".num-bigint."0.4.6" = overridableMkRustCrate (profileName: rec {
      name = "num-bigint";
      version = "0.4.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a5e44f723f1133c9deac646763579fdb3ac745e418f2a7af9cd0c431da1f20b9"; };
      dependencies = {
        num_integer = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.46" { inherit profileName; }).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".num-complex."0.4.6" = overridableMkRustCrate (profileName: rec {
      name = "num-complex";
      version = "0.4.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "73f88a1307638156682bada9d7604135552957b7818057dcef22705b4d509495"; };
      features = builtins.concatLists [
        [ "bytemuck" ]
      ];
      dependencies = {
        bytemuck = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytemuck."1.19.0" { inherit profileName; }).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".num-conv."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "num-conv";
      version = "0.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "51d515d32fb182ee37cda2ccdcb92950d6a3c2893aa280e540671c2cd0f3b1d9"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.46" = overridableMkRustCrate (profileName: rec {
      name = "num-integer";
      version = "0.1.46";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7969661fd2958a5cb096e56c8e1ad0444ac2bbcd0061bd28660485a44879858f"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "i128" ]
        [ "std" ]
      ];
      dependencies = {
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" = overridableMkRustCrate (profileName: rec {
      name = "num-traits";
      version = "0.2.19";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "i128" ]
        [ "libm" ]
        [ "std" ]
      ];
      dependencies = {
        libm = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libm."0.2.8" { inherit profileName; }).out;
      };
      buildDependencies = {
        autocfg = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.4.0" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.16.0" = overridableMkRustCrate (profileName: rec {
      name = "num_cpus";
      version = "1.16.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4161fcb6d602d4d2081af7c3a45852d875a03dd337a6bfdd6e06407b61342a43"; };
      dependencies = {
        ${ if hostPlatform.parsed.kernel.name == "hermit" then "hermit_abi" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.3.9" { inherit profileName; }).out;
        ${ if !hostPlatform.isWindows then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".num_enum."0.7.3" = overridableMkRustCrate (profileName: rec {
      name = "num_enum";
      version = "0.7.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4e613fc340b2220f734a8595782c551f1250e969d87d3be1ae0579e8d4065179"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        num_enum_derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".num_enum_derive."0.7.3" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".num_enum_derive."0.7.3" = overridableMkRustCrate (profileName: rec {
      name = "num_enum_derive";
      version = "0.7.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "af1844ef2428cc3e1cb900be36181049ef3d3193c63e43026cfe202983b27a56"; };
      features = builtins.concatLists [
        [ "proc-macro-crate" ]
        [ "std" ]
      ];
      dependencies = {
        proc_macro_crate = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro-crate."3.2.0" { inherit profileName; }).out;
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".number_prefix."0.4.0" = overridableMkRustCrate (profileName: rec {
      name = "number_prefix";
      version = "0.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "830b246a0e5f20af87141b25c173cd1b609bd7779a4617d6ec582abaf90870f3"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".objc."0.2.7" = overridableMkRustCrate (profileName: rec {
      name = "objc";
      version = "0.2.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "915b1b472bc21c53464d6c8461c9d3af805ba1ef837e1cac254428f4a77177b1"; };
      features = builtins.concatLists [
        [ "objc_exception" ]
      ];
      dependencies = {
        malloc_buf = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".malloc_buf."0.0.6" { inherit profileName; }).out;
        objc_exception = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc_exception."0.1.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".objc-sys."0.3.5" = overridableMkRustCrate (profileName: rec {
      name = "objc-sys";
      version = "0.3.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "cdb91bdd390c7ce1a8607f35f3ca7151b65afc0ff5ff3b34fa350f7d7c7e4310"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".objc2."0.5.2" = overridableMkRustCrate (profileName: rec {
      name = "objc2";
      version = "0.5.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "46a785d4eeff09c14c487497c162e92766fbb3e4059a71840cecc03d9a50b804"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        objc_sys = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc-sys."0.3.5" { inherit profileName; }).out;
        objc2_encode = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-encode."4.0.3" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".objc2-app-kit."0.2.2" = overridableMkRustCrate (profileName: rec {
      name = "objc2-app-kit";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e4e89ad9e3d7d297152b17d39ed92cd50ca8063a89a9fa569046d41568891eff"; };
      features = builtins.concatLists [
        [ "NSAppearance" ]
        [ "NSApplication" ]
        [ "NSBitmapImageRep" ]
        [ "NSButton" ]
        [ "NSColor" ]
        [ "NSControl" ]
        [ "NSCursor" ]
        [ "NSDragging" ]
        [ "NSEvent" ]
        [ "NSGraphics" ]
        [ "NSGraphicsContext" ]
        [ "NSImage" ]
        [ "NSImageRep" ]
        [ "NSMenu" ]
        [ "NSMenuItem" ]
        [ "NSOpenGLView" ]
        [ "NSPasteboard" ]
        [ "NSResponder" ]
        [ "NSRunningApplication" ]
        [ "NSScreen" ]
        [ "NSTextInputClient" ]
        [ "NSTextInputContext" ]
        [ "NSView" ]
        [ "NSWindow" ]
        [ "NSWindowScripting" ]
        [ "NSWindowTabGroup" ]
        [ "alloc" ]
        [ "bitflags" ]
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        block2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".block2."0.5.1" { inherit profileName; }).out;
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        objc2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2."0.5.2" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.vendor.name == "apple" then "objc2_core_data" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-core-data."0.2.2" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.vendor.name == "apple" then "objc2_core_image" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-core-image."0.2.2" { inherit profileName; }).out;
        objc2_foundation = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-foundation."0.2.2" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.vendor.name == "apple" then "objc2_quartz_core" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-quartz-core."0.2.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".objc2-cloud-kit."0.2.2" = overridableMkRustCrate (profileName: rec {
      name = "objc2-cloud-kit";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "74dd3b56391c7a0596a295029734d3c1c5e7e510a4cb30245f8221ccea96b009"; };
      features = builtins.concatLists [
        [ "CKShareMetadata" ]
        [ "alloc" ]
        [ "bitflags" ]
        [ "std" ]
      ];
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        block2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".block2."0.5.1" { inherit profileName; }).out;
        objc2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2."0.5.2" { inherit profileName; }).out;
        objc2_core_location = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-core-location."0.2.2" { inherit profileName; }).out;
        objc2_foundation = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-foundation."0.2.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".objc2-contacts."0.2.2" = overridableMkRustCrate (profileName: rec {
      name = "objc2-contacts";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a5ff520e9c33812fd374d8deecef01d4a840e7b41862d849513de77e44aa4889"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "std" ]
      ];
      dependencies = {
        block2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".block2."0.5.1" { inherit profileName; }).out;
        objc2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2."0.5.2" { inherit profileName; }).out;
        objc2_foundation = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-foundation."0.2.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".objc2-core-data."0.2.2" = overridableMkRustCrate (profileName: rec {
      name = "objc2-core-data";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "617fbf49e071c178c0b24c080767db52958f716d9eabdf0890523aeae54773ef"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "bitflags" ]
        [ "std" ]
      ];
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        block2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".block2."0.5.1" { inherit profileName; }).out;
        objc2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2."0.5.2" { inherit profileName; }).out;
        objc2_foundation = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-foundation."0.2.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".objc2-core-image."0.2.2" = overridableMkRustCrate (profileName: rec {
      name = "objc2-core-image";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "55260963a527c99f1819c4f8e3b47fe04f9650694ef348ffd2227e8196d34c80"; };
      features = builtins.concatLists [
        [ "CIColor" ]
        [ "CIContext" ]
        [ "CIImage" ]
        [ "alloc" ]
        [ "std" ]
      ];
      dependencies = {
        block2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".block2."0.5.1" { inherit profileName; }).out;
        objc2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2."0.5.2" { inherit profileName; }).out;
        objc2_foundation = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-foundation."0.2.2" { inherit profileName; }).out;
        objc2_metal = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-metal."0.2.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".objc2-core-location."0.2.2" = overridableMkRustCrate (profileName: rec {
      name = "objc2-core-location";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "000cfee34e683244f284252ee206a27953279d370e309649dc3ee317b37e5781"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "std" ]
      ];
      dependencies = {
        block2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".block2."0.5.1" { inherit profileName; }).out;
        objc2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2."0.5.2" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.kernel.name == "tvos") then "objc2_contacts" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-contacts."0.2.2" { inherit profileName; }).out;
        objc2_foundation = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-foundation."0.2.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".objc2-encode."4.0.3" = overridableMkRustCrate (profileName: rec {
      name = "objc2-encode";
      version = "4.0.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7891e71393cd1f227313c9379a26a584ff3d7e6e7159e988851f0934c993f0f8"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".objc2-foundation."0.2.2" = overridableMkRustCrate (profileName: rec {
      name = "objc2-foundation";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0ee638a5da3799329310ad4cfa62fbf045d5f56e3ef5ba4149e7452dcf89d5a8"; };
      features = builtins.concatLists [
        [ "NSArray" ]
        [ "NSAttributedString" ]
        [ "NSBundle" ]
        [ "NSCoder" ]
        [ "NSData" ]
        [ "NSDate" ]
        [ "NSDictionary" ]
        [ "NSDistributedNotificationCenter" ]
        [ "NSEnumerator" ]
        [ "NSError" ]
        [ "NSException" ]
        [ "NSExtensionContext" ]
        [ "NSExtensionRequestHandling" ]
        [ "NSFileWrapper" ]
        [ "NSFormatter" ]
        [ "NSGeometry" ]
        [ "NSItemProvider" ]
        [ "NSKeyValueObserving" ]
        [ "NSLocale" ]
        [ "NSNotification" ]
        [ "NSNull" ]
        [ "NSObjCRuntime" ]
        [ "NSObject" ]
        [ "NSPathUtilities" ]
        [ "NSProcessInfo" ]
        [ "NSRange" ]
        [ "NSRunLoop" ]
        [ "NSScriptCommand" ]
        [ "NSScriptStandardSuiteCommands" ]
        [ "NSSet" ]
        [ "NSString" ]
        [ "NSThread" ]
        [ "NSURL" ]
        [ "NSUUID" ]
        [ "NSUndoManager" ]
        [ "NSUserActivity" ]
        [ "NSValue" ]
        [ "NSZone" ]
        [ "alloc" ]
        [ "bitflags" ]
        [ "block2" ]
        [ "default" ]
        [ "dispatch" ]
        [ "std" ]
      ];
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        block2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".block2."0.5.1" { inherit profileName; }).out;
        dispatch = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dispatch."0.2.0" { inherit profileName; }).out;
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        objc2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2."0.5.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".objc2-link-presentation."0.2.2" = overridableMkRustCrate (profileName: rec {
      name = "objc2-link-presentation";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a1a1ae721c5e35be65f01a03b6d2ac13a54cb4fa70d8a5da293d7b0020261398"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "std" ]
      ];
      dependencies = {
        block2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".block2."0.5.1" { inherit profileName; }).out;
        objc2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2."0.5.2" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "darwin" then "objc2_app_kit" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-app-kit."0.2.2" { inherit profileName; }).out;
        objc2_foundation = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-foundation."0.2.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".objc2-metal."0.2.2" = overridableMkRustCrate (profileName: rec {
      name = "objc2-metal";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "dd0cba1276f6023976a406a14ffa85e1fdd19df6b0f737b063b95f6c8c7aadd6"; };
      features = builtins.concatLists [
        [ "MTLCommandQueue" ]
        [ "MTLDevice" ]
        [ "MTLResource" ]
        [ "MTLTexture" ]
        [ "alloc" ]
        [ "bitflags" ]
        [ "std" ]
      ];
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        block2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".block2."0.5.1" { inherit profileName; }).out;
        objc2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2."0.5.2" { inherit profileName; }).out;
        objc2_foundation = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-foundation."0.2.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".objc2-quartz-core."0.2.2" = overridableMkRustCrate (profileName: rec {
      name = "objc2-quartz-core";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e42bee7bff906b14b167da2bac5efe6b6a07e6f7c0a21a7308d40c960242dc7a"; };
      features = builtins.concatLists [
        [ "CADisplayLink" ]
        [ "CALayer" ]
        [ "CATransaction" ]
        [ "CATransform3D" ]
        [ "alloc" ]
        [ "bitflags" ]
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        block2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".block2."0.5.1" { inherit profileName; }).out;
        objc2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2."0.5.2" { inherit profileName; }).out;
        objc2_foundation = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-foundation."0.2.2" { inherit profileName; }).out;
        objc2_metal = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-metal."0.2.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".objc2-symbols."0.2.2" = overridableMkRustCrate (profileName: rec {
      name = "objc2-symbols";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0a684efe3dec1b305badae1a28f6555f6ddd3bb2c2267896782858d5a78404dc"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "std" ]
      ];
      dependencies = {
        objc2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2."0.5.2" { inherit profileName; }).out;
        objc2_foundation = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-foundation."0.2.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".objc2-ui-kit."0.2.2" = overridableMkRustCrate (profileName: rec {
      name = "objc2-ui-kit";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b8bb46798b20cd6b91cbd113524c490f1686f4c4e8f49502431415f3512e2b6f"; };
      features = builtins.concatLists [
        [ "UIApplication" ]
        [ "UIDevice" ]
        [ "UIEvent" ]
        [ "UIGeometry" ]
        [ "UIGestureRecognizer" ]
        [ "UIOrientation" ]
        [ "UIPanGestureRecognizer" ]
        [ "UIPinchGestureRecognizer" ]
        [ "UIResponder" ]
        [ "UIRotationGestureRecognizer" ]
        [ "UIScreen" ]
        [ "UIScreenMode" ]
        [ "UITapGestureRecognizer" ]
        [ "UITouch" ]
        [ "UITraitCollection" ]
        [ "UIView" ]
        [ "UIViewController" ]
        [ "UIWindow" ]
        [ "alloc" ]
        [ "bitflags" ]
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        block2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".block2."0.5.1" { inherit profileName; }).out;
        objc2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2."0.5.2" { inherit profileName; }).out;
        objc2_cloud_kit = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-cloud-kit."0.2.2" { inherit profileName; }).out;
        objc2_core_data = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-core-data."0.2.2" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.kernel.name == "watchos") then "objc2_core_image" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-core-image."0.2.2" { inherit profileName; }).out;
        objc2_core_location = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-core-location."0.2.2" { inherit profileName; }).out;
        objc2_foundation = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-foundation."0.2.2" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.kernel.name == "watchos") then "objc2_link_presentation" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-link-presentation."0.2.2" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.kernel.name == "watchos") then "objc2_quartz_core" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-quartz-core."0.2.2" { inherit profileName; }).out;
        objc2_symbols = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-symbols."0.2.2" { inherit profileName; }).out;
        objc2_uniform_type_identifiers = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-uniform-type-identifiers."0.2.2" { inherit profileName; }).out;
        objc2_user_notifications = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-user-notifications."0.2.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".objc2-uniform-type-identifiers."0.2.2" = overridableMkRustCrate (profileName: rec {
      name = "objc2-uniform-type-identifiers";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "44fa5f9748dbfe1ca6c0b79ad20725a11eca7c2218bceb4b005cb1be26273bfe"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "std" ]
      ];
      dependencies = {
        block2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".block2."0.5.1" { inherit profileName; }).out;
        objc2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2."0.5.2" { inherit profileName; }).out;
        objc2_foundation = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-foundation."0.2.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".objc2-user-notifications."0.2.2" = overridableMkRustCrate (profileName: rec {
      name = "objc2-user-notifications";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "76cfcbf642358e8689af64cee815d139339f3ed8ad05103ed5eaf73db8d84cb3"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "bitflags" ]
        [ "std" ]
      ];
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        block2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".block2."0.5.1" { inherit profileName; }).out;
        objc2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2."0.5.2" { inherit profileName; }).out;
        objc2_core_location = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-core-location."0.2.2" { inherit profileName; }).out;
        objc2_foundation = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-foundation."0.2.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".objc_exception."0.1.2" = overridableMkRustCrate (profileName: rec {
      name = "objc_exception";
      version = "0.1.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ad970fb455818ad6cba4c122ad012fae53ae8b4795f86378bce65e4f6bab2ca4"; };
      buildDependencies = {
        cc = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.1.31" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".object."0.32.2" = overridableMkRustCrate (profileName: rec {
      name = "object";
      version = "0.32.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a6a622008b6e321afc04970976f62ee297fdbaa6f95318ca343e3eebb9648441"; };
      features = builtins.concatLists [
        [ "archive" ]
        [ "coff" ]
        [ "elf" ]
        [ "macho" ]
        [ "pe" ]
        [ "read_core" ]
        [ "unaligned" ]
        [ "xcoff" ]
      ];
      dependencies = {
        memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".object_store."0.10.2" = overridableMkRustCrate (profileName: rec {
      name = "object_store";
      version = "0.10.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e6da452820c715ce78221e8202ccc599b4a52f3e1eb3eedb487b680c81a8e3f3"; };
      dependencies = {
        async_trait = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.83" { profileName = "__noProfile"; }).out;
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.8.0" { inherit profileName; }).out;
        chrono = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.38" { inherit profileName; }).out;
        futures = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.31" { inherit profileName; }).out;
        humantime = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".humantime."2.1.0" { inherit profileName; }).out;
        itertools = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.13.0" { inherit profileName; }).out;
        parking_lot = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.12.3" { inherit profileName; }).out;
        percent_encoding = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.3.1" { inherit profileName; }).out;
        snafu = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".snafu."0.7.5" { inherit profileName; }).out;
        tokio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.41.0" { inherit profileName; }).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
        url = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.5.2" { inherit profileName; }).out;
        walkdir = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.5.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" = overridableMkRustCrate (profileName: rec {
      name = "once_cell";
      version = "1.20.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1261fe7e33c73b354eab43b1273a57c8f967d0391e80353e51f764ac02cf6775"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "race" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".onig."6.4.0" = overridableMkRustCrate (profileName: rec {
      name = "onig";
      version = "6.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8c4b31c8722ad9171c6d77d3557db078cab2bd50afcc9d09c8b315c59df8ca4f"; };
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
        onig_sys = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".onig_sys."69.8.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".onig_sys."69.8.1" = overridableMkRustCrate (profileName: rec {
      name = "onig_sys";
      version = "69.8.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7b829e3d7e9cc74c7e315ee8edb185bf4190da5acde74afd7fc59c35b1f086e7"; };
      buildDependencies = {
        cc = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.1.31" { profileName = "__noProfile"; }).out;
        pkg_config = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.31" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".openssl."0.10.68" = overridableMkRustCrate (profileName: rec {
      name = "openssl";
      version = "0.10.68";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6174bc48f102d208783c2c84bf931bb75927a617866870de8a4ea85597f871f5"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        foreign_types = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".foreign-types."0.3.2" { inherit profileName; }).out;
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
        openssl_macros = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-macros."0.1.1" { profileName = "__noProfile"; }).out;
        ffi = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-sys."0.9.104" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".openssl-macros."0.1.1" = overridableMkRustCrate (profileName: rec {
      name = "openssl-macros";
      version = "0.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a948666b637a0f465e8564c73e89d4dde00d72d4d473cc972f390fc3dcee7d9c"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".openssl-probe."0.1.5" = overridableMkRustCrate (profileName: rec {
      name = "openssl-probe";
      version = "0.1.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ff011a302c396a5197692431fc1948019154afc178baf7d8e37367442a4601cf"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".openssl-sys."0.9.104" = overridableMkRustCrate (profileName: rec {
      name = "openssl-sys";
      version = "0.9.104";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "45abf306cbf99debc8195b66b7346498d7b10c210de50418b5ccd7ceba08c741"; };
      dependencies = {
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
      };
      buildDependencies = {
        cc = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.1.31" { profileName = "__noProfile"; }).out;
        pkg_config = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.31" { profileName = "__noProfile"; }).out;
        vcpkg = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".vcpkg."0.2.15" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".option-ext."0.2.0" = overridableMkRustCrate (profileName: rec {
      name = "option-ext";
      version = "0.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "04744f49eae99ab78e0d5c0b603ab218f515ea8cfe5a456d7629ad883a3b6e7d"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".orbclient."0.3.48" = overridableMkRustCrate (profileName: rec {
      name = "orbclient";
      version = "0.3.48";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ba0b26cec2e24f08ed8bb31519a9333140a6599b867dac464bb150bdb796fd43"; };
      dependencies = {
        ${ if hostPlatform.parsed.kernel.name == "redox" then "libredox" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libredox."0.1.3" { inherit profileName; }).out;
      };
    });

    "unknown".orbitus."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "orbitus";
      version = "0.1.0";
      registry = "unknown";
      src = fetchCrateLocal workspaceSrc;
      dependencies = {
        anyhow = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.91" { inherit profileName; }).out;
        chrono = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.38" { inherit profileName; }).out;
        clap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."4.5.20" { inherit profileName; }).out;
        dark_light = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dark-light."1.1.1" { inherit profileName; }).out;
        derivative = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derivative."2.2.0" { profileName = "__noProfile"; }).out;
        flume = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".flume."0.11.1" { inherit profileName; }).out;
        futures = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.31" { inherit profileName; }).out;
        gravity = (rustPackages."unknown".gravity."0.1.0" { inherit profileName; }).out;
        iced = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".iced."0.13.1" { inherit profileName; }).out;
        iced_futures = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".iced_futures."0.13.2" { inherit profileName; }).out;
        merge = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".merge."0.1.0" { inherit profileName; }).out;
        palette = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".palette."0.7.6" { inherit profileName; }).out;
        rand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; }).out;
        schemars = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".schemars."0.8.21" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        serde_json = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.132" { inherit profileName; }).out;
        tokio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.41.0" { inherit profileName; }).out;
        tokio_tungstenite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-tungstenite."0.24.0" { inherit profileName; }).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ordered-multimap."0.4.3" = overridableMkRustCrate (profileName: rec {
      name = "ordered-multimap";
      version = "0.4.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ccd746e37177e1711c20dd619a1620f34f5c8b569c53590a72dedd5344d8924a"; };
      dependencies = {
        dlv_list = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dlv-list."0.3.0" { inherit profileName; }).out;
        hashbrown = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.12.3" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ordered-multimap."0.7.3" = overridableMkRustCrate (profileName: rec {
      name = "ordered-multimap";
      version = "0.7.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "49203cdcae0030493bad186b28da2fa25645fa276a51b6fec8010d281e02ef79"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        dlv_list = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dlv-list."0.5.2" { inherit profileName; }).out;
        hashbrown = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.14.5" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ordered-stream."0.2.0" = overridableMkRustCrate (profileName: rec {
      name = "ordered-stream";
      version = "0.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9aa2b01e1d916879f73a53d01d1d6cee68adbb31d6d9177a8cfce093cced1d50"; };
      dependencies = {
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.31" { inherit profileName; }).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.15" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".overload."0.1.1" = overridableMkRustCrate (profileName: rec {
      name = "overload";
      version = "0.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b15813163c1d831bf4a13c3610c05c0d03b39feb07f7e09fa234dac9b15aaf39"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".owned_ttf_parser."0.25.0" = overridableMkRustCrate (profileName: rec {
      name = "owned_ttf_parser";
      version = "0.25.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "22ec719bbf3b2a81c109a4e20b1f129b5566b7dce654bc3872f6a05abf82b2c4"; };
      features = builtins.concatLists [
        [ "apple-layout" ]
        [ "default" ]
        [ "glyph-names" ]
        [ "opentype-layout" ]
        [ "std" ]
        [ "variable-fonts" ]
      ];
      dependencies = {
        ttf_parser = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ttf-parser."0.25.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".owo-colors."3.5.0" = overridableMkRustCrate (profileName: rec {
      name = "owo-colors";
      version = "3.5.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c1b04fb49957986fdce4d6ee7a65027d55d4b6d2265e5848bbb507b58ccfdb6f"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".palette."0.7.6" = overridableMkRustCrate (profileName: rec {
      name = "palette";
      version = "0.7.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4cbf71184cc5ecc2e4e1baccdb21026c20e5fc3dcf63028a086131b3ab00b6e6"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "approx" ]
        [ "default" ]
        [ "named" ]
        [ "named_from_str" ]
        [ "phf" ]
        [ "serde" ]
        [ "serializing" ]
        [ "std" ]
      ];
      dependencies = {
        approx = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".approx."0.5.1" { inherit profileName; }).out;
        fast_srgb8 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".fast-srgb8."1.0.0" { inherit profileName; }).out;
        palette_derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".palette_derive."0.7.6" { profileName = "__noProfile"; }).out;
        phf = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf."0.11.2" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".palette_derive."0.7.6" = overridableMkRustCrate (profileName: rec {
      name = "palette_derive";
      version = "0.7.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f5030daf005bface118c096f510ffb781fc28f9ab6a32ab224d8631be6851d30"; };
      dependencies = {
        by_address = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".by_address."1.2.1" { inherit profileName; }).out;
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".parking."2.2.1" = overridableMkRustCrate (profileName: rec {
      name = "parking";
      version = "2.2.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f38d5652c16fde515bb1ecef450ab0f6a219d619a7274976324d5e377f7dceba"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.11.2" = overridableMkRustCrate (profileName: rec {
      name = "parking_lot";
      version = "0.11.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7d17b78036a60663b797adeaee46f5c9dfebb86948d1255007a1d6be0271ff99"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        instant = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".instant."0.1.13" { inherit profileName; }).out;
        lock_api = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".lock_api."0.4.12" { inherit profileName; }).out;
        parking_lot_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.8.6" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.12.3" = overridableMkRustCrate (profileName: rec {
      name = "parking_lot";
      version = "0.12.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f1bf18183cf54e8d6059647fc3063646a1801cf30896933ec2311622cc4b9a27"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        lock_api = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".lock_api."0.4.12" { inherit profileName; }).out;
        parking_lot_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.9.10" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.8.6" = overridableMkRustCrate (profileName: rec {
      name = "parking_lot_core";
      version = "0.8.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "60a2cfe6f0ad2bfc16aefa463b497d5c7a5ecd44a23efa72aa342d90177356dc"; };
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        instant = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".instant."0.1.13" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.2.16" { inherit profileName; }).out;
        smallvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.13.2" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "winapi" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.9.10" = overridableMkRustCrate (profileName: rec {
      name = "parking_lot_core";
      version = "0.9.10";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1e401f977ab385c9e4e3ab30627d6f26d00e2c73eef317493c4ec6d468726cf8"; };
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.5.7" { inherit profileName; }).out;
        smallvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.13.2" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "windows_targets" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.52.6" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".password-hash."0.5.0" = overridableMkRustCrate (profileName: rec {
      name = "password-hash";
      version = "0.5.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "346f04948ba92c43e8469c1ee6736c7563d71012b17d40745260fe106aac2166"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "rand_core" ]
        [ "std" ]
      ];
      dependencies = {
        base64ct = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64ct."1.6.0" { inherit profileName; }).out;
        rand_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.4" { inherit profileName; }).out;
        subtle = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".subtle."2.6.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".paste."1.0.15" = overridableMkRustCrate (profileName: rec {
      name = "paste";
      version = "1.0.15";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".path-clean."1.0.1" = overridableMkRustCrate (profileName: rec {
      name = "path-clean";
      version = "1.0.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "17359afc20d7ab31fdb42bb844c8b3bb1dabd7dcf7e68428492da7f16966fcef"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".pbkdf2."0.12.2" = overridableMkRustCrate (profileName: rec {
      name = "pbkdf2";
      version = "0.12.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f8ed6a7761f76e3b9f92dfb0a60a6a6477c61024b775147ff0973a02653abaf2"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "hmac" ]
        [ "password-hash" ]
        [ "sha2" ]
        [ "simple" ]
      ];
      dependencies = {
        digest = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.10.7" { inherit profileName; }).out;
        hmac = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hmac."0.12.1" { inherit profileName; }).out;
        password_hash = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".password-hash."0.5.0" { inherit profileName; }).out;
        sha2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha2."0.10.8" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".pem."3.0.4" = overridableMkRustCrate (profileName: rec {
      name = "pem";
      version = "3.0.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8e459365e590736a54c3fa561947c84837534b8e9af6fc5bf781307e82658fae"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        base64 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.22.1" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.3.1" = overridableMkRustCrate (profileName: rec {
      name = "percent-encoding";
      version = "2.3.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e3148f5046208a5d56bcfc03053e3ca6334e51da8dfb19b6cdc8b306fae3283e"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".pest."2.7.14" = overridableMkRustCrate (profileName: rec {
      name = "pest";
      version = "2.7.14";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "879952a81a83930934cbf1786752d6dedc3b1f29e8f8fb2ad1d0a36f377cf442"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "memchr" ]
        [ "std" ]
      ];
      dependencies = {
        memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
        ucd_trie = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ucd-trie."0.1.7" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".petgraph."0.6.5" = overridableMkRustCrate (profileName: rec {
      name = "petgraph";
      version = "0.6.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b4c5cc86750666a3ed20bdaf5ca2a0344f9c67674cae0515bec2da16fbaa47db"; };
      dependencies = {
        fixedbitset = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".fixedbitset."0.4.2" { inherit profileName; }).out;
        indexmap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."2.6.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".pharos."0.5.3" = overridableMkRustCrate (profileName: rec {
      name = "pharos";
      version = "0.5.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e9567389417feee6ce15dd6527a8a1ecac205ef62c2932bcf3d9f6fc5b78b414"; };
      dependencies = {
        futures = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.31" { inherit profileName; }).out;
      };
      buildDependencies = {
        rustc_version = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc_version."0.4.1" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".phf."0.11.2" = overridableMkRustCrate (profileName: rec {
      name = "phf";
      version = "0.11.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ade2d8b8f33c7333b51bcf0428d37e217e9f32192ae4772156f65063b8ce03dc"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "macros" ]
        [ "phf_macros" ]
        [ "std" ]
        [ "unicase" ]
      ];
      dependencies = {
        phf_macros = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_macros."0.11.2" { profileName = "__noProfile"; }).out;
        phf_shared = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_shared."0.11.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".phf_codegen."0.11.2" = overridableMkRustCrate (profileName: rec {
      name = "phf_codegen";
      version = "0.11.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e8d39688d359e6b34654d328e262234662d16cc0f60ec8dcbe5e718709342a5a"; };
      dependencies = {
        phf_generator = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_generator."0.11.2" { inherit profileName; }).out;
        phf_shared = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_shared."0.11.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".phf_generator."0.10.0" = overridableMkRustCrate (profileName: rec {
      name = "phf_generator";
      version = "0.10.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "5d5285893bb5eb82e6aaf5d59ee909a06a16737a8970984dd7746ba9283498d6"; };
      dependencies = {
        phf_shared = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_shared."0.10.0" { inherit profileName; }).out;
        rand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".phf_generator."0.11.2" = overridableMkRustCrate (profileName: rec {
      name = "phf_generator";
      version = "0.11.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "48e4cc64c2ad9ebe670cb8fd69dd50ae301650392e81c05f9bfcb2d5bdbc24b0"; };
      dependencies = {
        phf_shared = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_shared."0.11.2" { inherit profileName; }).out;
        rand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".phf_macros."0.11.2" = overridableMkRustCrate (profileName: rec {
      name = "phf_macros";
      version = "0.11.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3444646e286606587e49f3bcf1679b8cef1dc2c5ecc29ddacaffc305180d464b"; };
      features = builtins.concatLists [
        [ "unicase" ]
        [ "unicase_" ]
      ];
      dependencies = {
        phf_generator = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_generator."0.11.2" { inherit profileName; }).out;
        phf_shared = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_shared."0.11.2" { inherit profileName; }).out;
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
        unicase_ = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicase."2.8.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".phf_shared."0.10.0" = overridableMkRustCrate (profileName: rec {
      name = "phf_shared";
      version = "0.10.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b6796ad771acdc0123d2a88dc428b5e38ef24456743ddb1744ed628f9815c096"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        siphasher = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".siphasher."0.3.11" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".phf_shared."0.11.2" = overridableMkRustCrate (profileName: rec {
      name = "phf_shared";
      version = "0.11.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "90fcb95eef784c2ac79119d1dd819e162b5da872ce6f3c3abe1e8ca1c082f72b"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
        [ "unicase" ]
      ];
      dependencies = {
        siphasher = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".siphasher."0.3.11" { inherit profileName; }).out;
        unicase = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicase."2.8.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".pico-args."0.5.0" = overridableMkRustCrate (profileName: rec {
      name = "pico-args";
      version = "0.5.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "5be167a7af36ee22fe3115051bc51f6e6c7054c9348e28deb4f49bd6f705a315"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".pin-project."1.1.7" = overridableMkRustCrate (profileName: rec {
      name = "pin-project";
      version = "1.1.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "be57f64e946e500c8ee36ef6331845d40a93055567ec57e8fae13efd33759b95"; };
      dependencies = {
        pin_project_internal = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-internal."1.1.7" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".pin-project-internal."1.1.7" = overridableMkRustCrate (profileName: rec {
      name = "pin-project-internal";
      version = "1.1.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3c0f5fad0874fc7abcd4d750e76917eaebbecaa2c20bde22e1dbeeba8beb758c"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.15" = overridableMkRustCrate (profileName: rec {
      name = "pin-project-lite";
      version = "0.2.15";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "915a1e146535de9163f3987b8944ed8cf49a18bb0056bcebcdcece385cece4ff"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".pin-utils."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "pin-utils";
      version = "0.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".piper."0.2.4" = overridableMkRustCrate (profileName: rec {
      name = "piper";
      version = "0.2.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "96c8c490f422ef9a4efd2cb5b42b76c8613d7e7dfc1caf667b8a3350a5acc066"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "futures-io" ]
        [ "std" ]
      ];
      dependencies = {
        atomic_waker = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".atomic-waker."1.1.2" { inherit profileName; }).out;
        fastrand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".fastrand."2.1.1" { inherit profileName; }).out;
        futures_io = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-io."0.3.31" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.31" = overridableMkRustCrate (profileName: rec {
      name = "pkg-config";
      version = "0.3.31";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "953ec861398dccce10c670dfeaf3ec4911ca479e9c02154b3a215178c5f566f2"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".png."0.17.14" = overridableMkRustCrate (profileName: rec {
      name = "png";
      version = "0.17.14";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "52f9d46a34a05a6a57566bc2bfae066ef07585a6e3fa30fbbdff5936380623f0"; };
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" { inherit profileName; }).out;
        crc32fast = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crc32fast."1.4.2" { inherit profileName; }).out;
        fdeflate = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".fdeflate."0.3.5" { inherit profileName; }).out;
        flate2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.34" { inherit profileName; }).out;
        miniz_oxide = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.8.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".polling."3.7.3" = overridableMkRustCrate (profileName: rec {
      name = "polling";
      version = "3.7.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "cc2790cd301dec6cd3b7a025e4815cf825724a51c98dccfe6a3e55f05ffb6511"; };
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "concurrent_queue" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".concurrent-queue."2.5.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "hermit" then "hermit_abi" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.4.0" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "pin_project_lite" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.15" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix || hostPlatform.parsed.kernel.name == "fuchsia" || hostPlatform.parsed.kernel.name == "vxworks" then "rustix" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustix."0.38.37" { inherit profileName; }).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.59.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".portable-atomic."1.9.0" = overridableMkRustCrate (profileName: rec {
      name = "portable-atomic";
      version = "1.9.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "cc9c68a3f6da06753e9335d63e27f6b9754dd1920d941135b7ea8224f141adb2"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "fallback" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".powerfmt."0.2.0" = overridableMkRustCrate (profileName: rec {
      name = "powerfmt";
      version = "0.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "439ee305def115ba05938db6eb1644ff94165c5ab5e9420d1c1bcedbba909391"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ppv-lite86."0.2.20" = overridableMkRustCrate (profileName: rec {
      name = "ppv-lite86";
      version = "0.2.20";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "77957b295656769bb8ad2b6a6b09d897d94f05c41b069aede1fcdaa675eaea04"; };
      features = builtins.concatLists [
        [ "simd" ]
        [ "std" ]
      ];
      dependencies = {
        zerocopy = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".zerocopy."0.7.35" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".precomputed-hash."0.1.1" = overridableMkRustCrate (profileName: rec {
      name = "precomputed-hash";
      version = "0.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "925383efa346730478fb4838dbe9137d2a47675ad789c546d150a6e1dd4ab31c"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".presser."0.3.1" = overridableMkRustCrate (profileName: rec {
      name = "presser";
      version = "0.3.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e8cf8e6a8aa66ce33f63993ffc4ea4271eb5b0530a9002db8455ea6050c77bfa"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".prettyplease."0.2.25" = overridableMkRustCrate (profileName: rec {
      name = "prettyplease";
      version = "0.2.25";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "64d1ec885c64d0457d564db4ec299b2dae3f9c02808b8ad9c3a089c591b18033"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".proc-macro-crate."3.2.0" = overridableMkRustCrate (profileName: rec {
      name = "proc-macro-crate";
      version = "3.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8ecf48c7ca261d60b74ab1a7b20da18bede46776b2e55535cb958eb595c5fa7b"; };
      dependencies = {
        toml_edit = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml_edit."0.22.22" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".proc-macro-error."1.0.4" = overridableMkRustCrate (profileName: rec {
      name = "proc-macro-error";
      version = "1.0.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "syn" ]
        [ "syn-error" ]
      ];
      dependencies = {
        proc_macro_error_attr = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro-error-attr."1.0.4" { profileName = "__noProfile"; }).out;
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" { inherit profileName; }).out;
      };
      buildDependencies = {
        version_check = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.5" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".proc-macro-error-attr."1.0.4" = overridableMkRustCrate (profileName: rec {
      name = "proc-macro-error-attr";
      version = "1.0.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a1be40180e52ecc98ad80b184934baf3d0d29f979574e439af5a55274b35f869"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
      };
      buildDependencies = {
        version_check = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.5" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" = overridableMkRustCrate (profileName: rec {
      name = "proc-macro2";
      version = "1.0.89";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f139b0662de085916d1fb67d2b4169d1addddda1919e696f3252b740b629986e"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "proc-macro" ]
      ];
      dependencies = {
        unicode_ident = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.13" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".profiling."1.0.16" = overridableMkRustCrate (profileName: rec {
      name = "profiling";
      version = "1.0.16";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "afbdc74edc00b6f6a218ca6a5364d6226a259d4b8ea1af4a0ea063f27e179f4d"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".prost."0.12.6" = overridableMkRustCrate (profileName: rec {
      name = "prost";
      version = "0.12.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "deb1435c188b76130da55f17a466d252ff7b1418b2ad3e037d127b94e3411f29"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "derive" ]
        [ "prost-derive" ]
        [ "std" ]
      ];
      dependencies = {
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.8.0" { inherit profileName; }).out;
        prost_derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".prost-derive."0.12.6" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".prost-build."0.12.6" = overridableMkRustCrate (profileName: rec {
      name = "prost-build";
      version = "0.12.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "22505a5c94da8e3b7c2996394d1c933236c4d743e81a410bcca4e6989fc066a4"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "format" ]
      ];
      dependencies = {
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.8.0" { inherit profileName; }).out;
        heck = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".heck."0.5.0" { inherit profileName; }).out;
        itertools = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.12.1" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        multimap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".multimap."0.10.0" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
        petgraph = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".petgraph."0.6.5" { inherit profileName; }).out;
        prettyplease = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".prettyplease."0.2.25" { inherit profileName; }).out;
        prost = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".prost."0.12.6" { inherit profileName; }).out;
        prost_types = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".prost-types."0.12.6" { inherit profileName; }).out;
        regex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.11.1" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
        tempfile = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.13.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".prost-derive."0.12.6" = overridableMkRustCrate (profileName: rec {
      name = "prost-derive";
      version = "0.12.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "81bddcdb20abf9501610992b6759a4c888aef7d1a7247ef75e2404275ac24af1"; };
      dependencies = {
        anyhow = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.91" { inherit profileName; }).out;
        itertools = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.12.1" { inherit profileName; }).out;
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".prost-types."0.12.6" = overridableMkRustCrate (profileName: rec {
      name = "prost-types";
      version = "0.12.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9091c90b0a32608e984ff2fa4091273cbdd755d54935c51d520887f4a1dbd5b0"; };
      dependencies = {
        prost = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".prost."0.12.6" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".psl-types."2.0.11" = overridableMkRustCrate (profileName: rec {
      name = "psl-types";
      version = "2.0.11";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "33cb294fe86a74cbcf50d4445b37da762029549ebeea341421c7c70370f86cac"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".psm."0.1.23" = overridableMkRustCrate (profileName: rec {
      name = "psm";
      version = "0.1.23";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "aa37f80ca58604976033fae9515a8a2989fc13797d953f7c04fb8fa36a11f205"; };
      buildDependencies = {
        cc = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.1.31" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ptr_meta."0.1.4" = overridableMkRustCrate (profileName: rec {
      name = "ptr_meta";
      version = "0.1.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0738ccf7ea06b608c10564b31debd4f5bc5e197fc8bfe088f68ae5ce81e7a4f1"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
      dependencies = {
        ptr_meta_derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".ptr_meta_derive."0.1.4" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ptr_meta_derive."0.1.4" = overridableMkRustCrate (profileName: rec {
      name = "ptr_meta_derive";
      version = "0.1.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "16b845dbfca988fa33db069c0e230574d15a3088f147a87b64c7589eb662c9ac"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".pulp."0.18.22" = overridableMkRustCrate (profileName: rec {
      name = "pulp";
      version = "0.18.22";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a0a01a0dc67cf4558d279f0c25b0962bd08fc6dec0137699eae304103e882fe6"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
      dependencies = {
        bytemuck = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytemuck."1.19.0" { inherit profileName; }).out;
        libm = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libm."0.2.8" { inherit profileName; }).out;
        num_complex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-complex."0.4.6" { inherit profileName; }).out;
        reborrow = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".reborrow."0.5.5" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".quick-xml."0.36.2" = overridableMkRustCrate (profileName: rec {
      name = "quick-xml";
      version = "0.36.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f7649a7b4df05aed9ea7ec6f628c67c9953a43869b8bc50929569b2999d443fe"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".quick_cache."0.5.2" = overridableMkRustCrate (profileName: rec {
      name = "quick_cache";
      version = "0.5.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "eb55a1aa7668676bb93926cd4e9cdfe60f03bb866553bcca9112554911b6d3dc"; };
      features = builtins.concatLists [
        [ "ahash" ]
        [ "default" ]
        [ "parking_lot" ]
      ];
      dependencies = {
        ahash = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ahash."0.8.11" { inherit profileName; }).out;
        equivalent = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".equivalent."1.0.1" { inherit profileName; }).out;
        hashbrown = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.14.5" { inherit profileName; }).out;
        parking_lot = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.12.3" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".quinn."0.11.5" = overridableMkRustCrate (profileName: rec {
      name = "quinn";
      version = "0.11.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8c7c5fdde3cdae7203427dc4f0a68fe0ed09833edc525a03456b153b79828684"; };
      features = builtins.concatLists [
        [ "ring" ]
        [ "runtime-tokio" ]
        [ "rustls" ]
      ];
      dependencies = {
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.8.0" { inherit profileName; }).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.15" { inherit profileName; }).out;
        proto = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quinn-proto."0.11.8" { inherit profileName; }).out;
        udp = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quinn-udp."0.5.5" { inherit profileName; }).out;
        rustc_hash = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."2.0.0" { inherit profileName; }).out;
        rustls = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls."0.23.15" { inherit profileName; }).out;
        socket2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".socket2."0.5.7" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
        tokio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.41.0" { inherit profileName; }).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".quinn-proto."0.11.8" = overridableMkRustCrate (profileName: rec {
      name = "quinn-proto";
      version = "0.11.8";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "fadfaed2cd7f389d0161bb73eeb07b7b78f8691047a6f3e73caaeae55310a4a6"; };
      features = builtins.concatLists [
        [ "ring" ]
        [ "rustls" ]
      ];
      dependencies = {
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.8.0" { inherit profileName; }).out;
        rand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; }).out;
        ring = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ring."0.17.8" { inherit profileName; }).out;
        rustc_hash = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."2.0.0" { inherit profileName; }).out;
        rustls = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls."0.23.15" { inherit profileName; }).out;
        slab = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".slab."0.4.9" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
        tinyvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tinyvec."1.8.0" { inherit profileName; }).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".quinn-udp."0.5.5" = overridableMkRustCrate (profileName: rec {
      name = "quinn-udp";
      version = "0.5.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4fe68c2e9e1a1234e218683dbdf9f9dfcb094113c5ac2b938dfcb9bab4c4140b"; };
      features = builtins.concatLists [
        [ "tracing" ]
      ];
      dependencies = {
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "once_cell" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
        socket2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".socket2."0.5.7" { inherit profileName; }).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.59.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" = overridableMkRustCrate (profileName: rec {
      name = "quote";
      version = "1.0.37";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b5b9d34b8991d19d98081b46eacdd8eb58c6f2b201139f7c5f643cc155a633af"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "proc-macro" ]
      ];
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".radium."0.7.0" = overridableMkRustCrate (profileName: rec {
      name = "radium";
      version = "0.7.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "dc33ff2d4973d518d823d61aa239014831e521c75da58e3df4840d3f47749d09"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".radix_trie."0.2.1" = overridableMkRustCrate (profileName: rec {
      name = "radix_trie";
      version = "0.2.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c069c179fcdc6a2fe24d8d18305cf085fdbd4f922c041943e203685d6a1c58fd"; };
      features = builtins.concatLists [
        [ "serde" ]
      ];
      dependencies = {
        endian_type = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".endian-type."0.1.2" { inherit profileName; }).out;
        nibble_vec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".nibble_vec."0.1.0" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" = overridableMkRustCrate (profileName: rec {
      name = "rand";
      version = "0.8.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "getrandom" ]
        [ "libc" ]
        [ "rand_chacha" ]
        [ "serde" ]
        [ "small_rng" ]
        [ "std" ]
        [ "std_rng" ]
      ];
      dependencies = {
        ${ if hostPlatform.isUnix then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        rand_chacha = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.3.1" { inherit profileName; }).out;
        rand_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.4" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.3.1" = overridableMkRustCrate (profileName: rec {
      name = "rand_chacha";
      version = "0.3.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
      dependencies = {
        ppv_lite86 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ppv-lite86."0.2.20" { inherit profileName; }).out;
        rand_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.4" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.4" = overridableMkRustCrate (profileName: rec {
      name = "rand_core";
      version = "0.6.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "getrandom" ]
        [ "std" ]
      ];
      dependencies = {
        getrandom = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.15" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rand_distr."0.4.3" = overridableMkRustCrate (profileName: rec {
      name = "rand_distr";
      version = "0.4.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "32cb0b9bc82b0a0876c2dd994a7e7a2683d3e7390ca40e6886785ef0c7e3ee31"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
        rand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".range-alloc."0.1.3" = overridableMkRustCrate (profileName: rec {
      name = "range-alloc";
      version = "0.1.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9c8a99fddc9f0ba0a85884b8d14e3592853e787d581ca1816c91349b10e4eeab"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rangemap."1.5.1" = overridableMkRustCrate (profileName: rec {
      name = "rangemap";
      version = "1.5.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f60fcc7d6849342eff22c4350c8b9a989ee8ceabc4b481253e8946b9fe83d684"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".raw-cpuid."10.7.0" = overridableMkRustCrate (profileName: rec {
      name = "raw-cpuid";
      version = "10.7.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6c297679cb867470fa8c9f67dbba74a78d78e3e98d7cf2b08d6d71540f797332"; };
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".raw-window-handle."0.6.2" = overridableMkRustCrate (profileName: rec {
      name = "raw-window-handle";
      version = "0.6.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "20675572f6f24e9e76ef639bc5552774ed45f1c30e2951e1e99c59888861c539"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".rawpointer."0.2.1" = overridableMkRustCrate (profileName: rec {
      name = "rawpointer";
      version = "0.2.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "60a357793950651c4ed0f3f52338f53b2f809f32d83a07f72909fa13e4c6c1e3"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rayon."1.10.0" = overridableMkRustCrate (profileName: rec {
      name = "rayon";
      version = "1.10.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b418a60154510ca1a002a752ca9714984e21e4241e804d32555251faf8b78ffa"; };
      dependencies = {
        either = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.13.0" { inherit profileName; }).out;
        rayon_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon-core."1.12.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rayon-cond."0.3.0" = overridableMkRustCrate (profileName: rec {
      name = "rayon-cond";
      version = "0.3.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "059f538b55efd2309c9794130bc149c6a553db90e9d99c2030785c82f0bd7df9"; };
      dependencies = {
        either = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.13.0" { inherit profileName; }).out;
        itertools = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.11.0" { inherit profileName; }).out;
        rayon = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon."1.10.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rayon-core."1.12.1" = overridableMkRustCrate (profileName: rec {
      name = "rayon-core";
      version = "1.12.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1465873a3dfdaa8ae7cb14b4383657caab0b3e8a0aa9ae8e04b044854c8dfce2"; };
      dependencies = {
        crossbeam_deque = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-deque."0.8.5" { inherit profileName; }).out;
        crossbeam_utils = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.20" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".read-fonts."0.22.5" = overridableMkRustCrate (profileName: rec {
      name = "read-fonts";
      version = "0.22.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4a04b892cb6f91951f144c33321843790c8574c825aafdb16d815fd7183b5229"; };
      features = builtins.concatLists [
        [ "experimental_traverse" ]
        [ "std" ]
      ];
      dependencies = {
        bytemuck = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytemuck."1.19.0" { inherit profileName; }).out;
        font_types = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".font-types."0.7.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".reblessive."0.4.1" = overridableMkRustCrate (profileName: rec {
      name = "reblessive";
      version = "0.4.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1d4f118ca848dfd632a8c0883f9aacd6b58da548eb0629a78cafee3d330938da"; };
      features = builtins.concatLists [
        [ "tree" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".reborrow."0.5.5" = overridableMkRustCrate (profileName: rec {
      name = "reborrow";
      version = "0.5.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "03251193000f4bd3b042892be858ee50e8b3719f2b08e5833ac4353724632430"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.2.16" = overridableMkRustCrate (profileName: rec {
      name = "redox_syscall";
      version = "0.2.16";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "fb5a58c1855b4b6819d59012155603f0b22ad30cad752600aadfcb695265519a"; };
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.4.1" = overridableMkRustCrate (profileName: rec {
      name = "redox_syscall";
      version = "0.4.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4722d768eff46b75989dd134e5c353f0d6296e5aaa3132e776cbdb56be7731aa"; };
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.5.7" = overridableMkRustCrate (profileName: rec {
      name = "redox_syscall";
      version = "0.5.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9b6dfecf2c74bce2466cabf93f6664d6998a69eb21e39f4207930065b27b771f"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "userspace" ]
      ];
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".redox_users."0.4.6" = overridableMkRustCrate (profileName: rec {
      name = "redox_users";
      version = "0.4.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ba009ff324d1fc1b900bd1fdb31564febe58a8ccc8a6fdbb93b543d33b13ca43"; };
      dependencies = {
        getrandom = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.15" { inherit profileName; }).out;
        libredox = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libredox."0.1.3" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ref-cast."1.0.23" = overridableMkRustCrate (profileName: rec {
      name = "ref-cast";
      version = "1.0.23";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ccf0a6f84d5f1d581da8b41b47ec8600871962f2a528115b542b362d4b744931"; };
      dependencies = {
        ref_cast_impl = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".ref-cast-impl."1.0.23" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ref-cast-impl."1.0.23" = overridableMkRustCrate (profileName: rec {
      name = "ref-cast-impl";
      version = "1.0.23";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "bcc303e793d3734489387d205e9b186fac9c6cfacedd98cbb2e8a5943595f3e6"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".regex."1.11.1" = overridableMkRustCrate (profileName: rec {
      name = "regex";
      version = "1.11.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b544ef1b4eac5dc2db33ea63606ae9ffcfac26c1416a2806ae0bf5f56b201191"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "perf" ]
        [ "perf-backtrack" ]
        [ "perf-cache" ]
        [ "perf-dfa" ]
        [ "perf-inline" ]
        [ "perf-literal" ]
        [ "perf-onepass" ]
        [ "std" ]
        [ "unicode" ]
        [ "unicode-age" ]
        [ "unicode-bool" ]
        [ "unicode-case" ]
        [ "unicode-gencat" ]
        [ "unicode-perl" ]
        [ "unicode-script" ]
        [ "unicode-segment" ]
      ];
      dependencies = {
        aho_corasick = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".aho-corasick."1.1.3" { inherit profileName; }).out;
        memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" { inherit profileName; }).out;
        regex_automata = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-automata."0.4.8" { inherit profileName; }).out;
        regex_syntax = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.8.5" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".regex-automata."0.1.10" = overridableMkRustCrate (profileName: rec {
      name = "regex-automata";
      version = "0.1.10";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6c230d73fb8d8c1b9c0b3135c5142a8acee3a0558fb8db5cf1cb65f8d7862132"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "regex-syntax" ]
        [ "std" ]
      ];
      dependencies = {
        regex_syntax = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.29" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".regex-automata."0.4.8" = overridableMkRustCrate (profileName: rec {
      name = "regex-automata";
      version = "0.4.8";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "368758f23274712b504848e9d5a6f010445cc8b87a7cdb4d7cbee666c1288da3"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "dfa" ]
        [ "dfa-build" ]
        [ "dfa-onepass" ]
        [ "dfa-search" ]
        [ "hybrid" ]
        [ "meta" ]
        [ "nfa" ]
        [ "nfa-backtrack" ]
        [ "nfa-pikevm" ]
        [ "nfa-thompson" ]
        [ "perf" ]
        [ "perf-inline" ]
        [ "perf-literal" ]
        [ "perf-literal-multisubstring" ]
        [ "perf-literal-substring" ]
        [ "std" ]
        [ "syntax" ]
        [ "unicode" ]
        [ "unicode-age" ]
        [ "unicode-bool" ]
        [ "unicode-case" ]
        [ "unicode-gencat" ]
        [ "unicode-perl" ]
        [ "unicode-script" ]
        [ "unicode-segment" ]
        [ "unicode-word-boundary" ]
      ];
      dependencies = {
        aho_corasick = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".aho-corasick."1.1.3" { inherit profileName; }).out;
        memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" { inherit profileName; }).out;
        regex_syntax = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.8.5" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.29" = overridableMkRustCrate (profileName: rec {
      name = "regex-syntax";
      version = "0.6.29";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f162c6dd7b008981e4d40210aca20b4bd0f9b60ca9271061b07f78537722f2e1"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "unicode" ]
        [ "unicode-age" ]
        [ "unicode-bool" ]
        [ "unicode-case" ]
        [ "unicode-gencat" ]
        [ "unicode-perl" ]
        [ "unicode-script" ]
        [ "unicode-segment" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.8.5" = overridableMkRustCrate (profileName: rec {
      name = "regex-syntax";
      version = "0.8.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2b15c43186be67a4fd63bee50d0303afffcef381492ebe2c5d87f324e1b8815c"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
        [ "unicode" ]
        [ "unicode-age" ]
        [ "unicode-bool" ]
        [ "unicode-case" ]
        [ "unicode-gencat" ]
        [ "unicode-perl" ]
        [ "unicode-script" ]
        [ "unicode-segment" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".rend."0.4.2" = overridableMkRustCrate (profileName: rec {
      name = "rend";
      version = "0.4.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "71fe3824f5629716b1589be05dacd749f6aa084c87e00e016714a8cdfccc997c"; };
      features = builtins.concatLists [
        [ "bytecheck" ]
        [ "std" ]
      ];
      dependencies = {
        bytecheck = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytecheck."0.6.12" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".renderdoc-sys."1.1.0" = overridableMkRustCrate (profileName: rec {
      name = "renderdoc-sys";
      version = "1.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "19b30a45b0cd0bcca8037f3d0dc3421eaf95327a17cad11964fb8179b4fc4832"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".reqwest."0.11.27" = overridableMkRustCrate (profileName: rec {
      name = "reqwest";
      version = "0.11.27";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "dd67538700a17451e7cba03ac727fb961abb7607553461627b97de0b89cf4a62"; };
      features = builtins.concatLists [
        [ "__tls" ]
        [ "default" ]
        [ "default-tls" ]
        [ "hyper-tls" ]
        [ "json" ]
        [ "native-tls-crate" ]
        [ "serde_json" ]
        [ "tokio-native-tls" ]
      ];
      dependencies = {
        base64 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.21.7" { inherit profileName; }).out;
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.8.0" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "encoding_rs" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".encoding_rs."0.8.35" { inherit profileName; }).out;
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.31" { inherit profileName; }).out;
        futures_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.31" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "h2" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".h2."0.3.26" { inherit profileName; }).out;
        http = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.12" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "http_body" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."0.4.6" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "hyper" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper."0.14.31" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "hyper_tls" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper-tls."0.5.0" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "ipnet" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ipnet."2.10.1" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "js_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.72" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "log" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "mime" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".mime."0.3.17" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "native_tls_crate" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".native-tls."0.2.12" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "once_cell" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "percent_encoding" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.3.1" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "pin_project_lite" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.15" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "rustls_pemfile" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls-pemfile."1.0.4" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        serde_json = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.132" { inherit profileName; }).out;
        serde_urlencoded = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_urlencoded."0.7.1" { inherit profileName; }).out;
        sync_wrapper = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sync_wrapper."0.1.2" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "darwin" then "system_configuration" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".system-configuration."0.5.1" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "tokio" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.41.0" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "tokio_native_tls" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-native-tls."0.3.1" { inherit profileName; }).out;
        tower_service = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-service."0.3.3" { inherit profileName; }).out;
        url = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.5.2" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "wasm_bindgen" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.95" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "wasm_bindgen_futures" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-futures."0.4.45" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "web_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.72" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "winreg" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winreg."0.50.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".reqwest."0.12.8" = overridableMkRustCrate (profileName: rec {
      name = "reqwest";
      version = "0.12.8";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f713147fbe92361e52392c73b8c9e48c04c6625bce969ef54dc901e58e042a7b"; };
      features = builtins.concatLists [
        [ "__rustls" ]
        [ "__rustls-ring" ]
        [ "__tls" ]
        [ "json" ]
        [ "multipart" ]
        [ "rustls-tls" ]
        [ "rustls-tls-webpki-roots" ]
        [ "stream" ]
      ];
      dependencies = {
        base64 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.22.1" { inherit profileName; }).out;
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.8.0" { inherit profileName; }).out;
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.31" { inherit profileName; }).out;
        futures_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.31" { inherit profileName; }).out;
        http = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."1.1.0" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "http_body" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."1.0.1" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "http_body_util" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body-util."0.1.2" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "hyper" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper."1.5.0" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "hyper_rustls" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper-rustls."0.27.3" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "hyper_util" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper-util."0.1.9" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "ipnet" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ipnet."2.10.1" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "js_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.72" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "log" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "mime" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".mime."0.3.17" { inherit profileName; }).out;
        mime_guess = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".mime_guess."2.0.5" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "once_cell" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "percent_encoding" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.3.1" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "pin_project_lite" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.15" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "quinn" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quinn."0.11.5" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "rustls" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls."0.23.15" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "rustls_pemfile" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls-pemfile."2.2.0" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "rustls_pki_types" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls-pki-types."1.10.0" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        serde_json = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.132" { inherit profileName; }).out;
        serde_urlencoded = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_urlencoded."0.7.1" { inherit profileName; }).out;
        sync_wrapper = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sync_wrapper."1.0.1" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "tokio" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.41.0" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "tokio_rustls" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-rustls."0.26.0" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "tokio_util" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-util."0.7.12" { inherit profileName; }).out;
        tower_service = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-service."0.3.3" { inherit profileName; }).out;
        url = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.5.2" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "wasm_bindgen" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.95" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "wasm_bindgen_futures" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-futures."0.4.45" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "wasm_streams" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-streams."0.4.2" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "web_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.72" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "webpki_roots" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".webpki-roots."0.26.6" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "windows_registry" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-registry."0.2.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".revision."0.10.0" = overridableMkRustCrate (profileName: rec {
      name = "revision";
      version = "0.10.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "22f53179a035f881adad8c4d58a2c599c6b4a8325b989c68d178d7a34d1b1e4c"; };
      features = builtins.concatLists [
        [ "chrono" ]
        [ "default" ]
        [ "geo" ]
        [ "regex" ]
        [ "roaring" ]
        [ "rust_decimal" ]
        [ "uuid" ]
      ];
      dependencies = {
        chrono = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.38" { inherit profileName; }).out;
        geo = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".geo."0.28.0" { inherit profileName; }).out;
        regex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.11.1" { inherit profileName; }).out;
        derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".revision-derive."0.10.0" { profileName = "__noProfile"; }).out;
        roaring = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".roaring."0.10.6" { inherit profileName; }).out;
        rust_decimal = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rust_decimal."1.36.0" { inherit profileName; }).out;
        uuid = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".uuid."1.11.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".revision-derive."0.10.0" = overridableMkRustCrate (profileName: rec {
      name = "revision-derive";
      version = "0.10.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "5f0ec466e5d8dca9965eb6871879677bef5590cf7525ad96cae14376efb75073"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ring."0.17.8" = overridableMkRustCrate (profileName: rec {
      name = "ring";
      version = "0.17.8";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c17fa4cb658e3583423e915b9f3acc01cceaee1860e33d59ebae66adc3a2dc0d"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "dev_urandom_fallback" ]
        [ "std" ]
        [ "wasm32_unknown_unknown_js" ]
      ];
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        getrandom = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.15" { inherit profileName; }).out;
        ${ if (hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "linux") && (hostPlatform.parsed.cpu.name == "aarch64" || hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l") then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "aarch64" || hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" then "spin" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".spin."0.9.8" { inherit profileName; }).out;
        untrusted = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".untrusted."0.9.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.kernel.name == "windows" then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.52.0" { inherit profileName; }).out;
      };
      buildDependencies = {
        cc = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.1.31" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rkyv."0.7.45" = overridableMkRustCrate (profileName: rec {
      name = "rkyv";
      version = "0.7.45";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9008cd6385b9e161d8229e1f6549dd23c3d022f132a2ea37ac3a10ac4935779b"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "hashbrown" ]
        [ "size_32" ]
        [ "std" ]
      ];
      dependencies = {
        bitvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitvec."1.0.1" { inherit profileName; }).out;
        bytecheck = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytecheck."0.6.12" { inherit profileName; }).out;
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.8.0" { inherit profileName; }).out;
        hashbrown = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.12.3" { inherit profileName; }).out;
        ptr_meta = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ptr_meta."0.1.4" { inherit profileName; }).out;
        rend = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rend."0.4.2" { inherit profileName; }).out;
        rkyv_derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rkyv_derive."0.7.45" { profileName = "__noProfile"; }).out;
        seahash = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".seahash."4.1.0" { inherit profileName; }).out;
        tinyvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tinyvec."1.8.0" { inherit profileName; }).out;
        uuid = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".uuid."1.11.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rkyv_derive."0.7.45" = overridableMkRustCrate (profileName: rec {
      name = "rkyv_derive";
      version = "0.7.45";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "503d1d27590a2b0a3a4ca4c94755aa2875657196ecbf401a42eff41d7de532c0"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rmp."0.8.14" = overridableMkRustCrate (profileName: rec {
      name = "rmp";
      version = "0.8.14";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "228ed7c16fa39782c3b3468e974aec2795e9089153cd08ee2e9aefb3613334c4"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        byteorder = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.5.0" { inherit profileName; }).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
        paste = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".paste."1.0.15" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rmpv."1.3.0" = overridableMkRustCrate (profileName: rec {
      name = "rmpv";
      version = "1.3.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "58450723cd9ee93273ce44a20b6ec4efe17f8ed2e3631474387bfdecf18bb2a9"; };
      dependencies = {
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
        rmp = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rmp."0.8.14" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".roaring."0.10.6" = overridableMkRustCrate (profileName: rec {
      name = "roaring";
      version = "0.10.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8f4b84ba6e838ceb47b41de5194a60244fac43d9fe03b71dbe8c5a201081d6d1"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "serde" ]
        [ "std" ]
      ];
      dependencies = {
        bytemuck = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytemuck."1.19.0" { inherit profileName; }).out;
        byteorder = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.5.0" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".robust."1.1.0" = overridableMkRustCrate (profileName: rec {
      name = "robust";
      version = "1.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "cbf4a6aa5f6d6888f39e980649f3ad6b666acdce1d78e95b8a2cb076e687ae30"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".roxmltree."0.20.0" = overridableMkRustCrate (profileName: rec {
      name = "roxmltree";
      version = "0.20.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6c20b6793b5c2fa6553b250154b78d6d0db37e72700ae35fad9387a46f487c97"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "positions" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".rstar."0.12.0" = overridableMkRustCrate (profileName: rec {
      name = "rstar";
      version = "0.12.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "133315eb94c7b1e8d0cb097e5a710d850263372fd028fff18969de708afc7008"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        heapless = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".heapless."0.8.0" { inherit profileName; }).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
        smallvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.13.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rust-ini."0.18.0" = overridableMkRustCrate (profileName: rec {
      name = "rust-ini";
      version = "0.18.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f6d5f2436026b4f6e79dc829837d467cc7e9a55ee40e750d716713540715a2df"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        ordered_multimap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ordered-multimap."0.4.3" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rust-ini."0.21.1" = overridableMkRustCrate (profileName: rec {
      name = "rust-ini";
      version = "0.21.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4e310ef0e1b6eeb79169a1171daf9abcb87a2e17c03bee2c4bb100b55c75409f"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        ordered_multimap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ordered-multimap."0.7.3" { inherit profileName; }).out;
        trim_in_place = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".trim-in-place."0.1.7" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rust-stemmers."1.2.0" = overridableMkRustCrate (profileName: rec {
      name = "rust-stemmers";
      version = "1.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e46a2036019fdb888131db7a4c847a1063a7493f971ed94ea82c67eada63ca54"; };
      dependencies = {
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        serde_derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.213" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rust_decimal."1.36.0" = overridableMkRustCrate (profileName: rec {
      name = "rust_decimal";
      version = "1.36.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b082d80e3e3cc52b2ed634388d436fe1f4de6af5786cc2de9ba9737527bdf555"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "maths" ]
        [ "serde" ]
        [ "serde-str" ]
        [ "serde-with-str" ]
        [ "std" ]
      ];
      dependencies = {
        arrayvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.7.4" { inherit profileName; }).out;
        borsh = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".borsh."1.5.1" { inherit profileName; }).out;
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.8.0" { inherit profileName; }).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
        rand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; }).out;
        rkyv = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rkyv."0.7.45" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        serde_json = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.132" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rustc-demangle."0.1.24" = overridableMkRustCrate (profileName: rec {
      name = "rustc-demangle";
      version = "0.1.24";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "719b953e2095829ee67db738b3bfa9fa368c94900df327b3f07fe6e794d2fe1f"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" = overridableMkRustCrate (profileName: rec {
      name = "rustc-hash";
      version = "1.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "08d43f7aa6b08d49f382cde6a7982047c3426db949b1424bc4b7ec9ae12c6ce2"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".rustc-hash."2.0.0" = overridableMkRustCrate (profileName: rec {
      name = "rustc-hash";
      version = "2.0.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "583034fd73374156e66797ed8e5b0d5690409c9226b22d87cb7f19821c05d152"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".rustc_lexer."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "rustc_lexer";
      version = "0.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c86aae0c77166108c01305ee1a36a1e77289d7dc6ca0a3cd91ff4992de2d16a5"; };
      dependencies = {
        unicode_xid = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.2.6" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rustc_version."0.4.1" = overridableMkRustCrate (profileName: rec {
      name = "rustc_version";
      version = "0.4.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "cfcb3a22ef46e85b45de6ee7e79d063319ebb6594faafcf1c225ea92ab6e9b92"; };
      dependencies = {
        semver = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".semver."1.0.23" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rustix."0.38.37" = overridableMkRustCrate (profileName: rec {
      name = "rustix";
      version = "0.38.37";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8acb788b847c24f28525660c4d7758620a7210875711f79e7f663cc152726811"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "event" ]
        [ "fs" ]
        [ "libc-extra-traits" ]
        [ "mm" ]
        [ "net" ]
        [ "pipe" ]
        [ "process" ]
        [ "shm" ]
        [ "std" ]
        [ "system" ]
        [ "thread" ]
        [ "time" ]
        [ "use-libc-auxv" ]
      ];
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "linux" && hostPlatform.parsed.cpu.significantByte == "littleEndian" && (hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.cpu.bits == 64 || hostPlatform.parsed.cpu.name == "riscv64" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.cpu.bits == 64) || !hostPlatform.isWindows && !(hostPlatform.parsed.kernel.name == "linux" && hostPlatform.parsed.cpu.significantByte == "littleEndian" && (hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.cpu.bits == 64 || hostPlatform.parsed.cpu.name == "riscv64" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.cpu.bits == 64)) || hostPlatform.isWindows then "libc_errno" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".errno."0.3.9" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "linux" && hostPlatform.parsed.cpu.significantByte == "littleEndian" && (hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.cpu.bits == 64 || hostPlatform.parsed.cpu.name == "riscv64" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.cpu.bits == 64) || !hostPlatform.isWindows && !(hostPlatform.parsed.kernel.name == "linux" && hostPlatform.parsed.cpu.significantByte == "littleEndian" && (hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.cpu.bits == 64 || hostPlatform.parsed.cpu.name == "riscv64" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.cpu.bits == 64)) then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "linux" && hostPlatform.parsed.cpu.significantByte == "littleEndian" && (hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.cpu.bits == 64 || hostPlatform.parsed.cpu.name == "riscv64" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.cpu.bits == 64) || (hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "linux") && !(hostPlatform.parsed.kernel.name == "linux" && hostPlatform.parsed.cpu.significantByte == "littleEndian" && (hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.cpu.bits == 64 || hostPlatform.parsed.cpu.name == "riscv64" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.cpu.bits == 64)) then "linux_raw_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".linux-raw-sys."0.4.14" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.52.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rustls."0.23.15" = overridableMkRustCrate (profileName: rec {
      name = "rustls";
      version = "0.23.15";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "5fbb44d7acc4e873d613422379f69f237a1b141928c02f6bc6ccfddddc2d7993"; };
      features = builtins.concatLists [
        [ "log" ]
        [ "logging" ]
        [ "ring" ]
        [ "std" ]
        [ "tls12" ]
      ];
      dependencies = {
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
        ring = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ring."0.17.8" { inherit profileName; }).out;
        pki_types = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls-pki-types."1.10.0" { inherit profileName; }).out;
        webpki = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls-webpki."0.102.8" { inherit profileName; }).out;
        subtle = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".subtle."2.6.1" { inherit profileName; }).out;
        zeroize = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".zeroize."1.8.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rustls-pemfile."1.0.4" = overridableMkRustCrate (profileName: rec {
      name = "rustls-pemfile";
      version = "1.0.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1c74cae0a4cf6ccbbf5f359f08efdf8ee7e1dc532573bf0db71968cb56b1448c"; };
      dependencies = {
        base64 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.21.7" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rustls-pemfile."2.2.0" = overridableMkRustCrate (profileName: rec {
      name = "rustls-pemfile";
      version = "2.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "dce314e5fee3f39953d46bb63bb8a46d40c2f8fb7cc5a3b6cab2bde9721d6e50"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        pki_types = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls-pki-types."1.10.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rustls-pki-types."1.10.0" = overridableMkRustCrate (profileName: rec {
      name = "rustls-pki-types";
      version = "1.10.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "16f1201b3c9a7ee8039bcadc17b7e605e2945b27eee7631788c1bd2b0643674b"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "std" ]
        [ "web" ]
        [ "web-time" ]
      ];
      dependencies = {
        ${ if false then "web_time" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".web-time."1.1.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rustls-webpki."0.102.8" = overridableMkRustCrate (profileName: rec {
      name = "rustls-webpki";
      version = "0.102.8";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "64ca1bc8749bd4cf37b5ce386cc146580777b4e8572c7b97baf22c83f444bee9"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "ring" ]
        [ "std" ]
      ];
      dependencies = {
        ring = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ring."0.17.8" { inherit profileName; }).out;
        pki_types = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls-pki-types."1.10.0" { inherit profileName; }).out;
        untrusted = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".untrusted."0.9.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rustversion."1.0.18" = overridableMkRustCrate (profileName: rec {
      name = "rustversion";
      version = "1.0.18";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0e819f2bc632f285be6d7cd36e25940d45b2391dd6d9b939e79de557f7014248"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rustybuzz."0.14.1" = overridableMkRustCrate (profileName: rec {
      name = "rustybuzz";
      version = "0.14.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "cfb9cf8877777222e4a3bc7eb247e398b56baba500c38c1c46842431adc8b55c"; };
      features = builtins.concatLists [
        [ "libm" ]
        [ "std" ]
      ];
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        bytemuck = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytemuck."1.19.0" { inherit profileName; }).out;
        libm = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libm."0.2.8" { inherit profileName; }).out;
        smallvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.13.2" { inherit profileName; }).out;
        ttf_parser = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ttf-parser."0.21.1" { inherit profileName; }).out;
        unicode_bidi_mirroring = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-bidi-mirroring."0.2.0" { inherit profileName; }).out;
        unicode_ccc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-ccc."0.2.0" { inherit profileName; }).out;
        unicode_properties = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-properties."0.1.3" { inherit profileName; }).out;
        unicode_script = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-script."0.5.7" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.18" = overridableMkRustCrate (profileName: rec {
      name = "ryu";
      version = "1.0.18";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".safetensors."0.4.5" = overridableMkRustCrate (profileName: rec {
      name = "safetensors";
      version = "0.4.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "44560c11236a6130a46ce36c836a62936dc81ebf8c36a37947423571be0e55b6"; };
      dependencies = {
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        serde_json = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.132" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".salsa20."0.10.2" = overridableMkRustCrate (profileName: rec {
      name = "salsa20";
      version = "0.10.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "97a22f5af31f73a954c10289c93e8a50cc23d971e80ee446f1f6f7137a088213"; };
      dependencies = {
        cipher = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cipher."0.4.4" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".same-file."1.0.6" = overridableMkRustCrate (profileName: rec {
      name = "same-file";
      version = "1.0.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502"; };
      dependencies = {
        ${ if hostPlatform.isWindows then "winapi_util" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.9" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".schannel."0.1.26" = overridableMkRustCrate (profileName: rec {
      name = "schannel";
      version = "0.1.26";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "01227be5826fa0690321a2ba6c5cd57a19cf3f6a09e76973b58e61de6ab9d1c1"; };
      dependencies = {
        windows_sys = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.59.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".schemars."0.8.21" = overridableMkRustCrate (profileName: rec {
      name = "schemars";
      version = "0.8.21";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "09c024468a378b7e36765cd36702b7a90cc3cba11654f6685c8f233408e89e92"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "derive" ]
        [ "indexmap" ]
        [ "preserve_order" ]
        [ "schemars_derive" ]
      ];
      dependencies = {
        dyn_clone = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dyn-clone."1.0.17" { inherit profileName; }).out;
        indexmap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."1.9.3" { inherit profileName; }).out;
        schemars_derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".schemars_derive."0.8.21" { profileName = "__noProfile"; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        serde_json = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.132" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".schemars_derive."0.8.21" = overridableMkRustCrate (profileName: rec {
      name = "schemars_derive";
      version = "0.8.21";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b1eee588578aff73f856ab961cd2f79e36bc45d7ded33a7562adba4667aecc0e"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        serde_derive_internals = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive_internals."0.29.1" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".scoped-tls."1.0.1" = overridableMkRustCrate (profileName: rec {
      name = "scoped-tls";
      version = "1.0.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e1cf6437eb19a8f4a6cc0f7dca544973b0b78843adbfeb3683d1a94a0024a294"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".scopeguard."1.2.0" = overridableMkRustCrate (profileName: rec {
      name = "scopeguard";
      version = "1.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".scrypt."0.11.0" = overridableMkRustCrate (profileName: rec {
      name = "scrypt";
      version = "0.11.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0516a385866c09368f0b5bcd1caff3366aace790fcd46e2bb032697bb172fd1f"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "password-hash" ]
        [ "simple" ]
        [ "std" ]
      ];
      dependencies = {
        password_hash = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".password-hash."0.5.0" { inherit profileName; }).out;
        pbkdf2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pbkdf2."0.12.2" { inherit profileName; }).out;
        salsa20 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".salsa20."0.10.2" { inherit profileName; }).out;
        sha2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha2."0.10.8" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".sctk-adwaita."0.10.1" = overridableMkRustCrate (profileName: rec {
      name = "sctk-adwaita";
      version = "0.10.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b6277f0217056f77f1d8f49f2950ac6c278c0d607c45f5ee99328d792ede24ec"; };
      features = builtins.concatLists [
        [ "ab_glyph" ]
        [ "memmap2" ]
      ];
      dependencies = {
        ab_glyph = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ab_glyph."0.2.29" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        memmap2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memmap2."0.9.5" { inherit profileName; }).out;
        smithay_client_toolkit = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".smithay-client-toolkit."0.19.2" { inherit profileName; }).out;
        tiny_skia = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tiny-skia."0.11.4" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".seahash."4.1.0" = overridableMkRustCrate (profileName: rec {
      name = "seahash";
      version = "4.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1c107b6f4780854c8b126e228ea8869f4d7b71260f962fefb57b996b8959ba6b"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".security-framework."2.11.1" = overridableMkRustCrate (profileName: rec {
      name = "security-framework";
      version = "2.11.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "897b2245f0b511c87893af39b033e5ca9cce68824c4d7e7630b5a1d339658d02"; };
      features = builtins.concatLists [
        [ "OSX_10_10" ]
        [ "OSX_10_11" ]
        [ "OSX_10_12" ]
        [ "OSX_10_9" ]
        [ "default" ]
      ];
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        core_foundation = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation."0.9.4" { inherit profileName; }).out;
        core_foundation_sys = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.8.7" { inherit profileName; }).out;
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        security_framework_sys = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".security-framework-sys."2.12.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".security-framework-sys."2.12.0" = overridableMkRustCrate (profileName: rec {
      name = "security-framework-sys";
      version = "2.12.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ea4a292869320c0272d7bc55a5a6aafaff59b4f63404a003887b679a2e05b4b6"; };
      features = builtins.concatLists [
        [ "OSX_10_10" ]
        [ "OSX_10_11" ]
        [ "OSX_10_12" ]
        [ "OSX_10_9" ]
        [ "default" ]
      ];
      dependencies = {
        core_foundation_sys = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.8.7" { inherit profileName; }).out;
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".self_cell."1.0.4" = overridableMkRustCrate (profileName: rec {
      name = "self_cell";
      version = "1.0.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d369a96f978623eb3dc28807c4852d6cc617fed53da5d3c400feff1ef34a714a"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".semver."1.0.23" = overridableMkRustCrate (profileName: rec {
      name = "semver";
      version = "1.0.23";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "61697e0a1c7e512e84a621326239844a24d8207b4669b41bc18b32ea5cbf988b"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "serde" ]
        [ "std" ]
      ];
      dependencies = {
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".send_wrapper."0.6.0" = overridableMkRustCrate (profileName: rec {
      name = "send_wrapper";
      version = "0.6.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "cd0b0ec5f1c1ca621c432a25813d8d60c88abe6d3e08a3eb9cf37d97a0fe3d73"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".seq-macro."0.3.5" = overridableMkRustCrate (profileName: rec {
      name = "seq-macro";
      version = "0.3.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a3f0bf26fd526d2a95683cd0f87bf103b8539e2ca1ef48ce002d67aad59aa0b4"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" = overridableMkRustCrate (profileName: rec {
      name = "serde";
      version = "1.0.213";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3ea7893ff5e2466df8d720bb615088341b295f849602c6956047f8f80f0e9bc1"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "derive" ]
        [ "rc" ]
        [ "serde_derive" ]
        [ "std" ]
      ];
      dependencies = {
        serde_derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.213" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".serde-content."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "serde-content";
      version = "0.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e255eaf9f3814135df4f959c9f404ebb2e67238bae0ed412da10518d0629e7c9"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "derive" ]
        [ "serde" ]
        [ "std" ]
      ];
      dependencies = {
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.213" = overridableMkRustCrate (profileName: rec {
      name = "serde_derive";
      version = "1.0.213";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7e85ad2009c50b58e87caa8cd6dac16bdf511bbfb7af6c33df902396aa480fa5"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".serde_derive_internals."0.29.1" = overridableMkRustCrate (profileName: rec {
      name = "serde_derive_internals";
      version = "0.29.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "18d26a20a969b9e3fdf2fc2d9f21eda6c40e2de84c9408bb5d3b05d499aae711"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.132" = overridableMkRustCrate (profileName: rec {
      name = "serde_json";
      version = "1.0.132";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d726bfaff4b320266d395898905d0eba0345aae23b54aee3a737e260fd46db03"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "indexmap" ]
        [ "preserve_order" ]
        [ "std" ]
      ];
      dependencies = {
        indexmap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."2.6.0" { inherit profileName; }).out;
        itoa = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.11" { inherit profileName; }).out;
        memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" { inherit profileName; }).out;
        ryu = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.18" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".serde_plain."1.0.2" = overridableMkRustCrate (profileName: rec {
      name = "serde_plain";
      version = "1.0.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9ce1fc6db65a611022b23a0dec6975d63fb80a302cb3388835ff02c097258d50"; };
      dependencies = {
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".serde_repr."0.1.19" = overridableMkRustCrate (profileName: rec {
      name = "serde_repr";
      version = "0.1.19";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6c64451ba24fc7a6a2d60fc75dd9c83c90903b19028d4eff35e88fc1e86564e9"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".serde_spanned."0.6.8" = overridableMkRustCrate (profileName: rec {
      name = "serde_spanned";
      version = "0.6.8";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "87607cb1398ed59d48732e575a4c28a7a8ebf2454b964fe3f224f2afc07909e1"; };
      features = builtins.concatLists [
        [ "serde" ]
      ];
      dependencies = {
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".serde_urlencoded."0.7.1" = overridableMkRustCrate (profileName: rec {
      name = "serde_urlencoded";
      version = "0.7.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d3491c14715ca2294c4d6a88f15e84739788c1d030eed8c110436aafdaa2f3fd"; };
      dependencies = {
        form_urlencoded = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".form_urlencoded."1.2.1" { inherit profileName; }).out;
        itoa = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.11" { inherit profileName; }).out;
        ryu = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.18" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".serde_with."3.11.0" = overridableMkRustCrate (profileName: rec {
      name = "serde_with";
      version = "3.11.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8e28bdad6db2b8340e449f7108f020b3b092e8583a9e3fb82713e1d4e71fe817"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "json" ]
        [ "macros" ]
        [ "std" ]
      ];
      dependencies = {
        base64 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.22.1" { inherit profileName; }).out;
        chrono_0_4 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.38" { inherit profileName; }).out;
        hex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hex."0.4.3" { inherit profileName; }).out;
        indexmap_1 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."1.9.3" { inherit profileName; }).out;
        indexmap_2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."2.6.0" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        serde_derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.213" { profileName = "__noProfile"; }).out;
        serde_json = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.132" { inherit profileName; }).out;
        serde_with_macros = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_with_macros."3.11.0" { profileName = "__noProfile"; }).out;
        time_0_3 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.3.36" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".serde_with_macros."3.11.0" = overridableMkRustCrate (profileName: rec {
      name = "serde_with_macros";
      version = "3.11.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9d846214a9854ef724f3da161b426242d8de7c1fc7de2f89bb1efcb154dca79d"; };
      dependencies = {
        darling = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".darling."0.20.10" { inherit profileName; }).out;
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".serde_yaml."0.9.34+deprecated" = overridableMkRustCrate (profileName: rec {
      name = "serde_yaml";
      version = "0.9.34+deprecated";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6a8b1a1a2ebf674015cc02edccce75287f1a0130d394307b36743c2f5d504b47"; };
      dependencies = {
        indexmap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."2.6.0" { inherit profileName; }).out;
        itoa = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.11" { inherit profileName; }).out;
        ryu = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.18" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        unsafe_libyaml = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unsafe-libyaml."0.2.11" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".sha1."0.10.6" = overridableMkRustCrate (profileName: rec {
      name = "sha1";
      version = "0.10.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e3bf829a2d51ab4a5ddf1352d8470c140cadc8301b2ae1789db023f01cedd6ba"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "aarch64" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" then "cpufeatures" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cpufeatures."0.2.14" { inherit profileName; }).out;
        digest = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.10.7" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".sha2."0.10.8" = overridableMkRustCrate (profileName: rec {
      name = "sha2";
      version = "0.10.8";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "793db75ad2bcafc3ffa7c68b215fee268f537982cd901d132f89c6343f3a3dc8"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "aarch64" || hostPlatform.parsed.cpu.name == "x86_64" || hostPlatform.parsed.cpu.name == "i686" then "cpufeatures" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cpufeatures."0.2.14" { inherit profileName; }).out;
        digest = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.10.7" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".sharded-slab."0.1.7" = overridableMkRustCrate (profileName: rec {
      name = "sharded-slab";
      version = "0.1.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f40ca3c46823713e0d4209592e8d6e826aa57e928f09752619fc696c499637f6"; };
      dependencies = {
        lazy_static = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.5.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".shellexpand."3.1.0" = overridableMkRustCrate (profileName: rec {
      name = "shellexpand";
      version = "3.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "da03fa3b94cc19e3ebfc88c4229c49d8f08cdbd1228870a45f0ffdf84988e14b"; };
      features = builtins.concatLists [
        [ "base-0" ]
        [ "default" ]
        [ "dirs" ]
        [ "tilde" ]
      ];
      dependencies = {
        dirs = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dirs."5.0.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".shlex."1.3.0" = overridableMkRustCrate (profileName: rec {
      name = "shlex";
      version = "1.3.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".signal-hook-registry."1.4.2" = overridableMkRustCrate (profileName: rec {
      name = "signal-hook-registry";
      version = "1.4.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a9e9e0b4211b72e7b8b6e85c807d36c212bdb33ea8587f7569562a84df5465b1"; };
      dependencies = {
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".simd-adler32."0.3.7" = overridableMkRustCrate (profileName: rec {
      name = "simd-adler32";
      version = "0.3.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d66dc143e6b11c1eddc06d5c423cfc97062865baf299914ab64caa38182078fe"; };
      features = builtins.concatLists [
        [ "const-generics" ]
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".simdutf8."0.1.5" = overridableMkRustCrate (profileName: rec {
      name = "simdutf8";
      version = "0.1.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e3a9fe34e3e7a50316060351f37187a3f546bce95496156754b601a5fa71b76e"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".simple_asn1."0.6.2" = overridableMkRustCrate (profileName: rec {
      name = "simple_asn1";
      version = "0.6.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "adc4e5204eb1910f40f9cfa375f6f05b68c3abac4b6fd879c8ff5e7ae8a0a085"; };
      dependencies = {
        num_bigint = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-bigint."0.4.6" { inherit profileName; }).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
        time = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.3.36" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".siphasher."0.3.11" = overridableMkRustCrate (profileName: rec {
      name = "siphasher";
      version = "0.3.11";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "38b58827f4464d87d377d175e90bf58eb00fd8716ff0a62f80356b5e61555d0d"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".skrifa."0.22.3" = overridableMkRustCrate (profileName: rec {
      name = "skrifa";
      version = "0.22.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8e1c44ad1f6c5bdd4eefed8326711b7dbda9ea45dfd36068c427d332aa382cbe"; };
      features = builtins.concatLists [
        [ "autohint_shaping" ]
        [ "default" ]
        [ "std" ]
        [ "traversal" ]
      ];
      dependencies = {
        bytemuck = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytemuck."1.19.0" { inherit profileName; }).out;
        read_fonts = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".read-fonts."0.22.5" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".slab."0.4.9" = overridableMkRustCrate (profileName: rec {
      name = "slab";
      version = "0.4.9";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      buildDependencies = {
        autocfg = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.4.0" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".slotmap."1.0.7" = overridableMkRustCrate (profileName: rec {
      name = "slotmap";
      version = "1.0.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "dbff4acf519f630b3a3ddcfaea6c06b42174d9a44bc70c620e9ed1649d58b82a"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      buildDependencies = {
        version_check = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.5" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".smallvec."1.13.2" = overridableMkRustCrate (profileName: rec {
      name = "smallvec";
      version = "1.13.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67"; };
      features = builtins.concatLists [
        [ "const_generics" ]
        [ "const_new" ]
        [ "union" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".smithay-client-toolkit."0.19.2" = overridableMkRustCrate (profileName: rec {
      name = "smithay-client-toolkit";
      version = "0.19.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3457dea1f0eb631b4034d61d4d8c32074caa6cd1ab2d59f2327bd8461e2c0016"; };
      features = builtins.concatLists [
        [ "calloop" ]
        [ "calloop-wayland-source" ]
      ];
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        calloop = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".calloop."0.13.0" { inherit profileName; }).out;
        calloop_wayland_source = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".calloop-wayland-source."0.3.0" { inherit profileName; }).out;
        cursor_icon = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cursor-icon."1.1.0" { inherit profileName; }).out;
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        memmap2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memmap2."0.9.5" { inherit profileName; }).out;
        rustix = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustix."0.38.37" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
        wayland_backend = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wayland-backend."0.3.7" { inherit profileName; }).out;
        wayland_client = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wayland-client."0.31.7" { inherit profileName; }).out;
        wayland_csd_frame = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wayland-csd-frame."0.3.0" { inherit profileName; }).out;
        wayland_cursor = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wayland-cursor."0.31.7" { inherit profileName; }).out;
        wayland_protocols = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wayland-protocols."0.32.5" { inherit profileName; }).out;
        wayland_protocols_wlr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wayland-protocols-wlr."0.3.5" { inherit profileName; }).out;
        wayland_scanner = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".wayland-scanner."0.31.5" { profileName = "__noProfile"; }).out;
        xkeysym = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".xkeysym."0.2.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".smithay-clipboard."0.7.2" = overridableMkRustCrate (profileName: rec {
      name = "smithay-clipboard";
      version = "0.7.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "cc8216eec463674a0e90f29e0ae41a4db573ec5b56b1c6c1c71615d249b6d846"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "dlopen" ]
      ];
      dependencies = {
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        sctk = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".smithay-client-toolkit."0.19.2" { inherit profileName; }).out;
        wayland_backend = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wayland-backend."0.3.7" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".smol_str."0.2.2" = overridableMkRustCrate (profileName: rec {
      name = "smol_str";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "dd538fb6910ac1099850255cf94a94df6551fbdd602454387d0adb2d1ca6dead"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "serde" ]
        [ "std" ]
      ];
      dependencies = {
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".snafu."0.7.5" = overridableMkRustCrate (profileName: rec {
      name = "snafu";
      version = "0.7.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e4de37ad025c587a29e8f3f5605c00f70b98715ef90b9061a815b9e59e9042d6"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "rust_1_39" ]
        [ "rust_1_46" ]
        [ "std" ]
      ];
      dependencies = {
        doc_comment = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".doc-comment."0.3.3" { inherit profileName; }).out;
        snafu_derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".snafu-derive."0.7.5" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".snafu-derive."0.7.5" = overridableMkRustCrate (profileName: rec {
      name = "snafu-derive";
      version = "0.7.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "990079665f075b699031e9c08fd3ab99be5029b96f3b78dc0709e8f77e4efebf"; };
      features = builtins.concatLists [
        [ "rust_1_39" ]
        [ "rust_1_46" ]
      ];
      dependencies = {
        heck = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".heck."0.4.1" { inherit profileName; }).out;
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".snap."1.1.1" = overridableMkRustCrate (profileName: rec {
      name = "snap";
      version = "1.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1b6b67fb9a61334225b5b790716f609cd58395f895b3fe8b328786812a40bc3b"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".socket2."0.5.7" = overridableMkRustCrate (profileName: rec {
      name = "socket2";
      version = "0.5.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ce305eb0b4296696835b71df73eb912e0f1ffd2556a501fcede6e0c50349191c"; };
      features = builtins.concatLists [
        [ "all" ]
      ];
      dependencies = {
        ${ if hostPlatform.isUnix then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.52.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".softbuffer."0.4.6" = overridableMkRustCrate (profileName: rec {
      name = "softbuffer";
      version = "0.4.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "18051cdd562e792cad055119e0cdb2cfc137e44e3987532e0f9659a77931bb08"; };
      features = builtins.concatLists [
        [ "as-raw-xcb-connection" ]
        [ "bytemuck" ]
        [ "default" ]
        [ "drm" ]
        [ "fastrand" ]
        [ "kms" ]
        [ "memmap2" ]
        [ "rustix" ]
        [ "tiny-xlib" ]
        [ "wayland" ]
        [ "wayland-backend" ]
        [ "wayland-client" ]
        [ "wayland-dlopen" ]
        [ "wayland-sys" ]
        [ "x11" ]
        [ "x11-dlopen" ]
        [ "x11rb" ]
      ];
      dependencies = {
        ${ if hostPlatform.isUnix && !(hostPlatform.parsed.vendor.name == "apple" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "redox") then "as_raw_xcb_connection" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".as-raw-xcb-connection."1.0.1" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix && !(hostPlatform.parsed.vendor.name == "apple" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "redox") || hostPlatform.parsed.vendor.name == "apple" then "bytemuck" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytemuck."1.19.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.vendor.name == "apple" then "core_graphics" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-graphics."0.24.0" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix && !(hostPlatform.parsed.vendor.name == "apple" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "redox") then "drm" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".drm."0.12.0" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix && !(hostPlatform.parsed.vendor.name == "apple" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "redox") then "fastrand" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".fastrand."2.1.1" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.vendor.name == "apple" then "foreign_types" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".foreign-types."0.5.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "js_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.72" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix && !(hostPlatform.parsed.vendor.name == "apple" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "redox") then "memmap2" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memmap2."0.9.5" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.vendor.name == "apple" then "objc2" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2."0.5.2" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.vendor.name == "apple" then "objc2_foundation" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-foundation."0.2.2" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.vendor.name == "apple" then "objc2_quartz_core" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-quartz-core."0.2.2" { inherit profileName; }).out;
        raw_window_handle = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".raw-window-handle."0.6.2" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.5.7" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix && !(hostPlatform.parsed.vendor.name == "apple" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "redox") then "rustix" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustix."0.38.37" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix && !(hostPlatform.parsed.vendor.name == "apple" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "redox") then "tiny_xlib" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tiny-xlib."0.2.3" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "wasm_bindgen" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.95" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix && !(hostPlatform.parsed.vendor.name == "apple" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "redox") then "wayland_backend" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wayland-backend."0.3.7" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix && !(hostPlatform.parsed.vendor.name == "apple" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "redox") then "wayland_client" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wayland-client."0.31.7" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix && !(hostPlatform.parsed.vendor.name == "apple" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "redox") then "wayland_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wayland-sys."0.31.5" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "web_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.72" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "windows" then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.59.0" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix && !(hostPlatform.parsed.vendor.name == "apple" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "redox") then "x11rb" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".x11rb."0.13.1" { inherit profileName; }).out;
      };
      buildDependencies = {
        cfg_aliases = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg_aliases."0.2.1" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".spade."2.12.1" = overridableMkRustCrate (profileName: rec {
      name = "spade";
      version = "2.12.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "93f5ef1f863aca7d1d7dda7ccfc36a0a4279bd6d3c375176e5e0712e25cb4889"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        hashbrown = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.14.5" { inherit profileName; }).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
        robust = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".robust."1.1.0" { inherit profileName; }).out;
        smallvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.13.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".spin."0.9.8" = overridableMkRustCrate (profileName: rec {
      name = "spin";
      version = "0.9.8";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6980e8d7511241f8acf4aebddbb1ff938df5eebe98691418c4468d0b72a96a67"; };
      features = builtins.concatLists [
        [ "barrier" ]
        [ "default" ]
        [ "lazy" ]
        [ "lock_api" ]
        [ "lock_api_crate" ]
        [ "mutex" ]
        [ "once" ]
        [ "rwlock" ]
        [ "spin_mutex" ]
      ];
      dependencies = {
        lock_api_crate = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".lock_api."0.4.12" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".spirv."0.3.0+sdk-1.3.268.0" = overridableMkRustCrate (profileName: rec {
      name = "spirv";
      version = "0.3.0+sdk-1.3.268.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "eda41003dc44290527a59b13432d4a0379379fa074b70174882adfbdfd917844"; };
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".spm_precompiled."0.1.4" = overridableMkRustCrate (profileName: rec {
      name = "spm_precompiled";
      version = "0.1.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "5851699c4033c63636f7ea4cf7b7c1f1bf06d0cc03cfb42e711de5a5c46cf326"; };
      dependencies = {
        base64 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.13.1" { inherit profileName; }).out;
        nom = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".nom."7.1.3" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        unicode_segmentation = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-segmentation."1.12.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".sqlparser."0.49.0" = overridableMkRustCrate (profileName: rec {
      name = "sqlparser";
      version = "0.49.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a4a404d0e14905361b918cb8afdb73605e25c1d5029312bd9785142dcb3aa49e"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".stable_deref_trait."1.2.0" = overridableMkRustCrate (profileName: rec {
      name = "stable_deref_trait";
      version = "1.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a8f112729512f8e442d81f95a8a7ddf2b7c6b8a1a6f509a95864142b30cab2d3"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".stacker."0.1.17" = overridableMkRustCrate (profileName: rec {
      name = "stacker";
      version = "0.1.17";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "799c883d55abdb5e98af1a7b3f23b9b6de8ecada0ecac058672d7635eb48ca7b"; };
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        psm = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".psm."0.1.23" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.59.0" { inherit profileName; }).out;
      };
      buildDependencies = {
        cc = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.1.31" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".static_assertions."1.1.0" = overridableMkRustCrate (profileName: rec {
      name = "static_assertions";
      version = "1.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a2eb9349b6444b326872e140eb1cf5e7c522154d69e7a0ffb0fb81c06b37543f"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".static_assertions_next."1.1.2" = overridableMkRustCrate (profileName: rec {
      name = "static_assertions_next";
      version = "1.1.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d7beae5182595e9a8b683fa98c4317f956c9a2dec3b9716990d20023cc60c766"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".storekey."0.5.0" = overridableMkRustCrate (profileName: rec {
      name = "storekey";
      version = "0.5.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "43c42833834a5d23b344f71d87114e0cc9994766a5c42938f4b50e7b2aef85b2"; };
      dependencies = {
        byteorder = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.5.0" { inherit profileName; }).out;
        memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".strict-num."0.1.1" = overridableMkRustCrate (profileName: rec {
      name = "strict-num";
      version = "0.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6637bab7722d379c8b41ba849228d680cc12d0a45ba1fa2b48f2a30577a06731"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".string_cache."0.8.7" = overridableMkRustCrate (profileName: rec {
      name = "string_cache";
      version = "0.8.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f91138e76242f575eb1d3b38b4f1362f10d3a43f47d182a5b359af488a02293b"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "serde" ]
        [ "serde_support" ]
      ];
      dependencies = {
        debug_unreachable = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".new_debug_unreachable."1.0.6" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
        parking_lot = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.12.3" { inherit profileName; }).out;
        phf_shared = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_shared."0.10.0" { inherit profileName; }).out;
        precomputed_hash = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".precomputed-hash."0.1.1" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".string_cache_codegen."0.5.2" = overridableMkRustCrate (profileName: rec {
      name = "string_cache_codegen";
      version = "0.5.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6bb30289b722be4ff74a408c3cc27edeaad656e06cb1fe8fa9231fa59c728988"; };
      dependencies = {
        phf_generator = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_generator."0.10.0" { inherit profileName; }).out;
        phf_shared = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_shared."0.10.0" { inherit profileName; }).out;
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".strsim."0.11.1" = overridableMkRustCrate (profileName: rec {
      name = "strsim";
      version = "0.11.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7da8b5736845d9f2fcb837ea5d9e2628564b3b043a70948a3f0b778838c5fb4f"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".strum."0.26.3" = overridableMkRustCrate (profileName: rec {
      name = "strum";
      version = "0.26.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8fec0f0aef304996cf250b31b5a10dee7980c85da9d759361292b8bca5a18f06"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "derive" ]
        [ "std" ]
        [ "strum_macros" ]
      ];
      dependencies = {
        strum_macros = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".strum_macros."0.26.4" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".strum_macros."0.26.4" = overridableMkRustCrate (profileName: rec {
      name = "strum_macros";
      version = "0.26.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4c6bee85a5a24955dc440386795aa378cd9cf82acd5f764469152d2270e581be"; };
      dependencies = {
        heck = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".heck."0.5.0" { inherit profileName; }).out;
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        rustversion = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustversion."1.0.18" { profileName = "__noProfile"; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".subtle."2.6.1" = overridableMkRustCrate (profileName: rec {
      name = "subtle";
      version = "2.6.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "13c2bddecc57b384dee18652358fb23172facb8a2c51ccc10d74c157bdea3292"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "i128" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".surrealdb."2.0.4" = overridableMkRustCrate (profileName: rec {
      name = "surrealdb";
      version = "2.0.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "300749e641e2a5546a142333d91b3537969e9c4cbd1fa2d1d10d92f01624d470"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "jwks" ]
        [ "protocol-http" ]
        [ "protocol-ws" ]
        [ "rustls" ]
      ];
      dependencies = {
        arrayvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.7.4" { inherit profileName; }).out;
        channel = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-channel."1.9.0" { inherit profileName; }).out;
        bincode = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bincode."1.3.3" { inherit profileName; }).out;
        chrono = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.38" { inherit profileName; }).out;
        dmp = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dmp."0.2.0" { inherit profileName; }).out;
        futures = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.31" { inherit profileName; }).out;
        geo = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".geo."0.28.0" { inherit profileName; }).out;
        indexmap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."2.6.0" { inherit profileName; }).out;
        path_clean = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".path-clean."1.0.1" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "pharos" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pharos."0.5.3" { inherit profileName; }).out;
        reblessive = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".reblessive."0.4.1" { inherit profileName; }).out;
        reqwest = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".reqwest."0.12.8" { inherit profileName; }).out;
        revision = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".revision."0.10.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "ring" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ring."0.17.8" { inherit profileName; }).out;
        rust_decimal = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rust_decimal."1.36.0" { inherit profileName; }).out;
        rustls = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls."0.23.15" { inherit profileName; }).out;
        rustls_pki_types = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls-pki-types."1.10.0" { inherit profileName; }).out;
        semver = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".semver."1.0.23" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        serde_content = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde-content."0.1.0" { inherit profileName; }).out;
        serde_json = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.132" { inherit profileName; }).out;
        surrealdb_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".surrealdb-core."2.0.4" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") || hostPlatform.parsed.cpu.name == "wasm32" then "tokio" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.41.0" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "tokio_tungstenite" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-tungstenite."0.23.1" { inherit profileName; }).out;
        tokio_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-util."0.7.12" { inherit profileName; }).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
        trice = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".trice."0.4.0" { inherit profileName; }).out;
        url = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.5.2" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") || hostPlatform.parsed.cpu.name == "wasm32" then "uuid" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".uuid."1.11.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "wasm_bindgen_futures" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-futures."0.4.45" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "wasmtimer" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasmtimer."0.2.1" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "ws_stream_wasm" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ws_stream_wasm."0.7.4" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".surrealdb-core."2.0.4" = overridableMkRustCrate (profileName: rec {
      name = "surrealdb-core";
      version = "2.0.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "5795fca60f099754934069dfb3d20824cfec94b4c13c7130d1cd52e0fcadfc42"; };
      features = builtins.concatLists [
        [ "jwks" ]
      ];
      dependencies = {
        addr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".addr."0.15.6" { inherit profileName; }).out;
        ahash = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ahash."0.8.11" { inherit profileName; }).out;
        ammonia = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ammonia."4.0.0" { inherit profileName; }).out;
        ascii = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".any_ascii."0.3.2" { inherit profileName; }).out;
        argon2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".argon2."0.5.3" { inherit profileName; }).out;
        channel = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-channel."1.9.0" { inherit profileName; }).out;
        executor = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-executor."1.13.1" { inherit profileName; }).out;
        async_graphql = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-graphql."7.0.11" { inherit profileName; }).out;
        base64 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.21.7" { inherit profileName; }).out;
        bcrypt = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bcrypt."0.15.1" { inherit profileName; }).out;
        bincode = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bincode."1.3.3" { inherit profileName; }).out;
        blake3 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".blake3."1.5.4" { inherit profileName; }).out;
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.8.0" { inherit profileName; }).out;
        castaway = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".castaway."0.2.3" { inherit profileName; }).out;
        cedar_policy = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cedar-policy."2.4.2" { inherit profileName; }).out;
        chrono = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.38" { inherit profileName; }).out;
        ciborium = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ciborium."0.2.2" { inherit profileName; }).out;
        dashmap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dashmap."5.5.3" { inherit profileName; }).out;
        deunicode = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".deunicode."1.6.0" { inherit profileName; }).out;
        dmp = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dmp."0.2.0" { inherit profileName; }).out;
        fst = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".fst."0.4.7" { inherit profileName; }).out;
        futures = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.31" { inherit profileName; }).out;
        fuzzy_matcher = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".fuzzy-matcher."0.3.7" { inherit profileName; }).out;
        geo = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".geo."0.28.0" { inherit profileName; }).out;
        geo_types = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".geo-types."0.7.13" { inherit profileName; }).out;
        hex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hex."0.4.3" { inherit profileName; }).out;
        ipnet = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ipnet."2.10.1" { inherit profileName; }).out;
        jsonwebtoken = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".jsonwebtoken."9.3.0" { inherit profileName; }).out;
        lexicmp = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".lexicmp."0.1.0" { inherit profileName; }).out;
        linfa_linalg = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".linfa-linalg."0.1.0" { inherit profileName; }).out;
        md5 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".md-5."0.10.6" { inherit profileName; }).out;
        nanoid = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".nanoid."0.4.0" { inherit profileName; }).out;
        ndarray = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ndarray."0.15.6" { inherit profileName; }).out;
        ndarray_stats = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ndarray-stats."0.5.1" { inherit profileName; }).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
        num_cpus = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.16.0" { inherit profileName; }).out;
        object_store = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".object_store."0.10.2" { inherit profileName; }).out;
        pbkdf2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pbkdf2."0.12.2" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "pharos" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pharos."0.5.3" { inherit profileName; }).out;
        phf = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf."0.11.2" { inherit profileName; }).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.15" { inherit profileName; }).out;
        quick_cache = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quick_cache."0.5.2" { inherit profileName; }).out;
        radix_trie = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".radix_trie."0.2.1" { inherit profileName; }).out;
        rand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; }).out;
        reblessive = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".reblessive."0.4.1" { inherit profileName; }).out;
        regex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.11.1" { inherit profileName; }).out;
        reqwest = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".reqwest."0.12.8" { inherit profileName; }).out;
        revision = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".revision."0.10.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "ring" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ring."0.17.8" { inherit profileName; }).out;
        rmpv = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rmpv."1.3.0" { inherit profileName; }).out;
        roaring = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".roaring."0.10.6" { inherit profileName; }).out;
        rust_stemmers = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rust-stemmers."1.2.0" { inherit profileName; }).out;
        rust_decimal = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rust_decimal."1.36.0" { inherit profileName; }).out;
        scrypt = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".scrypt."0.11.0" { inherit profileName; }).out;
        semver = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".semver."1.0.23" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        serde_content = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde-content."0.1.0" { inherit profileName; }).out;
        serde_json = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.132" { inherit profileName; }).out;
        sha1 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha1."0.10.6" { inherit profileName; }).out;
        sha2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha2."0.10.8" { inherit profileName; }).out;
        snap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".snap."1.1.1" { inherit profileName; }).out;
        storekey = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".storekey."0.5.0" { inherit profileName; }).out;
        subtle = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".subtle."2.6.1" { inherit profileName; }).out;
        derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".surrealdb-derive."0.12.0" { profileName = "__noProfile"; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") || hostPlatform.parsed.cpu.name == "wasm32" then "tokio" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.41.0" { inherit profileName; }).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
        trice = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".trice."0.4.0" { inherit profileName; }).out;
        ulid = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ulid."1.1.3" { inherit profileName; }).out;
        unicase = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicase."2.8.0" { inherit profileName; }).out;
        url = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.5.2" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") || hostPlatform.parsed.cpu.name == "wasm32" then "uuid" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".uuid."1.11.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "wasm_bindgen_futures" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-futures."0.4.45" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "wasmtimer" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasmtimer."0.2.1" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "ws_stream_wasm" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ws_stream_wasm."0.7.4" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".surrealdb-derive."0.12.0" = overridableMkRustCrate (profileName: rec {
      name = "surrealdb-derive";
      version = "0.12.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "aacdb4c58b9ebef0291310afcd63af0012d85610d361f3785952c61b6f1dddf4"; };
      dependencies = {
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".surrealdb-migrations."2.0.0" = overridableMkRustCrate (profileName: rec {
      name = "surrealdb-migrations";
      version = "2.0.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6e5554ea6be87c1d80dbab4325fc966a8600979b5652c96d9f265ad9b6d4af8c"; };
      dependencies = {
        chrono = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.38" { inherit profileName; }).out;
        chrono_human_duration = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono-human-duration."0.1.1" { inherit profileName; }).out;
        clap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."4.5.20" { inherit profileName; }).out;
        cli_table = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cli-table."0.4.7" { inherit profileName; }).out;
        color_eyre = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".color-eyre."0.6.3" { inherit profileName; }).out;
        convert_case = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".convert_case."0.6.0" { inherit profileName; }).out;
        diffy = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".diffy."0.4.0" { inherit profileName; }).out;
        fs_extra = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".fs_extra."1.3.0" { inherit profileName; }).out;
        include_dir = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".include_dir."0.7.4" { inherit profileName; }).out;
        itertools = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.13.0" { inherit profileName; }).out;
        names = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".names."0.14.0" { inherit profileName; }).out;
        regex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.11.1" { inherit profileName; }).out;
        ini = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rust-ini."0.21.1" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        serde_json = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.132" { inherit profileName; }).out;
        sqlparser = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sqlparser."0.49.0" { inherit profileName; }).out;
        surrealdb = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".surrealdb."2.0.4" { inherit profileName; }).out;
        tokio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.41.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".svg_fmt."0.4.3" = overridableMkRustCrate (profileName: rec {
      name = "svg_fmt";
      version = "0.4.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "20e16a0f46cf5fd675563ef54f26e83e20f2366bcf027bcb3cc3ed2b98aaf2ca"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".swash."0.1.19" = overridableMkRustCrate (profileName: rec {
      name = "swash";
      version = "0.1.19";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "cbd59f3f359ddd2c95af4758c18270eddd9c730dde98598023cdabff472c2ca2"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "render" ]
        [ "scale" ]
      ];
      dependencies = {
        skrifa = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".skrifa."0.22.3" { inherit profileName; }).out;
        yazi = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".yazi."0.1.6" { inherit profileName; }).out;
        zeno = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".zeno."0.2.3" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" = overridableMkRustCrate (profileName: rec {
      name = "syn";
      version = "1.0.109";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237"; };
      features = builtins.concatLists [
        [ "clone-impls" ]
        [ "default" ]
        [ "derive" ]
        [ "extra-traits" ]
        [ "full" ]
        [ "parsing" ]
        [ "printing" ]
        [ "proc-macro" ]
        [ "quote" ]
        [ "visit" ]
      ];
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        unicode_ident = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.13" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" = overridableMkRustCrate (profileName: rec {
      name = "syn";
      version = "2.0.85";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "5023162dfcd14ef8f32034d8bcd4cc5ddc61ef7a247c024a33e24e1f24d21b56"; };
      features = builtins.concatLists [
        [ "clone-impls" ]
        [ "default" ]
        [ "derive" ]
        [ "extra-traits" ]
        [ "fold" ]
        [ "full" ]
        [ "parsing" ]
        [ "printing" ]
        [ "proc-macro" ]
        [ "visit" ]
        [ "visit-mut" ]
      ];
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        unicode_ident = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.13" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".syn_derive."0.1.8" = overridableMkRustCrate (profileName: rec {
      name = "syn_derive";
      version = "0.1.8";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1329189c02ff984e9736652b1631330da25eaa6bc639089ed4915d25446cbe7b"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "full" ]
      ];
      dependencies = {
        proc_macro_error = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro-error."1.0.4" { inherit profileName; }).out;
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".sync_wrapper."0.1.2" = overridableMkRustCrate (profileName: rec {
      name = "sync_wrapper";
      version = "0.1.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2047c6ded9c721764247e62cd3b03c09ffc529b2ba5b10ec482ae507a4a70160"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".sync_wrapper."1.0.1" = overridableMkRustCrate (profileName: rec {
      name = "sync_wrapper";
      version = "1.0.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a7065abeca94b6a8a577f9bd45aa0867a2238b74e8eb67cf10d492bc39351394"; };
      features = builtins.concatLists [
        [ "futures" ]
        [ "futures-core" ]
      ];
      dependencies = {
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.31" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".synstructure."0.13.1" = overridableMkRustCrate (profileName: rec {
      name = "synstructure";
      version = "0.13.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c8af7666ab7b6390ab78131fb5b0fce11d6b7a6951602017c35fa82800708971"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "proc-macro" ]
      ];
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".sys-locale."0.3.1" = overridableMkRustCrate (profileName: rec {
      name = "sys-locale";
      version = "0.3.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e801cf239ecd6ccd71f03d270d67dd53d13e90aab208bf4b8fe4ad957ea949b0"; };
      dependencies = {
        ${ if hostPlatform.parsed.kernel.name == "android" then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".sysctl."0.5.5" = overridableMkRustCrate (profileName: rec {
      name = "sysctl";
      version = "0.5.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ec7dddc5f0fee506baf8b9fdb989e242f17e4b11c61dfbb0635b705217199eea"; };
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        byteorder = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.5.0" { inherit profileName; }).out;
        enum_as_inner = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".enum-as-inner."0.6.1" { profileName = "__noProfile"; }).out;
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "linux" then "walkdir" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.5.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".system-configuration."0.5.1" = overridableMkRustCrate (profileName: rec {
      name = "system-configuration";
      version = "0.5.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ba3a3adc5c275d719af8cb4272ea1c4a6d668a777f37e115f6d11ddbc1c8e0e7"; };
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" { inherit profileName; }).out;
        core_foundation = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation."0.9.4" { inherit profileName; }).out;
        system_configuration_sys = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".system-configuration-sys."0.5.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".system-configuration-sys."0.5.0" = overridableMkRustCrate (profileName: rec {
      name = "system-configuration-sys";
      version = "0.5.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a75fb188eb626b924683e3b95e3a48e63551fcfb51949de2f06a9d91dbee93c9"; };
      dependencies = {
        core_foundation_sys = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.8.7" { inherit profileName; }).out;
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tap."1.0.1" = overridableMkRustCrate (profileName: rec {
      name = "tap";
      version = "1.0.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "55937e1799185b12863d447f42597ed69d9928686b8d88a1df17376a097d8369"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tempfile."3.13.0" = overridableMkRustCrate (profileName: rec {
      name = "tempfile";
      version = "3.13.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f0f2c9fc62d0beef6951ccffd757e241266a2c833136efbe35af6cd2567dca5b"; };
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        fastrand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".fastrand."2.1.1" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix || hostPlatform.parsed.kernel.name == "wasi" then "rustix" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustix."0.38.37" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.59.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tendril."0.4.3" = overridableMkRustCrate (profileName: rec {
      name = "tendril";
      version = "0.4.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d24a120c5fc464a3458240ee02c299ebcb9d67b5249c8848b09d639dca8d7bb0"; };
      dependencies = {
        futf = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futf."0.1.5" { inherit profileName; }).out;
        mac = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".mac."0.1.1" { inherit profileName; }).out;
        utf8 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".utf-8."0.7.6" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".term."0.7.0" = overridableMkRustCrate (profileName: rec {
      name = "term";
      version = "0.7.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c59df8ac95d96ff9bede18eb7300b0fda5e5d8d90960e76f8e14ae765eedbf1f"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        dirs_next = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dirs-next."2.0.0" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "rustversion" else null } = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustversion."1.0.18" { profileName = "__noProfile"; }).out;
        ${ if hostPlatform.isWindows then "winapi" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".termcolor."1.4.1" = overridableMkRustCrate (profileName: rec {
      name = "termcolor";
      version = "1.4.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "06794f8f6c5c898b3275aebefa6b8a1cb24cd2c6c79397ab15774837a0bc5755"; };
      dependencies = {
        ${ if hostPlatform.isWindows then "winapi_util" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.9" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" = overridableMkRustCrate (profileName: rec {
      name = "thiserror";
      version = "1.0.65";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "5d11abd9594d9b38965ef50805c5e469ca9cc6f197f883f717e0269a3057b3d5"; };
      dependencies = {
        thiserror_impl = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror-impl."1.0.65" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".thiserror-impl."1.0.65" = overridableMkRustCrate (profileName: rec {
      name = "thiserror-impl";
      version = "1.0.65";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ae71770322cbd277e69d762a16c444af02aa0575ac0d174f0b9562d3b37f8602"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".thread_local."1.1.8" = overridableMkRustCrate (profileName: rec {
      name = "thread_local";
      version = "1.1.8";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8b9ef9bad013ada3808854ceac7b46812a6465ba368859a37e2100283d2d719c"; };
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".time."0.3.36" = overridableMkRustCrate (profileName: rec {
      name = "time";
      version = "0.3.36";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "5dfd88e563464686c916c7e46e623e520ddc6d79fa6641390f2e3fa86e83e885"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "formatting" ]
        [ "macros" ]
        [ "parsing" ]
        [ "serde" ]
        [ "serde-well-known" ]
        [ "std" ]
      ];
      dependencies = {
        deranged = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".deranged."0.3.11" { inherit profileName; }).out;
        itoa = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.11" { inherit profileName; }).out;
        num_conv = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-conv."0.1.0" { inherit profileName; }).out;
        powerfmt = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".powerfmt."0.2.0" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        time_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".time-core."0.1.2" { inherit profileName; }).out;
        time_macros = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".time-macros."0.2.18" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".time-core."0.1.2" = overridableMkRustCrate (profileName: rec {
      name = "time-core";
      version = "0.1.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ef927ca75afb808a4d64dd374f00a2adf8d0fcff8e7b184af886c3c87ec4a3f3"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".time-macros."0.2.18" = overridableMkRustCrate (profileName: rec {
      name = "time-macros";
      version = "0.2.18";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3f252a68540fde3a3877aeea552b832b40ab9a69e318efd078774a01ddee1ccf"; };
      features = builtins.concatLists [
        [ "formatting" ]
        [ "parsing" ]
        [ "serde" ]
      ];
      dependencies = {
        num_conv = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-conv."0.1.0" { inherit profileName; }).out;
        time_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".time-core."0.1.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tiny-keccak."2.0.2" = overridableMkRustCrate (profileName: rec {
      name = "tiny-keccak";
      version = "2.0.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2c9d3793400a45f954c52e73d068316d76b6f4e36977e3fcebb13a2721e80237"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "sha3" ]
        [ "shake" ]
      ];
      dependencies = {
        crunchy = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crunchy."0.2.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tiny-skia."0.11.4" = overridableMkRustCrate (profileName: rec {
      name = "tiny-skia";
      version = "0.11.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "83d13394d44dae3207b52a326c0c85a8bf87f1541f23b0d143811088497b09ab"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "png" ]
        [ "png-format" ]
        [ "simd" ]
        [ "std" ]
      ];
      dependencies = {
        arrayref = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayref."0.3.9" { inherit profileName; }).out;
        arrayvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.7.4" { inherit profileName; }).out;
        bytemuck = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytemuck."1.19.0" { inherit profileName; }).out;
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        png = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".png."0.17.14" { inherit profileName; }).out;
        tiny_skia_path = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tiny-skia-path."0.11.4" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tiny-skia-path."0.11.4" = overridableMkRustCrate (profileName: rec {
      name = "tiny-skia-path";
      version = "0.11.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9c9e7fc0c2e86a30b117d0462aa261b72b7a99b7ebd7deb3a14ceda95c5bdc93"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
      dependencies = {
        arrayref = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayref."0.3.9" { inherit profileName; }).out;
        bytemuck = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytemuck."1.19.0" { inherit profileName; }).out;
        strict_num = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".strict-num."0.1.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tiny-xlib."0.2.3" = overridableMkRustCrate (profileName: rec {
      name = "tiny-xlib";
      version = "0.2.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1d52f22673960ad13af14ff4025997312def1223bfa7c8e4949d099e6b3d5d1c"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "dlopen" ]
        [ "libloading" ]
        [ "tracing" ]
      ];
      dependencies = {
        as_raw_xcb_connection = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".as-raw-xcb-connection."1.0.1" { inherit profileName; }).out;
        ctor_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ctor-lite."0.1.0" { inherit profileName; }).out;
        libloading = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libloading."0.8.5" { inherit profileName; }).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
      };
      buildDependencies = {
        pkg_config = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.31" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tinyvec."1.8.0" = overridableMkRustCrate (profileName: rec {
      name = "tinyvec";
      version = "1.8.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "445e881f4f6d382d5f27c034e25eb92edd7c784ceab92a0937db7f2e9471b938"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "tinyvec_macros" ]
      ];
      dependencies = {
        tinyvec_macros = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tinyvec_macros."0.1.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tinyvec_macros."0.1.1" = overridableMkRustCrate (profileName: rec {
      name = "tinyvec_macros";
      version = "0.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1f3ccbac311fea05f86f61904b462b55fb3df8837a366dfc601a0161d0532f20"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tokenizers."0.20.1" = overridableMkRustCrate (profileName: rec {
      name = "tokenizers";
      version = "0.20.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b172ffa9a2e5c31bbddc940cd5725d933ced983a9333bbebc4c7eda3bbce1557"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "esaxx_fast" ]
        [ "hf-hub" ]
        [ "indicatif" ]
        [ "onig" ]
        [ "progressbar" ]
      ];
      dependencies = {
        aho_corasick = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".aho-corasick."1.1.3" { inherit profileName; }).out;
        derive_builder = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".derive_builder."0.20.2" { inherit profileName; }).out;
        esaxx_rs = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".esaxx-rs."0.1.10" { inherit profileName; }).out;
        getrandom = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.15" { inherit profileName; }).out;
        hf_hub = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hf-hub."0.3.2" { inherit profileName; }).out;
        indicatif = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".indicatif."0.17.8" { inherit profileName; }).out;
        itertools = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.12.1" { inherit profileName; }).out;
        lazy_static = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.5.0" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        macro_rules_attribute = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".macro_rules_attribute."0.2.0" { inherit profileName; }).out;
        monostate = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".monostate."0.1.13" { inherit profileName; }).out;
        onig = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".onig."6.4.0" { inherit profileName; }).out;
        paste = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".paste."1.0.15" { profileName = "__noProfile"; }).out;
        rand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; }).out;
        rayon = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon."1.10.0" { inherit profileName; }).out;
        rayon_cond = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon-cond."0.3.0" { inherit profileName; }).out;
        regex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.11.1" { inherit profileName; }).out;
        regex_syntax = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.8.5" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        serde_json = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.132" { inherit profileName; }).out;
        spm_precompiled = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".spm_precompiled."0.1.4" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
        unicode_normalization_alignments = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-normalization-alignments."0.1.12" { inherit profileName; }).out;
        unicode_segmentation = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-segmentation."1.12.0" { inherit profileName; }).out;
        unicode_categories = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode_categories."0.1.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tokio."1.41.0" = overridableMkRustCrate (profileName: rec {
      name = "tokio";
      version = "1.41.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "145f3413504347a2be84393cc8a7d2fb4d863b375909ea59f2158261aa258bbb"; };
      features = builtins.concatLists [
        [ "bytes" ]
        [ "default" ]
        [ "fs" ]
        [ "full" ]
        [ "io-std" ]
        [ "io-util" ]
        [ "libc" ]
        [ "macros" ]
        [ "mio" ]
        [ "net" ]
        [ "parking_lot" ]
        [ "process" ]
        [ "rt" ]
        [ "rt-multi-thread" ]
        [ "signal" ]
        [ "signal-hook-registry" ]
        [ "socket2" ]
        [ "sync" ]
        [ "time" ]
        [ "tokio-macros" ]
        [ "windows-sys" ]
      ];
      dependencies = {
        ${ if false then "backtrace" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".backtrace."0.3.71" { inherit profileName; }).out;
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.8.0" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        mio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio."1.0.2" { inherit profileName; }).out;
        parking_lot = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.12.3" { inherit profileName; }).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.15" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix then "signal_hook_registry" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".signal-hook-registry."1.4.2" { inherit profileName; }).out;
        socket2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".socket2."0.5.7" { inherit profileName; }).out;
        tokio_macros = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-macros."2.4.0" { profileName = "__noProfile"; }).out;
        ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.52.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tokio-macros."2.4.0" = overridableMkRustCrate (profileName: rec {
      name = "tokio-macros";
      version = "2.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "693d596312e88961bc67d7f1f97af8a70227d9f90c31bba5806eec004978d752"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tokio-native-tls."0.3.1" = overridableMkRustCrate (profileName: rec {
      name = "tokio-native-tls";
      version = "0.3.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "bbae76ab933c85776efabc971569dd6119c580d8f5d448769dec1764bf796ef2"; };
      dependencies = {
        native_tls = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".native-tls."0.2.12" { inherit profileName; }).out;
        tokio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.41.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tokio-rustls."0.26.0" = overridableMkRustCrate (profileName: rec {
      name = "tokio-rustls";
      version = "0.26.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0c7bc40d0e5a97695bb96e27995cd3a08538541b0a846f65bba7a359f36700d4"; };
      features = builtins.concatLists [
        [ "ring" ]
        [ "tls12" ]
      ];
      dependencies = {
        rustls = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls."0.23.15" { inherit profileName; }).out;
        pki_types = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls-pki-types."1.10.0" { inherit profileName; }).out;
        tokio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.41.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tokio-tungstenite."0.23.1" = overridableMkRustCrate (profileName: rec {
      name = "tokio-tungstenite";
      version = "0.23.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c6989540ced10490aaf14e6bad2e3d33728a2813310a0c71d1574304c49631cd"; };
      features = builtins.concatLists [
        [ "__rustls-tls" ]
        [ "connect" ]
        [ "default" ]
        [ "handshake" ]
        [ "rustls" ]
        [ "rustls-pki-types" ]
        [ "rustls-tls-webpki-roots" ]
        [ "stream" ]
        [ "tokio-rustls" ]
        [ "url" ]
        [ "webpki-roots" ]
      ];
      dependencies = {
        futures_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.31" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        rustls = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls."0.23.15" { inherit profileName; }).out;
        rustls_pki_types = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls-pki-types."1.10.0" { inherit profileName; }).out;
        tokio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.41.0" { inherit profileName; }).out;
        tokio_rustls = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-rustls."0.26.0" { inherit profileName; }).out;
        tungstenite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tungstenite."0.23.0" { inherit profileName; }).out;
        webpki_roots = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".webpki-roots."0.26.6" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tokio-tungstenite."0.24.0" = overridableMkRustCrate (profileName: rec {
      name = "tokio-tungstenite";
      version = "0.24.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "edc5f74e248dc973e0dbb7b74c7e0d6fcc301c694ff50049504004ef4d0cdcd9"; };
      features = builtins.concatLists [
        [ "connect" ]
        [ "default" ]
        [ "handshake" ]
        [ "stream" ]
      ];
      dependencies = {
        futures_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.31" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        tokio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.41.0" { inherit profileName; }).out;
        tungstenite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tungstenite."0.24.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tokio-util."0.7.12" = overridableMkRustCrate (profileName: rec {
      name = "tokio-util";
      version = "0.7.12";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "61e7c3654c13bcd040d4a03abee2c75b1d14a37b423cf5a813ceae1cc903ec6a"; };
      features = builtins.concatLists [
        [ "codec" ]
        [ "compat" ]
        [ "default" ]
        [ "futures-io" ]
        [ "io" ]
      ];
      dependencies = {
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.8.0" { inherit profileName; }).out;
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.31" { inherit profileName; }).out;
        futures_io = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-io."0.3.31" { inherit profileName; }).out;
        futures_sink = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.31" { inherit profileName; }).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.15" { inherit profileName; }).out;
        tokio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.41.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".toml."0.8.19" = overridableMkRustCrate (profileName: rec {
      name = "toml";
      version = "0.8.19";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a1ed1f98e3fdc28d6d910e6737ae6ab1a93bf1985935a1193e68f93eeb68d24e"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "display" ]
        [ "parse" ]
      ];
      dependencies = {
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        serde_spanned = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_spanned."0.6.8" { inherit profileName; }).out;
        toml_datetime = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml_datetime."0.6.8" { inherit profileName; }).out;
        toml_edit = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml_edit."0.22.22" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".toml_datetime."0.6.8" = overridableMkRustCrate (profileName: rec {
      name = "toml_datetime";
      version = "0.6.8";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0dd7358ecb8fc2f8d014bf86f6f638ce72ba252a2c3a2572f2a795f1d23efb41"; };
      features = builtins.concatLists [
        [ "serde" ]
      ];
      dependencies = {
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".toml_edit."0.22.22" = overridableMkRustCrate (profileName: rec {
      name = "toml_edit";
      version = "0.22.22";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4ae48d6208a266e853d946088ed816055e556cc6028c5e8e2b84d9fa5dd7c7f5"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "display" ]
        [ "parse" ]
        [ "serde" ]
      ];
      dependencies = {
        indexmap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."2.6.0" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        serde_spanned = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_spanned."0.6.8" { inherit profileName; }).out;
        toml_datetime = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml_datetime."0.6.8" { inherit profileName; }).out;
        winnow = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winnow."0.6.20" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tower-service."0.3.3" = overridableMkRustCrate (profileName: rec {
      name = "tower-service";
      version = "0.3.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8df9b6e13f2d32c91b9bd719c00d1958837bc7dec474d94952798cc8e69eeec3"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" = overridableMkRustCrate (profileName: rec {
      name = "tracing";
      version = "0.1.40";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c3523ab5a71916ccf420eebdf5521fcef02141234bbc0b8a49f2fdc4544364ef"; };
      features = builtins.concatLists [
        [ "attributes" ]
        [ "default" ]
        [ "std" ]
        [ "tracing-attributes" ]
      ];
      dependencies = {
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.15" { inherit profileName; }).out;
        tracing_attributes = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-attributes."0.1.27" { profileName = "__noProfile"; }).out;
        tracing_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.32" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tracing-attributes."0.1.27" = overridableMkRustCrate (profileName: rec {
      name = "tracing-attributes";
      version = "0.1.27";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "34704c8d6ebcbc939824180af020566b01a7c01f80641264eba0999f6c2b6be7"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.32" = overridableMkRustCrate (profileName: rec {
      name = "tracing-core";
      version = "0.1.32";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c06d3da6113f116aaee68e4d601191614c9053067f9ab7f6edbcb161237daa54"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "once_cell" ]
        [ "std" ]
        [ "valuable" ]
      ];
      dependencies = {
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
        ${ if false then "valuable" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".valuable."0.1.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tracing-error."0.2.0" = overridableMkRustCrate (profileName: rec {
      name = "tracing-error";
      version = "0.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d686ec1c0f384b1277f097b2f279a2ecc11afe8c133c1aabf036a27cb4cd206e"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "traced-error" ]
      ];
      dependencies = {
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
        tracing_subscriber = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-subscriber."0.3.18" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tracing-log."0.2.0" = overridableMkRustCrate (profileName: rec {
      name = "tracing-log";
      version = "0.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ee855f1f400bd0e5c02d150ae5de3840039a3f54b025156404e34c23c03f47c3"; };
      features = builtins.concatLists [
        [ "log-tracer" ]
        [ "std" ]
      ];
      dependencies = {
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
        tracing_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.32" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tracing-subscriber."0.3.18" = overridableMkRustCrate (profileName: rec {
      name = "tracing-subscriber";
      version = "0.3.18";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ad0f048c97dbd9faa9b7df56362b8ebcaa52adb06b498c050d2f4e32f90a7a8b"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "ansi" ]
        [ "default" ]
        [ "env-filter" ]
        [ "fmt" ]
        [ "matchers" ]
        [ "nu-ansi-term" ]
        [ "once_cell" ]
        [ "regex" ]
        [ "registry" ]
        [ "sharded-slab" ]
        [ "smallvec" ]
        [ "std" ]
        [ "thread_local" ]
        [ "tracing" ]
        [ "tracing-log" ]
      ];
      dependencies = {
        matchers = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".matchers."0.1.0" { inherit profileName; }).out;
        nu_ansi_term = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".nu-ansi-term."0.46.0" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
        regex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.11.1" { inherit profileName; }).out;
        sharded_slab = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sharded-slab."0.1.7" { inherit profileName; }).out;
        smallvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.13.2" { inherit profileName; }).out;
        thread_local = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thread_local."1.1.8" { inherit profileName; }).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
        tracing_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.32" { inherit profileName; }).out;
        tracing_log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-log."0.2.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".trice."0.4.0" = overridableMkRustCrate (profileName: rec {
      name = "trice";
      version = "0.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d3aaab10ae9fac0b10f392752bf56f0fd20845f39037fec931e8537b105b515a"; };
      dependencies = {
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "js_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.72" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "wasm_bindgen" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.95" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "web_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.72" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".trim-in-place."0.1.7" = overridableMkRustCrate (profileName: rec {
      name = "trim-in-place";
      version = "0.1.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "343e926fc669bc8cde4fa3129ab681c63671bae288b1f1081ceee6d9d37904fc"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".try-lock."0.2.5" = overridableMkRustCrate (profileName: rec {
      name = "try-lock";
      version = "0.2.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e421abadd41a4225275504ea4d6566923418b7f05506fbc9c0fe86ba7396114b"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ttf-parser."0.20.0" = overridableMkRustCrate (profileName: rec {
      name = "ttf-parser";
      version = "0.20.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "17f77d76d837a7830fe1d4f12b7b4ba4192c1888001c7164257e4bc6d21d96b4"; };
      features = builtins.concatLists [
        [ "apple-layout" ]
        [ "glyph-names" ]
        [ "opentype-layout" ]
        [ "std" ]
        [ "variable-fonts" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".ttf-parser."0.21.1" = overridableMkRustCrate (profileName: rec {
      name = "ttf-parser";
      version = "0.21.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2c591d83f69777866b9126b24c6dd9a18351f177e49d625920d19f989fd31cf8"; };
      features = builtins.concatLists [
        [ "apple-layout" ]
        [ "glyph-names" ]
        [ "opentype-layout" ]
        [ "std" ]
        [ "variable-fonts" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".ttf-parser."0.25.0" = overridableMkRustCrate (profileName: rec {
      name = "ttf-parser";
      version = "0.25.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "5902c5d130972a0000f60860bfbf46f7ca3db5391eddfedd1b8728bd9dc96c0e"; };
      features = builtins.concatLists [
        [ "apple-layout" ]
        [ "glyph-names" ]
        [ "opentype-layout" ]
        [ "std" ]
        [ "variable-fonts" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".tungstenite."0.23.0" = overridableMkRustCrate (profileName: rec {
      name = "tungstenite";
      version = "0.23.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6e2e2ce1e47ed2994fd43b04c8f618008d4cabdd5ee34027cf14f9d918edd9c8"; };
      features = builtins.concatLists [
        [ "__rustls-tls" ]
        [ "data-encoding" ]
        [ "handshake" ]
        [ "http" ]
        [ "httparse" ]
        [ "rustls" ]
        [ "rustls-pki-types" ]
        [ "sha1" ]
        [ "url" ]
      ];
      dependencies = {
        byteorder = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.5.0" { inherit profileName; }).out;
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.8.0" { inherit profileName; }).out;
        data_encoding = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".data-encoding."2.6.0" { inherit profileName; }).out;
        http = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."1.1.0" { inherit profileName; }).out;
        httparse = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".httparse."1.9.5" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        rand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; }).out;
        rustls = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls."0.23.15" { inherit profileName; }).out;
        rustls_pki_types = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls-pki-types."1.10.0" { inherit profileName; }).out;
        sha1 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha1."0.10.6" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
        url = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.5.2" { inherit profileName; }).out;
        utf8 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".utf-8."0.7.6" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tungstenite."0.24.0" = overridableMkRustCrate (profileName: rec {
      name = "tungstenite";
      version = "0.24.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "18e5b8366ee7a95b16d32197d0b2604b43a0be89dc5fac9f8e96ccafbaedda8a"; };
      features = builtins.concatLists [
        [ "data-encoding" ]
        [ "handshake" ]
        [ "http" ]
        [ "httparse" ]
        [ "sha1" ]
      ];
      dependencies = {
        byteorder = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.5.0" { inherit profileName; }).out;
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.8.0" { inherit profileName; }).out;
        data_encoding = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".data-encoding."2.6.0" { inherit profileName; }).out;
        http = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."1.1.0" { inherit profileName; }).out;
        httparse = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".httparse."1.9.5" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        rand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; }).out;
        sha1 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha1."0.10.6" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
        utf8 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".utf-8."0.7.6" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".typenum."1.17.0" = overridableMkRustCrate (profileName: rec {
      name = "typenum";
      version = "1.17.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "42ff0bf0c66b8238c6f3b578df37d0b7848e55df8577b3f74f92a69acceeb825"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ucd-trie."0.1.7" = overridableMkRustCrate (profileName: rec {
      name = "ucd-trie";
      version = "0.1.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2896d95c02a80c6d6a5d6e953d479f5ddf2dfdb6a244441010e373ac0fb88971"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".uds_windows."1.1.0" = overridableMkRustCrate (profileName: rec {
      name = "uds_windows";
      version = "1.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "89daebc3e6fd160ac4aa9fc8b3bf71e1f74fbf92367ae71fb83a037e8bf164b9"; };
      dependencies = {
        memoffset = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memoffset."0.9.1" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "tempfile" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.13.0" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "winapi" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ulid."1.1.3" = overridableMkRustCrate (profileName: rec {
      name = "ulid";
      version = "1.1.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "04f903f293d11f31c0c29e4148f6dc0d033a7f80cebc0282bea147611667d289"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "rand" ]
        [ "serde" ]
        [ "std" ]
      ];
      dependencies = {
        ${ if hostPlatform.config == "wasm32-unknown-unknown" then "getrandom" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.15" { inherit profileName; }).out;
        rand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        ${ if hostPlatform.config == "wasm32-unknown-unknown" then "web_time" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".web-time."1.1.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".unicase."2.8.0" = overridableMkRustCrate (profileName: rec {
      name = "unicase";
      version = "2.8.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7e51b68083f157f853b6379db119d1c1be0e6e4dec98101079dec41f6f5cf6df"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".unicode-bidi."0.3.17" = overridableMkRustCrate (profileName: rec {
      name = "unicode-bidi";
      version = "0.3.17";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "5ab17db44d7388991a428b2ee655ce0c212e862eff1768a455c58f9aad6e7893"; };
      features = builtins.concatLists [
        [ "hardcoded-data" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".unicode-bidi-mirroring."0.2.0" = overridableMkRustCrate (profileName: rec {
      name = "unicode-bidi-mirroring";
      version = "0.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "23cb788ffebc92c5948d0e997106233eeb1d8b9512f93f41651f52b6c5f5af86"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".unicode-ccc."0.2.0" = overridableMkRustCrate (profileName: rec {
      name = "unicode-ccc";
      version = "0.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1df77b101bcc4ea3d78dafc5ad7e4f58ceffe0b2b16bf446aeb50b6cb4157656"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.13" = overridableMkRustCrate (profileName: rec {
      name = "unicode-ident";
      version = "1.0.13";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e91b56cd4cadaeb79bbf1a5645f6b4f8dc5bde8834ad5894a8db35fda9efa1fe"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".unicode-linebreak."0.1.5" = overridableMkRustCrate (profileName: rec {
      name = "unicode-linebreak";
      version = "0.1.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3b09c83c3c29d37506a3e260c08c03743a6bb66a9cd432c6934ab501a190571f"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".unicode-normalization."0.1.24" = overridableMkRustCrate (profileName: rec {
      name = "unicode-normalization";
      version = "0.1.24";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "5033c97c4262335cded6d6fc3e5c18ab755e1a3dc96376350f3d8e9f009ad956"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
      dependencies = {
        tinyvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tinyvec."1.8.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".unicode-normalization-alignments."0.1.12" = overridableMkRustCrate (profileName: rec {
      name = "unicode-normalization-alignments";
      version = "0.1.12";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "43f613e4fa046e69818dd287fdc4bc78175ff20331479dab6e1b0f98d57062de"; };
      dependencies = {
        smallvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.13.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".unicode-properties."0.1.3" = overridableMkRustCrate (profileName: rec {
      name = "unicode-properties";
      version = "0.1.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e70f2a8b45122e719eb623c01822704c4e0907e7e426a05927e1a1cfff5b75d0"; };
      features = builtins.concatLists [
        [ "general-category" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".unicode-script."0.5.7" = overridableMkRustCrate (profileName: rec {
      name = "unicode-script";
      version = "0.5.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9fb421b350c9aff471779e262955939f565ec18b86c15364e6bdf0d662ca7c1f"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".unicode-security."0.1.2" = overridableMkRustCrate (profileName: rec {
      name = "unicode-security";
      version = "0.1.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2e4ddba1535dd35ed8b61c52166b7155d7f4e4b8847cec6f48e71dc66d8b5e50"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        unicode_normalization = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-normalization."0.1.24" { inherit profileName; }).out;
        unicode_script = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-script."0.5.7" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".unicode-segmentation."1.12.0" = overridableMkRustCrate (profileName: rec {
      name = "unicode-segmentation";
      version = "1.12.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f6ccf251212114b54433ec949fd6a7841275f9ada20dddd2f29e9ceea4501493"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.14" = overridableMkRustCrate (profileName: rec {
      name = "unicode-width";
      version = "0.1.14";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7dd6e30e90baa6f72411720665d41d89b9a3d039dc45b8faea1ddd07f617f6af"; };
      features = builtins.concatLists [
        [ "cjk" ]
        [ "default" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.2.6" = overridableMkRustCrate (profileName: rec {
      name = "unicode-xid";
      version = "0.2.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ebc1c04c71510c7f702b52b7c350734c9ff1295c464a03335b00bb84fc54f853"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".unicode_categories."0.1.1" = overridableMkRustCrate (profileName: rec {
      name = "unicode_categories";
      version = "0.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "39ec24b3121d976906ece63c9daad25b85969647682eee313cb5779fdd69e14e"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".unsafe-libyaml."0.2.11" = overridableMkRustCrate (profileName: rec {
      name = "unsafe-libyaml";
      version = "0.2.11";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "673aac59facbab8a9007c7f6108d11f63b603f7cabff99fabf650fea5c32b861"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".untrusted."0.9.0" = overridableMkRustCrate (profileName: rec {
      name = "untrusted";
      version = "0.9.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8ecb6da28b8a351d773b68d5825ac39017e680750f980f3a1a85cd8dd28a47c1"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ureq."2.10.1" = overridableMkRustCrate (profileName: rec {
      name = "ureq";
      version = "2.10.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b74fc6b57825be3373f7054754755f03ac3a8f5d70015ccad699ba2029956f4a"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "gzip" ]
        [ "json" ]
        [ "native-tls" ]
        [ "tls" ]
      ];
      dependencies = {
        base64 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.22.1" { inherit profileName; }).out;
        flate2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.34" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        native_tls = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".native-tls."0.2.12" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
        rustls = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls."0.23.15" { inherit profileName; }).out;
        rustls_pki_types = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls-pki-types."1.10.0" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        serde_json = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.132" { inherit profileName; }).out;
        url = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.5.2" { inherit profileName; }).out;
        webpki_roots = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".webpki-roots."0.26.6" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".url."2.5.2" = overridableMkRustCrate (profileName: rec {
      name = "url";
      version = "2.5.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "22784dbdf76fdde8af1aeda5622b546b422b6fc585325248a2bf9f5e41e94d6c"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        form_urlencoded = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".form_urlencoded."1.2.1" { inherit profileName; }).out;
        idna = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".idna."0.5.0" { inherit profileName; }).out;
        percent_encoding = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.3.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".urlencoding."2.1.3" = overridableMkRustCrate (profileName: rec {
      name = "urlencoding";
      version = "2.1.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "daf8dba3b7eb870caf1ddeed7bc9d2a049f3cfdfae7cb521b087cc33ae4c49da"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".utf-8."0.7.6" = overridableMkRustCrate (profileName: rec {
      name = "utf-8";
      version = "0.7.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "09cc8ee72d2a9becf2f2febe0205bbed8fc6615b7cb429ad062dc7b7ddd036a9"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".utf8parse."0.2.2" = overridableMkRustCrate (profileName: rec {
      name = "utf8parse";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "06abde3611657adf66d383f00b093d7faecc7fa57071cce2578660c9f1010821"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".uuid."1.11.0" = overridableMkRustCrate (profileName: rec {
      name = "uuid";
      version = "1.11.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f8c5f0a0af699448548ad1a2fbf920fb4bee257eae39953ba95cb84891a0446a"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "js" ]
        [ "rng" ]
        [ "serde" ]
        [ "std" ]
        [ "v4" ]
        [ "v7" ]
      ];
      dependencies = {
        getrandom = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.15" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" && hostPlatform.parsed.vendor.name == "unknown" && hostPlatform.parsed.kernel.name == "unknown" then "wasm_bindgen" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.95" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".valuable."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "valuable";
      version = "0.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "830b7e5d4d90034032940e4ace0d9a9a057e7a45cd94e6c007832e39edb82f6d"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".vcpkg."0.2.15" = overridableMkRustCrate (profileName: rec {
      name = "vcpkg";
      version = "0.2.15";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "accd4ea62f7bb7a82fe23066fb0957d48ef677f6eeb8215f372f52e48bb32426"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.5" = overridableMkRustCrate (profileName: rec {
      name = "version_check";
      version = "0.9.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0b928f33d975fc6ad9f86c8f283853ad26bdd5b10b7f1542aa2fa15e2289105a"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".walkdir."2.5.0" = overridableMkRustCrate (profileName: rec {
      name = "walkdir";
      version = "2.5.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "29790946404f91d9c5d06f9874efddea1dc06c5efe94541a7d6863108e3a5e4b"; };
      dependencies = {
        same_file = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".same-file."1.0.6" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "winapi_util" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.9" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".want."0.3.1" = overridableMkRustCrate (profileName: rec {
      name = "want";
      version = "0.3.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "bfa7760aed19e106de2c7c0b581b509f2f25d3dacaf737cb82ac61bc6d760b0e"; };
      dependencies = {
        try_lock = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".try-lock."0.2.5" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wasi."0.11.0+wasi-snapshot-preview1" = overridableMkRustCrate (profileName: rec {
      name = "wasi";
      version = "0.11.0+wasi-snapshot-preview1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.95" = overridableMkRustCrate (profileName: rec {
      name = "wasm-bindgen";
      version = "0.2.95";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "128d1e363af62632b8eb57219c8fd7877144af57558fb2ef0368d0087bddeb2e"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "spans" ]
        [ "std" ]
      ];
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
        wasm_bindgen_macro = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro."0.2.95" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-backend."0.2.95" = overridableMkRustCrate (profileName: rec {
      name = "wasm-bindgen-backend";
      version = "0.2.95";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "cb6dd4d3ca0ddffd1dd1c9c04f94b868c37ff5fac97c30b97cff2d74fce3a358"; };
      features = builtins.concatLists [
        [ "spans" ]
      ];
      dependencies = {
        bumpalo = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bumpalo."3.16.0" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
        wasm_bindgen_shared = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-shared."0.2.95" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-futures."0.4.45" = overridableMkRustCrate (profileName: rec {
      name = "wasm-bindgen-futures";
      version = "0.4.45";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "cc7ec4f8827a71586374db3e87abdb5a2bb3a15afed140221307c3ec06b1f63b"; };
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        js_sys = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.72" { inherit profileName; }).out;
        wasm_bindgen = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.95" { inherit profileName; }).out;
        ${ if builtins.elem "atomics" hostPlatformFeatures then "web_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.72" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro."0.2.95" = overridableMkRustCrate (profileName: rec {
      name = "wasm-bindgen-macro";
      version = "0.2.95";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e79384be7f8f5a9dd5d7167216f022090cf1f9ec128e6e6a482a2cb5c5422c56"; };
      features = builtins.concatLists [
        [ "spans" ]
      ];
      dependencies = {
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        wasm_bindgen_macro_support = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro-support."0.2.95" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro-support."0.2.95" = overridableMkRustCrate (profileName: rec {
      name = "wasm-bindgen-macro-support";
      version = "0.2.95";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "26c6ab57572f7a24a4985830b120de1594465e5d500f24afe89e16b4e833ef68"; };
      features = builtins.concatLists [
        [ "spans" ]
      ];
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
        wasm_bindgen_backend = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-backend."0.2.95" { inherit profileName; }).out;
        wasm_bindgen_shared = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-shared."0.2.95" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-shared."0.2.95" = overridableMkRustCrate (profileName: rec {
      name = "wasm-bindgen-shared";
      version = "0.2.95";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "65fc09f10666a9f147042251e0dda9c18f166ff7de300607007e96bdebc1068d"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wasm-streams."0.4.2" = overridableMkRustCrate (profileName: rec {
      name = "wasm-streams";
      version = "0.4.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "15053d8d85c7eccdbefef60f06769760a563c7f0a9d6902a13d35c7800b0ad65"; };
      dependencies = {
        futures_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.31" { inherit profileName; }).out;
        js_sys = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.72" { inherit profileName; }).out;
        wasm_bindgen = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.95" { inherit profileName; }).out;
        wasm_bindgen_futures = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-futures."0.4.45" { inherit profileName; }).out;
        web_sys = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.72" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wasm-timer."0.2.5" = overridableMkRustCrate (profileName: rec {
      name = "wasm-timer";
      version = "0.2.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "be0ecb0db480561e9a7642b5d3e4187c128914e58aa84330b9493e3eb68c5e7f"; };
      dependencies = {
        futures = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.31" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" && hostPlatform.parsed.kernel.name == "unknown" then "js_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.72" { inherit profileName; }).out;
        parking_lot = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.11.2" { inherit profileName; }).out;
        pin_utils = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-utils."0.1.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" && hostPlatform.parsed.kernel.name == "unknown" then "wasm_bindgen" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.95" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" && hostPlatform.parsed.kernel.name == "unknown" then "wasm_bindgen_futures" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-futures."0.4.45" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" && hostPlatform.parsed.kernel.name == "unknown" then "web_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.72" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wasmtimer."0.2.1" = overridableMkRustCrate (profileName: rec {
      name = "wasmtimer";
      version = "0.2.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c7ed9d8b15c7fb594d72bfb4b5a276f3d2029333cd93a932f376f5937f6f80ee"; };
      features = builtins.concatLists [
        [ "futures" ]
        [ "parking_lot" ]
        [ "pin-utils" ]
        [ "tokio" ]
      ];
      dependencies = {
        futures = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.31" { inherit profileName; }).out;
        js_sys = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.72" { inherit profileName; }).out;
        parking_lot = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.12.3" { inherit profileName; }).out;
        pin_utils = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-utils."0.1.0" { inherit profileName; }).out;
        wasm_bindgen = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.95" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wayland-backend."0.3.7" = overridableMkRustCrate (profileName: rec {
      name = "wayland-backend";
      version = "0.3.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "056535ced7a150d45159d3a8dc30f91a2e2d588ca0b23f70e56033622b8016f6"; };
      features = builtins.concatLists [
        [ "client_system" ]
        [ "dlopen" ]
      ];
      dependencies = {
        downcast_rs = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".downcast-rs."1.2.1" { inherit profileName; }).out;
        rustix = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustix."0.38.37" { inherit profileName; }).out;
        scoped_tls = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".scoped-tls."1.0.1" { inherit profileName; }).out;
        smallvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.13.2" { inherit profileName; }).out;
        wayland_sys = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wayland-sys."0.31.5" { inherit profileName; }).out;
      };
      buildDependencies = {
        cc = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.1.31" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wayland-client."0.31.7" = overridableMkRustCrate (profileName: rec {
      name = "wayland-client";
      version = "0.31.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b66249d3fc69f76fd74c82cc319300faa554e9d865dab1f7cd66cc20db10b280"; };
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        rustix = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustix."0.38.37" { inherit profileName; }).out;
        wayland_backend = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wayland-backend."0.3.7" { inherit profileName; }).out;
        wayland_scanner = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".wayland-scanner."0.31.5" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wayland-csd-frame."0.3.0" = overridableMkRustCrate (profileName: rec {
      name = "wayland-csd-frame";
      version = "0.3.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "625c5029dbd43d25e6aa9615e88b829a5cad13b2819c4ae129fdbb7c31ab4c7e"; };
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        cursor_icon = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cursor-icon."1.1.0" { inherit profileName; }).out;
        wayland_backend = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wayland-backend."0.3.7" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wayland-cursor."0.31.7" = overridableMkRustCrate (profileName: rec {
      name = "wayland-cursor";
      version = "0.31.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "32b08bc3aafdb0035e7fe0fdf17ba0c09c268732707dca4ae098f60cb28c9e4c"; };
      dependencies = {
        rustix = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustix."0.38.37" { inherit profileName; }).out;
        wayland_client = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wayland-client."0.31.7" { inherit profileName; }).out;
        xcursor = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".xcursor."0.3.8" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wayland-protocols."0.32.5" = overridableMkRustCrate (profileName: rec {
      name = "wayland-protocols";
      version = "0.32.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7cd0ade57c4e6e9a8952741325c30bf82f4246885dca8bf561898b86d0c1f58e"; };
      features = builtins.concatLists [
        [ "client" ]
        [ "staging" ]
        [ "unstable" ]
        [ "wayland-client" ]
      ];
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        wayland_backend = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wayland-backend."0.3.7" { inherit profileName; }).out;
        wayland_client = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wayland-client."0.31.7" { inherit profileName; }).out;
        wayland_scanner = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".wayland-scanner."0.31.5" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wayland-protocols-plasma."0.3.5" = overridableMkRustCrate (profileName: rec {
      name = "wayland-protocols-plasma";
      version = "0.3.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9b31cab548ee68c7eb155517f2212049dc151f7cd7910c2b66abfd31c3ee12bd"; };
      features = builtins.concatLists [
        [ "client" ]
        [ "wayland-client" ]
      ];
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        wayland_backend = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wayland-backend."0.3.7" { inherit profileName; }).out;
        wayland_client = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wayland-client."0.31.7" { inherit profileName; }).out;
        wayland_protocols = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wayland-protocols."0.32.5" { inherit profileName; }).out;
        wayland_scanner = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".wayland-scanner."0.31.5" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wayland-protocols-wlr."0.3.5" = overridableMkRustCrate (profileName: rec {
      name = "wayland-protocols-wlr";
      version = "0.3.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "782e12f6cd923c3c316130d56205ebab53f55d6666b7faddfad36cecaeeb4022"; };
      features = builtins.concatLists [
        [ "client" ]
        [ "wayland-client" ]
      ];
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        wayland_backend = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wayland-backend."0.3.7" { inherit profileName; }).out;
        wayland_client = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wayland-client."0.31.7" { inherit profileName; }).out;
        wayland_protocols = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wayland-protocols."0.32.5" { inherit profileName; }).out;
        wayland_scanner = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".wayland-scanner."0.31.5" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wayland-scanner."0.31.5" = overridableMkRustCrate (profileName: rec {
      name = "wayland-scanner";
      version = "0.31.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "597f2001b2e5fc1121e3d5b9791d3e78f05ba6bfa4641053846248e3a13661c3"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quick_xml = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quick-xml."0.36.2" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wayland-sys."0.31.5" = overridableMkRustCrate (profileName: rec {
      name = "wayland-sys";
      version = "0.31.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "efa8ac0d8e8ed3e3b5c9fc92c7881406a268e11555abe36493efabe649a29e09"; };
      features = builtins.concatLists [
        [ "client" ]
        [ "dlopen" ]
        [ "once_cell" ]
      ];
      dependencies = {
        dlib = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dlib."0.5.2" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
      };
      buildDependencies = {
        pkg_config = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.31" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.72" = overridableMkRustCrate (profileName: rec {
      name = "web-sys";
      version = "0.3.72";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f6488b90108c040df0fe62fa815cbdee25124641df01814dd7282749234c6112"; };
      features = builtins.concatLists [
        [ "AbortController" ]
        [ "AbortSignal" ]
        [ "AngleInstancedArrays" ]
        [ "BinaryType" ]
        [ "Blob" ]
        [ "BlobPropertyBag" ]
        [ "CanvasRenderingContext2d" ]
        [ "CloseEvent" ]
        [ "CssStyleDeclaration" ]
        [ "Document" ]
        [ "DomException" ]
        [ "DomRect" ]
        [ "DomRectReadOnly" ]
        [ "Element" ]
        [ "Event" ]
        [ "EventTarget" ]
        [ "ExtBlendMinmax" ]
        [ "ExtColorBufferFloat" ]
        [ "ExtColorBufferHalfFloat" ]
        [ "ExtDisjointTimerQuery" ]
        [ "ExtFragDepth" ]
        [ "ExtSRgb" ]
        [ "ExtShaderTextureLod" ]
        [ "ExtTextureFilterAnisotropic" ]
        [ "File" ]
        [ "FocusEvent" ]
        [ "FormData" ]
        [ "Headers" ]
        [ "HtmlCanvasElement" ]
        [ "HtmlElement" ]
        [ "HtmlImageElement" ]
        [ "HtmlMediaElement" ]
        [ "HtmlVideoElement" ]
        [ "ImageBitmap" ]
        [ "ImageBitmapOptions" ]
        [ "ImageBitmapRenderingContext" ]
        [ "ImageData" ]
        [ "IntersectionObserver" ]
        [ "IntersectionObserverEntry" ]
        [ "KeyboardEvent" ]
        [ "MediaQueryList" ]
        [ "MessageChannel" ]
        [ "MessageEvent" ]
        [ "MessagePort" ]
        [ "MouseEvent" ]
        [ "Navigator" ]
        [ "Node" ]
        [ "NodeList" ]
        [ "OesElementIndexUint" ]
        [ "OesStandardDerivatives" ]
        [ "OesTextureFloat" ]
        [ "OesTextureFloatLinear" ]
        [ "OesTextureHalfFloat" ]
        [ "OesTextureHalfFloatLinear" ]
        [ "OesVertexArrayObject" ]
        [ "OffscreenCanvas" ]
        [ "OffscreenCanvasRenderingContext2d" ]
        [ "OvrMultiview2" ]
        [ "PageTransitionEvent" ]
        [ "Performance" ]
        [ "PerformanceTiming" ]
        [ "PointerEvent" ]
        [ "PremultiplyAlpha" ]
        [ "QueuingStrategy" ]
        [ "ReadableByteStreamController" ]
        [ "ReadableStream" ]
        [ "ReadableStreamByobReader" ]
        [ "ReadableStreamByobRequest" ]
        [ "ReadableStreamDefaultController" ]
        [ "ReadableStreamDefaultReader" ]
        [ "ReadableStreamGetReaderOptions" ]
        [ "ReadableStreamReadResult" ]
        [ "ReadableStreamReaderMode" ]
        [ "ReadableStreamType" ]
        [ "ReadableWritablePair" ]
        [ "Request" ]
        [ "RequestCredentials" ]
        [ "RequestInit" ]
        [ "RequestMode" ]
        [ "ResizeObserver" ]
        [ "ResizeObserverBoxOptions" ]
        [ "ResizeObserverEntry" ]
        [ "ResizeObserverOptions" ]
        [ "ResizeObserverSize" ]
        [ "Response" ]
        [ "ServiceWorkerGlobalScope" ]
        [ "StreamPipeOptions" ]
        [ "TransformStream" ]
        [ "TransformStreamDefaultController" ]
        [ "Transformer" ]
        [ "UiEvent" ]
        [ "UnderlyingSink" ]
        [ "UnderlyingSource" ]
        [ "Url" ]
        [ "VideoFrame" ]
        [ "VisibilityState" ]
        [ "WebGl2RenderingContext" ]
        [ "WebGlActiveInfo" ]
        [ "WebGlBuffer" ]
        [ "WebGlFramebuffer" ]
        [ "WebGlProgram" ]
        [ "WebGlQuery" ]
        [ "WebGlRenderbuffer" ]
        [ "WebGlRenderingContext" ]
        [ "WebGlSampler" ]
        [ "WebGlShader" ]
        [ "WebGlSync" ]
        [ "WebGlTexture" ]
        [ "WebGlTransformFeedback" ]
        [ "WebGlUniformLocation" ]
        [ "WebGlVertexArrayObject" ]
        [ "WebSocket" ]
        [ "WebglColorBufferFloat" ]
        [ "WebglCompressedTextureAstc" ]
        [ "WebglCompressedTextureEtc" ]
        [ "WebglCompressedTextureEtc1" ]
        [ "WebglCompressedTexturePvrtc" ]
        [ "WebglCompressedTextureS3tc" ]
        [ "WebglCompressedTextureS3tcSrgb" ]
        [ "WebglDebugRendererInfo" ]
        [ "WebglDebugShaders" ]
        [ "WebglDepthTexture" ]
        [ "WebglDrawBuffers" ]
        [ "WebglLoseContext" ]
        [ "WheelEvent" ]
        [ "Window" ]
        [ "Worker" ]
        [ "WorkerGlobalScope" ]
        [ "WorkerNavigator" ]
        [ "WritableStream" ]
        [ "WritableStreamDefaultController" ]
        [ "WritableStreamDefaultWriter" ]
        [ "console" ]
      ];
      dependencies = {
        js_sys = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.72" { inherit profileName; }).out;
        wasm_bindgen = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.95" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".web-time."1.1.0" = overridableMkRustCrate (profileName: rec {
      name = "web-time";
      version = "1.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "5a6580f308b1fad9207618087a65c04e7a10bc77e02c8e84e9b00dd4b12fa0bb"; };
      dependencies = {
        ${ if false then "js_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.72" { inherit profileName; }).out;
        ${ if false then "wasm_bindgen" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.95" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".webpki-roots."0.26.6" = overridableMkRustCrate (profileName: rec {
      name = "webpki-roots";
      version = "0.26.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "841c67bff177718f1d4dfefde8d8f0e78f9b6589319ba88312f567fc5841a958"; };
      dependencies = {
        pki_types = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls-pki-types."1.10.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wgpu."0.19.4" = overridableMkRustCrate (profileName: rec {
      name = "wgpu";
      version = "0.19.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "cbd7311dbd2abcfebaabf1841a2824ed7c8be443a0f29166e5d3c6a53a762c01"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "dx12" ]
        [ "metal" ]
        [ "webgpu" ]
        [ "wgsl" ]
      ];
      dependencies = {
        arrayvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.7.4" { inherit profileName; }).out;
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "js_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.72" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        naga = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".naga."0.19.2" { inherit profileName; }).out;
        parking_lot = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.12.3" { inherit profileName; }).out;
        profiling = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".profiling."1.0.16" { inherit profileName; }).out;
        raw_window_handle = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".raw-window-handle."0.6.2" { inherit profileName; }).out;
        smallvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.13.2" { inherit profileName; }).out;
        static_assertions = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".static_assertions."1.1.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "wasm_bindgen" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.95" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "wasm_bindgen_futures" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-futures."0.4.45" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "web_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.72" { inherit profileName; }).out;
        wgc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wgpu-core."0.19.4" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") && hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "ios") && !(hostPlatform.parsed.kernel.name == "darwin") || !(hostPlatform.parsed.cpu.name == "wasm32") || hostPlatform.parsed.kernel.name == "emscripten" || hostPlatform.isWindows then "hal" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wgpu-hal."0.19.5" { inherit profileName; }).out;
        wgt = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wgpu-types."0.19.2" { inherit profileName; }).out;
      };
      buildDependencies = {
        cfg_aliases = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg_aliases."0.1.1" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wgpu-core."0.19.4" = overridableMkRustCrate (profileName: rec {
      name = "wgpu-core";
      version = "0.19.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "28b94525fc99ba9e5c9a9e24764f2bc29bad0911a7446c12f446a8277369bf3a"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "dx12" ]
        [ "gles" ]
        [ "link" ]
        [ "metal" ]
        [ "raw-window-handle" ]
        [ "vulkan" ]
        [ "wgsl" ]
      ];
      dependencies = {
        arrayvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.7.4" { inherit profileName; }).out;
        bit_vec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bit-vec."0.6.3" { inherit profileName; }).out;
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        codespan_reporting = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".codespan-reporting."0.11.1" { inherit profileName; }).out;
        indexmap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."2.6.0" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        naga = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".naga."0.19.2" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
        parking_lot = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.12.3" { inherit profileName; }).out;
        profiling = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".profiling."1.0.16" { inherit profileName; }).out;
        raw_window_handle = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".raw-window-handle."0.6.2" { inherit profileName; }).out;
        rustc_hash = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" { inherit profileName; }).out;
        smallvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.13.2" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" && !(hostPlatform.parsed.kernel.name == "emscripten") then "web_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.72" { inherit profileName; }).out;
        hal = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wgpu-hal."0.19.5" { inherit profileName; }).out;
        wgt = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wgpu-types."0.19.2" { inherit profileName; }).out;
      };
      buildDependencies = {
        cfg_aliases = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg_aliases."0.1.1" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wgpu-hal."0.19.5" = overridableMkRustCrate (profileName: rec {
      name = "wgpu-hal";
      version = "0.19.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "bfabcfc55fd86611a855816326b2d54c3b2fd7972c27ce414291562650552703"; };
      features = builtins.concatLists [
        [ "ash" ]
        [ "bit-set" ]
        [ "block" ]
        [ "d3d12" ]
        [ "default" ]
        [ "dx12" ]
        [ "dxc_shader_compiler" ]
        [ "gles" ]
        [ "glow" ]
        [ "glutin_wgl_sys" ]
        [ "gpu-alloc" ]
        [ "gpu-allocator" ]
        [ "gpu-descriptor" ]
        [ "hassle-rs" ]
        [ "khronos-egl" ]
        [ "libloading" ]
        [ "link" ]
        [ "metal" ]
        [ "range-alloc" ]
        [ "renderdoc" ]
        [ "renderdoc-sys" ]
        [ "smallvec" ]
        [ "vulkan" ]
        [ "windows_rs" ]
      ];
      dependencies = {
        ${ if hostPlatform.parsed.kernel.name == "android" then "android_system_properties" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".android_system_properties."0.1.5" { inherit profileName; }).out;
        arrayvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.7.4" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "ash" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ash."0.37.3+1.3.251" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "bit_set" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bit-set."0.5.3" { inherit profileName; }).out;
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios" then "block" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".block."0.1.6" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios" then "core_graphics_types" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-graphics-types."0.1.3" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "d3d12" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".d3d12."0.19.0" { inherit profileName; }).out;
        glow = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".glow."0.13.1" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "glutin_wgl_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".glutin_wgl_sys."0.5.0" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "gpu_alloc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".gpu-alloc."0.6.0" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "gpu_allocator" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".gpu-allocator."0.25.0" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "gpu_descriptor" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".gpu-descriptor."0.2.4" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "hassle_rs" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hassle-rs."0.11.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" && !(hostPlatform.parsed.kernel.name == "emscripten") then "js_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.72" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") || hostPlatform.parsed.kernel.name == "emscripten" then "khronos_egl" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".khronos-egl."6.0.0" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") || hostPlatform.parsed.kernel.name == "emscripten" then "libloading" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libloading."0.8.5" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios" then "metal" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".metal."0.27.0" { inherit profileName; }).out;
        naga = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".naga."0.19.2" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "android" then "ndk_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ndk-sys."0.5.0+25.2.9519653" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios" then "objc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc."0.2.7" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
        parking_lot = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.12.3" { inherit profileName; }).out;
        profiling = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".profiling."1.0.16" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "range_alloc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".range-alloc."0.1.3" { inherit profileName; }).out;
        raw_window_handle = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".raw-window-handle."0.6.2" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "renderdoc_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".renderdoc-sys."1.1.0" { inherit profileName; }).out;
        rustc_hash = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "smallvec" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.13.2" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" && !(hostPlatform.parsed.kernel.name == "emscripten") then "wasm_bindgen" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.95" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" && !(hostPlatform.parsed.kernel.name == "emscripten") then "web_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.72" { inherit profileName; }).out;
        wgt = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wgpu-types."0.19.2" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "winapi" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; }).out;
      };
      buildDependencies = {
        cfg_aliases = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg_aliases."0.1.1" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wgpu-types."0.19.2" = overridableMkRustCrate (profileName: rec {
      name = "wgpu-types";
      version = "0.19.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b671ff9fb03f78b46ff176494ee1ebe7d603393f42664be55b64dc8d53969805"; };
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "js_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.72" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "web_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.72" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".widestring."1.1.0" = overridableMkRustCrate (profileName: rec {
      name = "widestring";
      version = "1.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7219d36b6eac893fa81e84ebe06485e7dcbb616177469b142df14f1f4deb1311"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" = overridableMkRustCrate (profileName: rec {
      name = "winapi";
      version = "0.3.9";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419"; };
      features = builtins.concatLists [
        [ "combaseapi" ]
        [ "consoleapi" ]
        [ "d3d12" ]
        [ "d3d12sdklayers" ]
        [ "d3d12shader" ]
        [ "d3dcommon" ]
        [ "d3dcompiler" ]
        [ "dcomp" ]
        [ "dxgi1_2" ]
        [ "dxgi1_3" ]
        [ "dxgi1_4" ]
        [ "dxgi1_5" ]
        [ "dxgi1_6" ]
        [ "dxgidebug" ]
        [ "dxgiformat" ]
        [ "errhandlingapi" ]
        [ "fileapi" ]
        [ "handleapi" ]
        [ "impl-debug" ]
        [ "impl-default" ]
        [ "knownfolders" ]
        [ "libloaderapi" ]
        [ "minwinbase" ]
        [ "minwindef" ]
        [ "ntdef" ]
        [ "ntstatus" ]
        [ "objbase" ]
        [ "oleauto" ]
        [ "processenv" ]
        [ "processthreadsapi" ]
        [ "profileapi" ]
        [ "shlobj" ]
        [ "std" ]
        [ "synchapi" ]
        [ "timezoneapi" ]
        [ "winbase" ]
        [ "wincon" ]
        [ "windef" ]
        [ "winerror" ]
        [ "winnt" ]
        [ "winreg" ]
        [ "winsock2" ]
        [ "winuser" ]
        [ "ws2def" ]
        [ "ws2tcpip" ]
        [ "wtypes" ]
      ];
      dependencies = {
        ${ if hostPlatform.config == "i686-pc-windows-gnu" then "winapi_i686_pc_windows_gnu" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-i686-pc-windows-gnu."0.4.0" { inherit profileName; }).out;
        ${ if hostPlatform.config == "x86_64-pc-windows-gnu" then "winapi_x86_64_pc_windows_gnu" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-x86_64-pc-windows-gnu."0.4.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".winapi-i686-pc-windows-gnu."0.4.0" = overridableMkRustCrate (profileName: rec {
      name = "winapi-i686-pc-windows-gnu";
      version = "0.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.9" = overridableMkRustCrate (profileName: rec {
      name = "winapi-util";
      version = "0.1.9";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "cf221c93e13a30d793f7645a0e7762c55d169dbb0a49671918a2319d289b10bb"; };
      dependencies = {
        ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.59.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".winapi-x86_64-pc-windows-gnu."0.4.0" = overridableMkRustCrate (profileName: rec {
      name = "winapi-x86_64-pc-windows-gnu";
      version = "0.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".window_clipboard."0.4.1" = overridableMkRustCrate (profileName: rec {
      name = "window_clipboard";
      version = "0.4.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f6d692d46038c433f9daee7ad8757e002a4248c20b0a3fbc991d99521d3bcb6d"; };
      dependencies = {
        ${ if hostPlatform.isWindows then "clipboard_win" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".clipboard-win."5.4.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "darwin" then "clipboard_macos" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".clipboard_macos."0.1.1" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "emscripten" || hostPlatform.parsed.kernel.name == "ios" || hostPlatform.parsed.kernel.name == "redox") then "clipboard_wayland" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".clipboard_wayland."0.2.2" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "emscripten" || hostPlatform.parsed.kernel.name == "ios" || hostPlatform.parsed.kernel.name == "redox") then "clipboard_x11" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".clipboard_x11."0.4.2" { inherit profileName; }).out;
        raw_window_handle = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".raw-window-handle."0.6.2" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows."0.52.0" = overridableMkRustCrate (profileName: rec {
      name = "windows";
      version = "0.52.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e48a53791691ab099e5e2ad123536d0fff50652600abaf43bbf952894110d0be"; };
      features = builtins.concatLists [
        [ "Win32" ]
        [ "Win32_Foundation" ]
        [ "Win32_Graphics" ]
        [ "Win32_Graphics_Direct3D" ]
        [ "Win32_Graphics_Direct3D12" ]
        [ "Win32_Graphics_Dxgi" ]
        [ "Win32_Graphics_Dxgi_Common" ]
        [ "default" ]
      ];
      dependencies = {
        windows_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-core."0.52.0" { inherit profileName; }).out;
        windows_targets = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.52.6" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows-core."0.52.0" = overridableMkRustCrate (profileName: rec {
      name = "windows-core";
      version = "0.52.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "33ab640c8d7e35bf8ba19b884ba838ceb4fba93a4e8c65a9059d08afcfc683d9"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        windows_targets = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.52.6" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows-registry."0.2.0" = overridableMkRustCrate (profileName: rec {
      name = "windows-registry";
      version = "0.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e400001bb720a623c1c69032f8e3e4cf09984deec740f007dd2b03ec864804b0"; };
      dependencies = {
        windows_result = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-result."0.2.0" { inherit profileName; }).out;
        windows_strings = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-strings."0.1.0" { inherit profileName; }).out;
        windows_targets = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.52.6" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows-result."0.2.0" = overridableMkRustCrate (profileName: rec {
      name = "windows-result";
      version = "0.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1d1043d8214f791817bab27572aaa8af63732e11bf84aa21a45a78d6c317ae0e"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        windows_targets = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.52.6" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows-strings."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "windows-strings";
      version = "0.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4cd9b125c486025df0eabcb585e62173c6c9eddcec5d117d3b6e8c30e2ee4d10"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        windows_result = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-result."0.2.0" { inherit profileName; }).out;
        windows_targets = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.52.6" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.45.0" = overridableMkRustCrate (profileName: rec {
      name = "windows-sys";
      version = "0.45.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "75283be5efb2831d37ea142365f009c02ec203cd29a3ebecbc093d52315b66d0"; };
      features = builtins.concatLists [
        [ "Win32" ]
        [ "Win32_Globalization" ]
        [ "default" ]
      ];
      dependencies = {
        windows_targets = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.42.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.48.0" = overridableMkRustCrate (profileName: rec {
      name = "windows-sys";
      version = "0.48.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9"; };
      features = builtins.concatLists [
        [ "Win32" ]
        [ "Win32_Foundation" ]
        [ "Win32_Globalization" ]
        [ "Win32_Networking" ]
        [ "Win32_Networking_WinSock" ]
        [ "Win32_Security" ]
        [ "Win32_Storage" ]
        [ "Win32_Storage_FileSystem" ]
        [ "Win32_System" ]
        [ "Win32_System_Com" ]
        [ "Win32_System_Diagnostics" ]
        [ "Win32_System_Diagnostics_Debug" ]
        [ "Win32_System_IO" ]
        [ "Win32_System_Pipes" ]
        [ "Win32_System_Registry" ]
        [ "Win32_System_Threading" ]
        [ "Win32_System_Time" ]
        [ "Win32_System_WindowsProgramming" ]
        [ "Win32_UI" ]
        [ "Win32_UI_Shell" ]
        [ "default" ]
      ];
      dependencies = {
        windows_targets = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.48.5" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.52.0" = overridableMkRustCrate (profileName: rec {
      name = "windows-sys";
      version = "0.52.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d"; };
      features = builtins.concatLists [
        [ "Wdk" ]
        [ "Wdk_Foundation" ]
        [ "Wdk_Storage" ]
        [ "Wdk_Storage_FileSystem" ]
        [ "Wdk_System" ]
        [ "Wdk_System_IO" ]
        [ "Win32" ]
        [ "Win32_Devices" ]
        [ "Win32_Devices_HumanInterfaceDevice" ]
        [ "Win32_Foundation" ]
        [ "Win32_Globalization" ]
        [ "Win32_Graphics" ]
        [ "Win32_Graphics_Dwm" ]
        [ "Win32_Graphics_Gdi" ]
        [ "Win32_Media" ]
        [ "Win32_NetworkManagement" ]
        [ "Win32_NetworkManagement_IpHelper" ]
        [ "Win32_Networking" ]
        [ "Win32_Networking_WinSock" ]
        [ "Win32_Security" ]
        [ "Win32_Security_Authorization" ]
        [ "Win32_Storage" ]
        [ "Win32_Storage_FileSystem" ]
        [ "Win32_System" ]
        [ "Win32_System_Com" ]
        [ "Win32_System_Com_StructuredStorage" ]
        [ "Win32_System_Console" ]
        [ "Win32_System_Diagnostics" ]
        [ "Win32_System_Diagnostics_Debug" ]
        [ "Win32_System_IO" ]
        [ "Win32_System_LibraryLoader" ]
        [ "Win32_System_Memory" ]
        [ "Win32_System_Ole" ]
        [ "Win32_System_Pipes" ]
        [ "Win32_System_SystemInformation" ]
        [ "Win32_System_SystemServices" ]
        [ "Win32_System_Threading" ]
        [ "Win32_System_WindowsProgramming" ]
        [ "Win32_UI" ]
        [ "Win32_UI_Accessibility" ]
        [ "Win32_UI_Controls" ]
        [ "Win32_UI_HiDpi" ]
        [ "Win32_UI_Input" ]
        [ "Win32_UI_Input_Ime" ]
        [ "Win32_UI_Input_KeyboardAndMouse" ]
        [ "Win32_UI_Input_Pointer" ]
        [ "Win32_UI_Input_Touch" ]
        [ "Win32_UI_Shell" ]
        [ "Win32_UI_TextServices" ]
        [ "Win32_UI_WindowsAndMessaging" ]
        [ "default" ]
      ];
      dependencies = {
        windows_targets = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.52.6" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.59.0" = overridableMkRustCrate (profileName: rec {
      name = "windows-sys";
      version = "0.59.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b"; };
      features = builtins.concatLists [
        [ "Wdk" ]
        [ "Wdk_Foundation" ]
        [ "Wdk_Storage" ]
        [ "Wdk_Storage_FileSystem" ]
        [ "Win32" ]
        [ "Win32_Foundation" ]
        [ "Win32_Graphics" ]
        [ "Win32_Graphics_Gdi" ]
        [ "Win32_Networking" ]
        [ "Win32_Networking_WinSock" ]
        [ "Win32_Security" ]
        [ "Win32_Security_Authentication" ]
        [ "Win32_Security_Authentication_Identity" ]
        [ "Win32_Security_Credentials" ]
        [ "Win32_Security_Cryptography" ]
        [ "Win32_Storage" ]
        [ "Win32_Storage_FileSystem" ]
        [ "Win32_System" ]
        [ "Win32_System_Com" ]
        [ "Win32_System_Console" ]
        [ "Win32_System_IO" ]
        [ "Win32_System_LibraryLoader" ]
        [ "Win32_System_Memory" ]
        [ "Win32_System_SystemInformation" ]
        [ "Win32_System_Threading" ]
        [ "Win32_System_WindowsProgramming" ]
        [ "Win32_UI" ]
        [ "Win32_UI_Shell" ]
        [ "Win32_UI_WindowsAndMessaging" ]
        [ "default" ]
      ];
      dependencies = {
        windows_targets = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.52.6" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.42.2" = overridableMkRustCrate (profileName: rec {
      name = "windows-targets";
      version = "0.42.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8e5180c00cd44c9b1c88adb3693291f1cd93605ded80c250a75d472756b4d071"; };
      dependencies = {
        ${ if hostPlatform.config == "aarch64-pc-windows-gnullvm" then "windows_aarch64_gnullvm" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_gnullvm."0.42.2" { inherit profileName; }).out;
        ${ if hostPlatform.config == "aarch64-pc-windows-msvc" || hostPlatform.config == "aarch64-uwp-windows-msvc" then "windows_aarch64_msvc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_msvc."0.42.2" { inherit profileName; }).out;
        ${ if hostPlatform.config == "i686-pc-windows-gnu" || hostPlatform.config == "i686-uwp-windows-gnu" then "windows_i686_gnu" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnu."0.42.2" { inherit profileName; }).out;
        ${ if hostPlatform.config == "i686-pc-windows-msvc" || hostPlatform.config == "i686-uwp-windows-msvc" then "windows_i686_msvc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_i686_msvc."0.42.2" { inherit profileName; }).out;
        ${ if hostPlatform.config == "x86_64-pc-windows-gnu" || hostPlatform.config == "x86_64-uwp-windows-gnu" then "windows_x86_64_gnu" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnu."0.42.2" { inherit profileName; }).out;
        ${ if hostPlatform.config == "x86_64-pc-windows-gnullvm" then "windows_x86_64_gnullvm" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnullvm."0.42.2" { inherit profileName; }).out;
        ${ if hostPlatform.config == "x86_64-pc-windows-msvc" || hostPlatform.config == "x86_64-uwp-windows-msvc" then "windows_x86_64_msvc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_msvc."0.42.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.48.5" = overridableMkRustCrate (profileName: rec {
      name = "windows-targets";
      version = "0.48.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c"; };
      dependencies = {
        ${ if hostPlatform.config == "aarch64-pc-windows-gnullvm" then "windows_aarch64_gnullvm" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_gnullvm."0.48.5" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.abi.name == "msvc" then "windows_aarch64_msvc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_msvc."0.48.5" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "i686" && hostPlatform.parsed.abi.name == "gnu" then "windows_i686_gnu" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnu."0.48.5" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "i686" && hostPlatform.parsed.abi.name == "msvc" then "windows_i686_msvc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_i686_msvc."0.48.5" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.abi.name == "gnu" then "windows_x86_64_gnu" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnu."0.48.5" { inherit profileName; }).out;
        ${ if hostPlatform.config == "x86_64-pc-windows-gnullvm" then "windows_x86_64_gnullvm" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnullvm."0.48.5" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.abi.name == "msvc" then "windows_x86_64_msvc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_msvc."0.48.5" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.52.6" = overridableMkRustCrate (profileName: rec {
      name = "windows-targets";
      version = "0.52.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973"; };
      dependencies = {
        ${ if hostPlatform.config == "aarch64-pc-windows-gnullvm" then "windows_aarch64_gnullvm" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_gnullvm."0.52.6" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.abi.name == "msvc" then "windows_aarch64_msvc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_msvc."0.52.6" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "i686" && hostPlatform.parsed.abi.name == "gnu" then "windows_i686_gnu" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnu."0.52.6" { inherit profileName; }).out;
        ${ if hostPlatform.config == "i686-pc-windows-gnullvm" then "windows_i686_gnullvm" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnullvm."0.52.6" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "i686" && hostPlatform.parsed.abi.name == "msvc" then "windows_i686_msvc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_i686_msvc."0.52.6" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.abi.name == "gnu" then "windows_x86_64_gnu" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnu."0.52.6" { inherit profileName; }).out;
        ${ if hostPlatform.config == "x86_64-pc-windows-gnullvm" then "windows_x86_64_gnullvm" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnullvm."0.52.6" { inherit profileName; }).out;
        ${ if (hostPlatform.parsed.cpu.name == "x86_64" || hostPlatform.parsed.cpu.name == "arm64ec") && hostPlatform.parsed.abi.name == "msvc" then "windows_x86_64_msvc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_msvc."0.52.6" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_gnullvm."0.42.2" = overridableMkRustCrate (profileName: rec {
      name = "windows_aarch64_gnullvm";
      version = "0.42.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "597a5118570b68bc08d8d59125332c54f1ba9d9adeedeef5b99b02ba2b0698f8"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_gnullvm."0.48.5" = overridableMkRustCrate (profileName: rec {
      name = "windows_aarch64_gnullvm";
      version = "0.48.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_gnullvm."0.52.6" = overridableMkRustCrate (profileName: rec {
      name = "windows_aarch64_gnullvm";
      version = "0.52.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_msvc."0.42.2" = overridableMkRustCrate (profileName: rec {
      name = "windows_aarch64_msvc";
      version = "0.42.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e08e8864a60f06ef0d0ff4ba04124db8b0fb3be5776a5cd47641e942e58c4d43"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_msvc."0.48.5" = overridableMkRustCrate (profileName: rec {
      name = "windows_aarch64_msvc";
      version = "0.48.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_msvc."0.52.6" = overridableMkRustCrate (profileName: rec {
      name = "windows_aarch64_msvc";
      version = "0.52.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnu."0.42.2" = overridableMkRustCrate (profileName: rec {
      name = "windows_i686_gnu";
      version = "0.42.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c61d927d8da41da96a81f029489353e68739737d3beca43145c8afec9a31a84f"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnu."0.48.5" = overridableMkRustCrate (profileName: rec {
      name = "windows_i686_gnu";
      version = "0.48.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnu."0.52.6" = overridableMkRustCrate (profileName: rec {
      name = "windows_i686_gnu";
      version = "0.52.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnullvm."0.52.6" = overridableMkRustCrate (profileName: rec {
      name = "windows_i686_gnullvm";
      version = "0.52.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_i686_msvc."0.42.2" = overridableMkRustCrate (profileName: rec {
      name = "windows_i686_msvc";
      version = "0.42.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "44d840b6ec649f480a41c8d80f9c65108b92d89345dd94027bfe06ac444d1060"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_i686_msvc."0.48.5" = overridableMkRustCrate (profileName: rec {
      name = "windows_i686_msvc";
      version = "0.48.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_i686_msvc."0.52.6" = overridableMkRustCrate (profileName: rec {
      name = "windows_i686_msvc";
      version = "0.52.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnu."0.42.2" = overridableMkRustCrate (profileName: rec {
      name = "windows_x86_64_gnu";
      version = "0.42.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8de912b8b8feb55c064867cf047dda097f92d51efad5b491dfb98f6bbb70cb36"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnu."0.48.5" = overridableMkRustCrate (profileName: rec {
      name = "windows_x86_64_gnu";
      version = "0.48.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnu."0.52.6" = overridableMkRustCrate (profileName: rec {
      name = "windows_x86_64_gnu";
      version = "0.52.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnullvm."0.42.2" = overridableMkRustCrate (profileName: rec {
      name = "windows_x86_64_gnullvm";
      version = "0.42.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "26d41b46a36d453748aedef1486d5c7a85db22e56aff34643984ea85514e94a3"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnullvm."0.48.5" = overridableMkRustCrate (profileName: rec {
      name = "windows_x86_64_gnullvm";
      version = "0.48.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnullvm."0.52.6" = overridableMkRustCrate (profileName: rec {
      name = "windows_x86_64_gnullvm";
      version = "0.52.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_msvc."0.42.2" = overridableMkRustCrate (profileName: rec {
      name = "windows_x86_64_msvc";
      version = "0.42.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9aec5da331524158c6d1a4ac0ab1541149c0b9505fde06423b02f5ef0106b9f0"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_msvc."0.48.5" = overridableMkRustCrate (profileName: rec {
      name = "windows_x86_64_msvc";
      version = "0.48.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_msvc."0.52.6" = overridableMkRustCrate (profileName: rec {
      name = "windows_x86_64_msvc";
      version = "0.52.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".winit."0.30.5" = overridableMkRustCrate (profileName: rec {
      name = "winit";
      version = "0.30.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0be9e76a1f1077e04a411f0b989cbd3c93339e1771cb41e71ac4aee95bfd2c67"; };
      features = builtins.concatLists [
        [ "ahash" ]
        [ "bytemuck" ]
        [ "default" ]
        [ "memmap2" ]
        [ "percent-encoding" ]
        [ "rwh_06" ]
        [ "sctk" ]
        [ "sctk-adwaita" ]
        [ "wayland" ]
        [ "wayland-backend" ]
        [ "wayland-client" ]
        [ "wayland-csd-adwaita" ]
        [ "wayland-dlopen" ]
        [ "wayland-protocols" ]
        [ "wayland-protocols-plasma" ]
        [ "x11" ]
        [ "x11-dl" ]
        [ "x11rb" ]
      ];
      dependencies = {
        ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "redox" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "ios" || hostPlatform.parsed.kernel.name == "darwin") then "ahash" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ahash."0.8.11" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "android" then "android_activity" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".android-activity."0.6.0" { inherit profileName; }).out;
        ${ if false then "atomic_waker" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".atomic-waker."1.1.2" { inherit profileName; }).out;
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "darwin" then "block2" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".block2."0.5.1" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "redox" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "ios" || hostPlatform.parsed.kernel.name == "darwin") then "bytemuck" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytemuck."1.19.0" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "redox" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "ios" || hostPlatform.parsed.kernel.name == "darwin") then "calloop" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".calloop."0.13.0" { inherit profileName; }).out;
        ${ if false then "concurrent_queue" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".concurrent-queue."2.5.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "ios" || hostPlatform.parsed.kernel.name == "darwin" then "core_foundation" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation."0.9.4" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "darwin" then "core_graphics" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-graphics."0.23.2" { inherit profileName; }).out;
        cursor_icon = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cursor-icon."1.1.0" { inherit profileName; }).out;
        dpi = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dpi."0.1.1" { inherit profileName; }).out;
        ${ if false then "js_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.72" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "redox" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "ios" || hostPlatform.parsed.kernel.name == "darwin") then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "redox" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "ios" || hostPlatform.parsed.kernel.name == "darwin") then "memmap2" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memmap2."0.9.5" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "android" then "ndk" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ndk."0.9.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "ios" || hostPlatform.parsed.kernel.name == "darwin" then "objc2" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2."0.5.2" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "darwin" then "objc2_app_kit" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-app-kit."0.2.2" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "ios" || hostPlatform.parsed.kernel.name == "darwin" then "objc2_foundation" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-foundation."0.2.2" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "ios" then "objc2_ui_kit" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".objc2-ui-kit."0.2.2" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "redox" then "orbclient" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".orbclient."0.3.48" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "redox" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "ios" || hostPlatform.parsed.kernel.name == "darwin") then "percent_encoding" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.3.1" { inherit profileName; }).out;
        ${ if false then "pin_project" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project."1.1.7" { inherit profileName; }).out;
        rwh_06 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".raw-window-handle."0.6.2" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.4.1" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "redox" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "ios" || hostPlatform.parsed.kernel.name == "darwin") then "rustix" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustix."0.38.37" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "redox" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "ios" || hostPlatform.parsed.kernel.name == "darwin") then "sctk_adwaita" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sctk-adwaita."0.10.1" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "redox" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "ios" || hostPlatform.parsed.kernel.name == "darwin") then "sctk" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".smithay-client-toolkit."0.19.2" { inherit profileName; }).out;
        smol_str = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".smol_str."0.2.2" { inherit profileName; }).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "windows" then "unicode_segmentation" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-segmentation."1.12.0" { inherit profileName; }).out;
        ${ if false then "wasm_bindgen" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.95" { inherit profileName; }).out;
        ${ if false then "wasm_bindgen_futures" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-futures."0.4.45" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "redox" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "ios" || hostPlatform.parsed.kernel.name == "darwin") then "wayland_backend" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wayland-backend."0.3.7" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "redox" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "ios" || hostPlatform.parsed.kernel.name == "darwin") then "wayland_client" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wayland-client."0.31.7" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "redox" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "ios" || hostPlatform.parsed.kernel.name == "darwin") then "wayland_protocols" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wayland-protocols."0.32.5" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "redox" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "ios" || hostPlatform.parsed.kernel.name == "darwin") then "wayland_protocols_plasma" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wayland-protocols-plasma."0.3.5" { inherit profileName; }).out;
        ${ if false then "web_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.72" { inherit profileName; }).out;
        ${ if false then "web_time" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".web-time."1.1.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "windows" then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.52.0" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "redox" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "ios" || hostPlatform.parsed.kernel.name == "darwin") then "x11_dl" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".x11-dl."2.21.0" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "redox" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "ios" || hostPlatform.parsed.kernel.name == "darwin") then "x11rb" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".x11rb."0.13.1" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "redox" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "ios" || hostPlatform.parsed.kernel.name == "darwin") then "xkbcommon_dl" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".xkbcommon-dl."0.4.2" { inherit profileName; }).out;
      };
      buildDependencies = {
        cfg_aliases = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg_aliases."0.2.1" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".winnow."0.6.20" = overridableMkRustCrate (profileName: rec {
      name = "winnow";
      version = "0.6.20";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "36c1fec1a2bb5866f07c25f68c26e565c4c200aebb96d7e55710c19d3e8ac49b"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".winreg."0.10.1" = overridableMkRustCrate (profileName: rec {
      name = "winreg";
      version = "0.10.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "80d0f4e272c85def139476380b12f9ac60926689dd2e01d4923222f40580869d"; };
      dependencies = {
        winapi = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".winreg."0.50.0" = overridableMkRustCrate (profileName: rec {
      name = "winreg";
      version = "0.50.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "524e57b2c537c0f9b1e69f1965311ec12182b4122e45035b1508cd24d2adadb1"; };
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        windows_sys = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.48.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ws_stream_wasm."0.7.4" = overridableMkRustCrate (profileName: rec {
      name = "ws_stream_wasm";
      version = "0.7.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7999f5f4217fe3818726b66257a4475f71e74ffd190776ad053fa159e50737f5"; };
      dependencies = {
        async_io_stream = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".async_io_stream."0.3.3" { inherit profileName; }).out;
        futures = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.31" { inherit profileName; }).out;
        js_sys = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.72" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        pharos = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pharos."0.5.3" { inherit profileName; }).out;
        send_wrapper = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".send_wrapper."0.6.0" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
        wasm_bindgen = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.95" { inherit profileName; }).out;
        wasm_bindgen_futures = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-futures."0.4.45" { inherit profileName; }).out;
        web_sys = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.72" { inherit profileName; }).out;
      };
      buildDependencies = {
        rustc_version = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc_version."0.4.1" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wyz."0.5.1" = overridableMkRustCrate (profileName: rec {
      name = "wyz";
      version = "0.5.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "05f360fc0b24296329c78fda852a1e9ae82de9cf7b27dae4b7f62f118f77b9ed"; };
      dependencies = {
        tap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tap."1.0.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".x11-dl."2.21.0" = overridableMkRustCrate (profileName: rec {
      name = "x11-dl";
      version = "2.21.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "38735924fedd5314a6e548792904ed8c6de6636285cb9fec04d5b1db85c1516f"; };
      dependencies = {
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
      };
      buildDependencies = {
        pkg_config = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.31" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".x11rb."0.13.1" = overridableMkRustCrate (profileName: rec {
      name = "x11rb";
      version = "0.13.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "5d91ffca73ee7f68ce055750bf9f6eca0780b8c85eff9bc046a3b0da41755e12"; };
      features = builtins.concatLists [
        [ "allow-unsafe-code" ]
        [ "as-raw-xcb-connection" ]
        [ "dl-libxcb" ]
        [ "libc" ]
        [ "libloading" ]
        [ "once_cell" ]
        [ "randr" ]
        [ "render" ]
        [ "resource_manager" ]
        [ "shape" ]
        [ "shm" ]
        [ "xfixes" ]
        [ "xinput" ]
        [ "xkb" ]
      ];
      dependencies = {
        as_raw_xcb_connection = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".as-raw-xcb-connection."1.0.1" { inherit profileName; }).out;
        ${ if !hostPlatform.isUnix then "gethostname" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".gethostname."0.4.3" { inherit profileName; }).out;
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        libloading = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libloading."0.8.5" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
        rustix = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustix."0.38.37" { inherit profileName; }).out;
        x11rb_protocol = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".x11rb-protocol."0.13.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".x11rb-protocol."0.13.1" = overridableMkRustCrate (profileName: rec {
      name = "x11rb-protocol";
      version = "0.13.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ec107c4503ea0b4a98ef47356329af139c0a4f7750e621cf2973cd3385ebcb3d"; };
      features = builtins.concatLists [
        [ "randr" ]
        [ "render" ]
        [ "resource_manager" ]
        [ "shape" ]
        [ "shm" ]
        [ "std" ]
        [ "xfixes" ]
        [ "xinput" ]
        [ "xkb" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".xcursor."0.3.8" = overridableMkRustCrate (profileName: rec {
      name = "xcursor";
      version = "0.3.8";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0ef33da6b1660b4ddbfb3aef0ade110c8b8a781a3b6382fa5f2b5b040fd55f61"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".xdg-home."1.3.0" = overridableMkRustCrate (profileName: rec {
      name = "xdg-home";
      version = "1.3.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ec1cdab258fb55c0da61328dc52c8764709b249011b2cad0454c72f0bf10a1f6"; };
      dependencies = {
        ${ if hostPlatform.isUnix then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.161" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.59.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".xkbcommon-dl."0.4.2" = overridableMkRustCrate (profileName: rec {
      name = "xkbcommon-dl";
      version = "0.4.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d039de8032a9a8856a6be89cea3e5d12fdd82306ab7c94d74e6deab2460651c5"; };
      features = builtins.concatLists [
        [ "x11" ]
      ];
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" { inherit profileName; }).out;
        dlib = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dlib."0.5.2" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
        xkeysym = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".xkeysym."0.2.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".xkeysym."0.2.1" = overridableMkRustCrate (profileName: rec {
      name = "xkeysym";
      version = "0.2.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b9cc00251562a284751c9973bace760d86c0276c471b4be569fe6b068ee97a56"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".xml-rs."0.8.22" = overridableMkRustCrate (profileName: rec {
      name = "xml-rs";
      version = "0.8.22";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "af4e2e2f7cba5a093896c1e150fbfe177d1883e7448200efb81d40b9d339ef26"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".yazi."0.1.6" = overridableMkRustCrate (profileName: rec {
      name = "yazi";
      version = "0.1.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c94451ac9513335b5e23d7a8a2b61a7102398b8cca5160829d313e84c9d98be1"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".yoke."0.7.4" = overridableMkRustCrate (profileName: rec {
      name = "yoke";
      version = "0.7.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6c5b1314b079b0930c31e3af543d8ee1757b1951ae1e1565ec704403a7240ca5"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "derive" ]
        [ "zerofrom" ]
      ];
      dependencies = {
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        stable_deref_trait = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".stable_deref_trait."1.2.0" { inherit profileName; }).out;
        yoke_derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".yoke-derive."0.7.4" { profileName = "__noProfile"; }).out;
        zerofrom = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".zerofrom."0.1.4" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".yoke-derive."0.7.4" = overridableMkRustCrate (profileName: rec {
      name = "yoke-derive";
      version = "0.7.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "28cc31741b18cb6f1d5ff12f5b7523e3d6eb0852bbbad19d73905511d9849b95"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
        synstructure = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".synstructure."0.13.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".zbus."4.4.0" = overridableMkRustCrate (profileName: rec {
      name = "zbus";
      version = "4.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "bb97012beadd29e654708a0fdb4c84bc046f537aecfde2c3ee0a9e4b4d48c725"; };
      features = builtins.concatLists [
        [ "async-executor" ]
        [ "async-fs" ]
        [ "async-io" ]
        [ "async-lock" ]
        [ "async-task" ]
        [ "blocking" ]
        [ "default" ]
      ];
      dependencies = {
        async_broadcast = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-broadcast."0.7.1" { inherit profileName; }).out;
        async_executor = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-executor."1.13.1" { inherit profileName; }).out;
        async_fs = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-fs."2.1.2" { inherit profileName; }).out;
        async_io = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-io."2.3.4" { inherit profileName; }).out;
        async_lock = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-lock."3.4.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "darwin" then "async_process" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-process."2.3.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.isWindows then "async_recursion" else null } = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-recursion."1.1.1" { profileName = "__noProfile"; }).out;
        async_task = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-task."4.7.1" { inherit profileName; }).out;
        async_trait = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.83" { profileName = "__noProfile"; }).out;
        blocking = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".blocking."1.6.1" { inherit profileName; }).out;
        enumflags2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".enumflags2."0.7.10" { inherit profileName; }).out;
        event_listener = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".event-listener."5.3.1" { inherit profileName; }).out;
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.31" { inherit profileName; }).out;
        futures_sink = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.31" { inherit profileName; }).out;
        futures_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.31" { inherit profileName; }).out;
        hex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hex."0.4.3" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix then "nix" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".nix."0.29.0" { inherit profileName; }).out;
        ordered_stream = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ordered-stream."0.2.0" { inherit profileName; }).out;
        rand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        serde_repr = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_repr."0.1.19" { profileName = "__noProfile"; }).out;
        sha1 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha1."0.10.6" { inherit profileName; }).out;
        static_assertions = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".static_assertions."1.1.0" { inherit profileName; }).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "uds_windows" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".uds_windows."1.1.0" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.52.0" { inherit profileName; }).out;
        xdg_home = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".xdg-home."1.3.0" { inherit profileName; }).out;
        zbus_macros = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".zbus_macros."4.4.0" { profileName = "__noProfile"; }).out;
        zbus_names = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".zbus_names."3.0.0" { inherit profileName; }).out;
        zvariant = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".zvariant."4.2.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".zbus_macros."4.4.0" = overridableMkRustCrate (profileName: rec {
      name = "zbus_macros";
      version = "4.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "267db9407081e90bbfa46d841d3cbc60f59c0351838c4bc65199ecd79ab1983e"; };
      dependencies = {
        proc_macro_crate = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro-crate."3.2.0" { inherit profileName; }).out;
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
        zvariant_utils = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".zvariant_utils."2.1.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".zbus_names."3.0.0" = overridableMkRustCrate (profileName: rec {
      name = "zbus_names";
      version = "3.0.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4b9b1fef7d021261cc16cba64c351d291b715febe0fa10dc3a443ac5a5022e6c"; };
      dependencies = {
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        static_assertions = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".static_assertions."1.1.0" { inherit profileName; }).out;
        zvariant = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".zvariant."4.2.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".zeno."0.2.3" = overridableMkRustCrate (profileName: rec {
      name = "zeno";
      version = "0.2.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "dd15f8e0dbb966fd9245e7498c7e9e5055d9e5c8b676b95bd67091cd11a1e697"; };
      features = builtins.concatLists [
        [ "eval" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".zerocopy."0.7.35" = overridableMkRustCrate (profileName: rec {
      name = "zerocopy";
      version = "0.7.35";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1b9b4fd18abc82b8136838da5d50bae7bdea537c574d8dc1a34ed098d6c166f0"; };
      features = builtins.concatLists [
        [ "byteorder" ]
        [ "default" ]
        [ "derive" ]
        [ "simd" ]
        [ "zerocopy-derive" ]
      ];
      dependencies = {
        byteorder = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.5.0" { inherit profileName; }).out;
        zerocopy_derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".zerocopy-derive."0.7.35" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".zerocopy-derive."0.7.35" = overridableMkRustCrate (profileName: rec {
      name = "zerocopy-derive";
      version = "0.7.35";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "fa4f8080344d4671fb4e831a13ad1e68092748387dfc4f55e356242fae12ce3e"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".zerofrom."0.1.4" = overridableMkRustCrate (profileName: rec {
      name = "zerofrom";
      version = "0.1.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "91ec111ce797d0e0784a1116d0ddcdbea84322cd79e5d5ad173daeba4f93ab55"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "derive" ]
      ];
      dependencies = {
        zerofrom_derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".zerofrom-derive."0.1.4" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".zerofrom-derive."0.1.4" = overridableMkRustCrate (profileName: rec {
      name = "zerofrom-derive";
      version = "0.1.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0ea7b4a3637ea8669cedf0f1fd5c286a17f3de97b8dd5a70a6c167a1730e63a5"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
        synstructure = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".synstructure."0.13.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".zeroize."1.8.1" = overridableMkRustCrate (profileName: rec {
      name = "zeroize";
      version = "1.8.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ced3678a2879b30306d323f4542626697a464a97c0a07c9aebf7ebca65cd4dde"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".zip."1.1.4" = overridableMkRustCrate (profileName: rec {
      name = "zip";
      version = "1.1.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9cc23c04387f4da0374be4533ad1208cbb091d5c11d070dfef13676ad6497164"; };
      dependencies = {
        ${ if false then "arbitrary" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".arbitrary."1.3.2" { inherit profileName; }).out;
        crc32fast = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crc32fast."1.4.2" { inherit profileName; }).out;
        ${ if (hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l") && hostPlatform.parsed.cpu.bits == 32 || hostPlatform.parsed.cpu.name == "mips" || hostPlatform.parsed.cpu.name == "powerpc" then "crossbeam_utils" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.20" { inherit profileName; }).out;
        displaydoc = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".displaydoc."0.2.5" { profileName = "__noProfile"; }).out;
        indexmap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."2.6.0" { inherit profileName; }).out;
        num_enum = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_enum."0.7.3" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.65" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".zvariant."4.2.0" = overridableMkRustCrate (profileName: rec {
      name = "zvariant";
      version = "4.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2084290ab9a1c471c38fc524945837734fbf124487e105daec2bb57fd48c81fe"; };
      features = builtins.concatLists [
        [ "enumflags2" ]
      ];
      dependencies = {
        endi = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".endi."1.1.0" { inherit profileName; }).out;
        enumflags2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".enumflags2."0.7.10" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.213" { inherit profileName; }).out;
        static_assertions = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".static_assertions."1.1.0" { inherit profileName; }).out;
        zvariant_derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".zvariant_derive."4.2.0" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".zvariant_derive."4.2.0" = overridableMkRustCrate (profileName: rec {
      name = "zvariant_derive";
      version = "4.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "73e2ba546bda683a90652bac4a279bc146adad1386f25379cf73200d2002c449"; };
      dependencies = {
        proc_macro_crate = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro-crate."3.2.0" { inherit profileName; }).out;
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
        zvariant_utils = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".zvariant_utils."2.1.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".zvariant_utils."2.1.0" = overridableMkRustCrate (profileName: rec {
      name = "zvariant_utils";
      version = "2.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c51bcff7cc3dbb5055396bcf774748c3dab426b4b8659046963523cee4808340"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.89" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.85" { inherit profileName; }).out;
      };
    });

  }
